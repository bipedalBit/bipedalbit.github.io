{
    "version": "https://jsonfeed.org/version/1",
    "title": "Hacking to the gate! • All posts by \"minio\" tag",
    "description": "Bipedal Bit's blog",
    "home_page_url": "https://bipedalbit.net",
    "items": [
        {
            "id": "https://bipedalbit.net/2025/06/07/%E5%86%8D%E8%B0%88hexo%E9%9D%99%E6%80%81%E7%AB%99%E6%90%AD%E5%BB%BA/",
            "url": "https://bipedalbit.net/2025/06/07/%E5%86%8D%E8%B0%88hexo%E9%9D%99%E6%80%81%E7%AB%99%E6%90%AD%E5%BB%BA/",
            "title": "再谈hexo静态站搭建",
            "date_published": "2025-06-07T15:12:47.000Z",
            "content_html": "<p>记录一下在2016年hexo静态站基础上完成站点翻新的主要思路和过程。这次翻新主要包含：hexo主题的审美升级，图床从七牛迁移到自建方案，评论插件从多说迁移到自建方案。</p>\n<span id=\"more\"></span>\n<h1 id=\"回顾\"><a href=\"#回顾\" class=\"headerlink\" title=\"回顾\"></a>回顾</h1><p>不是头一次谈hexo静态站搭建了，2016年就写了相关的博客，非常耐心事无巨细地介绍过<a href=\"https://bipedalbit.net/2016/04/24/hexo%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA/\">当时的搭建方案</a>。</p>\n<p>紧接着开了自己的VPS，于是又写文介绍了<a href=\"https://bipedalbit.net/2016/04/25/%E5%88%A9%E7%94%A8Dropbox%E5%AE%9E%E7%8E%B0%E5%AE%9E%E6%97%B6%E5%90%8C%E6%AD%A5%E7%9A%84%E9%9D%99%E6%80%81%E7%AB%99/\">迭代方案</a>，在VPS上做了镜像站部署，用dropbox做静态资源同步。现在由于国内不搭梯子访问github已经不稳定，VPS上的静态站反而成了主站，github pages上那个站成替身了哈哈。</p>\n<h1 id=\"概述\"><a href=\"#概述\" class=\"headerlink\" title=\"概述\"></a>概述</h1><p>新的静态站其实主要更新了3个点：</p>\n<ul>\n<li><p>主题：landscape-plus &#x3D;&gt; fluid</p>\n</li>\n<li><p>图床：七牛 &#x3D;&gt; 自建minio+cdn</p>\n</li>\n<li><p>评论插件：多说 &#x3D;&gt; 自建waline</p>\n</li>\n</ul>\n<h1 id=\"hexo\"><a href=\"#hexo\" class=\"headerlink\" title=\"hexo\"></a>hexo</h1><p>很幸运，在旧笔记本上居然翻到了完整未损坏的当年的hexo项目目录，不过其实要装修个人站的话，只需要把站里的markdown文章救回来就好，反正外面的静态站框架还是会用hexo。</p>\n<p>说起来，hexo这个静态站框架也是很经久不衰，虽然插件和主题消亡了不少个，但框架本身还在持续迭代，社区也还在活跃，一直出新的插件和主题，简直跟sublime text有一拼，我也是真爱掺和这种自由度高的DIY项目，怕是早晚要入PCB板、3D打印的坑。</p>\n<p>看了眼<a href=\"https://hexo.io/docs/commands\">hexo的新官方文档</a>，命令行用法没什么变化，项目结构也没变化，但比起9年前（Σ(⊙▽⊙”这就是成年人的世界吗？好吓人的时间尺度），除了github pages，适配了一些新的免费静态站托管平台：</p>\n<ul>\n<li><p>gitlab pages：依赖可用的gitlab，gitlab知道吧？github开源对标方案。</p>\n</li>\n<li><p><a href=\"https://www.heroku.com/\">Heroku</a>：一个可以免费托管全栈应用的PaaS平台，有每月白嫖小时数，应用有些休眠问题要解决。</p>\n</li>\n<li><p><a href=\"https://www.netlify.com/about/\">Netlify</a>：SaaS托管平台。</p>\n</li>\n<li><p><a href=\"https://vercel.com/\">Vercel</a>：前端应用托管平台，有白嫖流量，但好像是固定额度，不是每月送额度。</p>\n</li>\n<li><p><a href=\"https://rss3.io/\">RSS3</a>：就是基于web3那一套做的RSS托管，简单理解就是IPFS上放静态资源，区块链代币支付存储和基建维护费。IPFS这个存储方案嘛我调研过，彻底去中心，可靠、近似真·持久化，IO性能还OK，但是存储成本其实比各大云厂的对象存储还贵一些，考虑到赛博活菩萨甚至有可以白嫖的对象存储，IPFS吧就有点鸡肋，现在更多是用来破审核，偷摸分享些灰色地带的资源。</p>\n</li>\n<li><p>一些纯资源同步工具：Rsync、FTPSync、SFTP。</p>\n</li>\n<li><p>还提了一嘴，其他类似的静态资源托管方案可以自己同步hexo项目的public目录内容即可，比如我的VPS+dropbox方案。</p>\n</li>\n</ul>\n<p>hexo的项目结构带大家熟悉一下：</p>\n<figure class=\"highlight nix\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs nix\">.<br>├── _config.fluid.yml<br>├── _config.landscape.yml<br>├── _config.yml<br>├── db.json<br>├── node_modules<span class=\"hljs-symbol\">/</span><br>├── package.json<br>├── package-lock.json<br>├── public<span class=\"hljs-symbol\">/</span><br>├── scaffolds<span class=\"hljs-symbol\">/</span><br>│   ├── draft.md<br>│   ├── page.md<br>│   └── post.md<br>├── source<span class=\"hljs-symbol\">/</span><br>│   ├── about<span class=\"hljs-symbol\">/</span><br>│   │   └── index.md<br>│   ├── CNAME<br>│   ├── _drafts<span class=\"hljs-symbol\">/</span><br>│   ├── img<span class=\"hljs-symbol\">/</span><br>│   └── _posts<span class=\"hljs-symbol\">/</span><br>└── themes<span class=\"hljs-operator\">/</span><br></code></pre></td></tr></table></figure>\n\n<ul>\n<li><p><code>_config.yml</code>：这是整个hexo项目的配置文件</p>\n</li>\n<li><p><code>_config.landscape.yml</code>：这是landsacpe主题的hexo项目配置文件，landscape是hexo项目的默认主体，主题配置文件一般相对于项目配置文件会多出一些配置项，这就是主题的发挥空间。主题配置文件中的配置优先级高于项目配置，所以跟主题无关的项目配置可以配在<code>_config.yml</code>里，主题特有的配置配在主题配置文件里，方便随时换主题。</p>\n</li>\n<li><p><code>_config.fluid.yml</code>：这是我现在用的<a href=\"https://hexo.fluid-dev.com/docs/start/#%E4%B8%BB%E9%A2%98%E7%AE%80%E4%BB%8B\">fluid主题</a>的配置文件。</p>\n</li>\n<li><p>几个json文件和<code>node_modules/</code>目录理解成项目运行时环境就好，包括了hexo框架本身、插件和主题的实现。迁移hexo项目时，可以删掉<code>node_modules/</code>目录，靠json文件能重建项目运行时资源。</p>\n</li>\n<li><p><code>themes/</code>目录是用来放<code>git clone</code>下来的主题的，不是很冷门的主题的话，直接用命令安装到项目的运行时资源里就行。</p>\n</li>\n<li><p><code>public/</code>目录用来放hexo框架生成的网站静态资源，可以直接把这个目录当网站根目录，拿去部署网站。</p>\n</li>\n<li><p><code>scaffolds/</code>目录，字面意思是脚手架，其实是用来放几种markdown文件的模板，用生成markdown文件时会根据这些模板做一些内容初始化，我是还没有做什么修改。</p>\n</li>\n<li><p><code>source/</code>目录是项目的内容目录，其中的markdown文件会生成对应静态资源后搬到<code>public/</code>目录中，其他目录会原样搬到<code>public/</code>目录中。</p>\n</li>\n<li><p><code>source/about/index.md</code>用来创建关于页。</p>\n</li>\n<li><p><code>source/_drafts</code>目录用来放文章草稿，不会生成静态资源。</p>\n</li>\n<li><p><code>source/_posts</code>目录用来放文章正文，会生成静态资源。</p>\n</li>\n</ul>\n<p>hexo框架和fluid我就不细讲了，效果可以看我的静态站，用法可以看官方文档学习。</p>\n<h1 id=\"图床\"><a href=\"#图床\" class=\"headerlink\" title=\"图床\"></a>图床</h1><p>静态站的头图、文章插图都会用到一些比较大的图片资源，这些资源如果跟其他静态资源放在一起，会有几个缺点：</p>\n<ol>\n<li><p>图片可能越攒越多，对静态站的托管平台造成磁盘空间压力。静态站内的静态资源我是用dropbox同步，所以先于磁盘空间承压的瓶颈点是dropbox容量，这个对我影响比较大。</p>\n</li>\n<li><p>向静态站托管平台同步图片文件渠道通常比较受限，不能随心所欲，不那么方便日常攒图随时更新。这点上用dropbox倒是还算方便。</p>\n</li>\n<li><p>图片在静态站内部，客户端拉取资源需要走站域名，如果你有多个站，不方便跨站共享图，可能会有跨域问题。</p>\n</li>\n<li><p>图片的IO会占据静态站在托管平台的大部分IO带宽，如果你的IO带宽很有限或者流量受限，就比较危险了。有人说可以上CDN，是能缓解不少，但资源更新比较频繁的话，CDN回源也会频繁，还是会吃IO。我VPS带宽、流量可观，所以这点倒是无所谓。</p>\n</li>\n</ol>\n<p>长远考虑，我需要使用独立的、配有CDN的图床。</p>\n<p>上一版静态站，我的图床是七牛图床，当时七牛提供子域名给每个用户空间，现在七牛要求用户自行绑定备案域名。备案可太麻烦了，我选择换方案。</p>\n<p>有人安利过cloudfare的R2存储，虽然可以白嫖，但cloudfare国内被白嫖太多，CDN国内节点经常会负载过高变卡甚至断连。正巧我有了NAS这个便宜宽敞的存储空间，我选择自建对象存储，内网穿透出去作为图床，自配CDN。</p>\n<h2 id=\"minio\"><a href=\"#minio\" class=\"headerlink\" title=\"minio\"></a>minio</h2><p><a href=\"https://min.io/docs/minio/container/index.html\">minio</a>是Amazon S3对象存储的开源对标项目。minio可以用docker容器部署，我的群晖NAS支持docker容器，我在搭open-webui时有现成的<a href=\"https://bipedalbit.net/2025/05/28/%E6%90%AD%E5%BB%BA%E7%A7%81%E6%9C%89LLM%E5%8A%A9%E6%89%8B%E5%B9%B3%E5%8F%B0/#5-2-3-frpc\">frp内网穿透方案</a>在公网暴露minio的API，这不就妥了。</p>\n<p>minio还是用docker-compose部署：</p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs yaml\"><span class=\"hljs-attr\">minio:</span><br>    <span class=\"hljs-attr\">image:</span> <span class=\"hljs-string\">ghcr.io/minio/minio:RELEASE.2025-04-22T22-12-26Z</span><br>    <span class=\"hljs-attr\">container_name:</span> <span class=\"hljs-string\">minio</span><br>    <span class=\"hljs-attr\">volumes:</span><br>      <span class=\"hljs-bullet\">-</span> <span class=\"hljs-string\">./data:/data</span><br>      <span class=\"hljs-bullet\">-</span> <span class=\"hljs-string\">./config:/root/.minio</span><br>    <span class=\"hljs-attr\">ports:</span><br>      <span class=\"hljs-bullet\">-</span> <span class=\"hljs-number\">9000</span><span class=\"hljs-string\">:9000</span><br>      <span class=\"hljs-bullet\">-</span> <span class=\"hljs-number\">9001</span><span class=\"hljs-string\">:9001</span><br>    <span class=\"hljs-attr\">environment:</span><br>      <span class=\"hljs-bullet\">-</span> <span class=\"hljs-string\">&#x27;MINIO_ROOT_USER=bipedalbit&#x27;</span><br>      <span class=\"hljs-bullet\">-</span> <span class=\"hljs-string\">&#x27;MINIO_ROOT_PASSWORD=****&#x27;</span><br>    <span class=\"hljs-attr\">restart:</span> <span class=\"hljs-string\">unless-stopped</span><br>    <span class=\"hljs-attr\">command:</span> [<span class=\"hljs-string\">&quot;server /data --console-address :9001&quot;</span>]<br></code></pre></td></tr></table></figure>\n<p><strong>注意2025.5.24发布的minio更新版本中，把minio的web控制台功能从社区版代码里移除了：<a href=\"https://github.com/minio/minio/releases/tag/RELEASE.2025-05-24T17-08-30Z\">RELEASE.2025-05-24T17-08-30Z</a></strong></p>\n<p><strong>挪到商业版里了，挣钱嘛，不寒碜。所以我这里没有用latest镜像，而是用了还有web控制台的最后一个版本。</strong></p>\n<p><strong><code>--console-address</code>如果不指定，会在每次启动容器时随机变化。</strong></p>\n<p>web控制台端口我不暴露到公网，安全保障。控制台界面跟普通S3对象存储的界面大同小异，能建桶，能配用户策略、桶策略，能配跨域白名单，能在界面操作桶文件。</p>\n<p><img src=\"https://cdn.minio.bipedalbit.net/bipedalbit-net-images/minio/minio_2025-06-07_20-38-12.png\" alt=\"minio登录页\"><br><img src=\"https://cdn.minio.bipedalbit.net/bipedalbit-net-images/minio/minio_2025-06-07_20-38-43.png\" alt=\"minio桶列表\"><br><img src=\"https://cdn.minio.bipedalbit.net/bipedalbit-net-images/minio/minio_2025-06-07_20-39-14.png\" alt=\"minio桶详情\"></p>\n<h2 id=\"CDN\"><a href=\"#CDN\" class=\"headerlink\" title=\"CDN\"></a>CDN</h2><p>有了对象存储，接下来就是选一个全球都有节点，不至于卡的、白嫖额度多的CDN。公布答案吧，我选了<a href=\"https://console.lightcdn.com/cdnResources\">LightCDN</a>，这家CDN的卖点是尽量让冷门区域也有节点覆盖，所以全球加速效果都不会太差，但也不会太快，对我来说足够了。</p>\n<p><img src=\"https://cdn.minio.bipedalbit.net/bipedalbit-net-images/lightcdn/lightcdn_2025-06-07_21-33-43.png\" alt=\"lightcdn请求统计\"><br><img src=\"https://cdn.minio.bipedalbit.net/bipedalbit-net-images/lightcdn/lightcdn_2025-06-07_21-34-38.png\" alt=\"lightcdn费用统计\"></p>\n<h1 id=\"Waline\"><a href=\"#Waline\" class=\"headerlink\" title=\"Waline\"></a>Waline</h1><p>多说评论插件挂了有一阵子了，一直没顾上换新方案。时间尺度一拉长，就发现依赖第三方服务的插件还是欠缺稳定性，不如自建。</p>\n<p>关于<a href=\"https://waline.js.org/\">waline</a>，我简要介绍一下：</p>\n<ul>\n<li><p>hexo的fluid主题对waline有适配支持，不需要手动做代码嵌入</p>\n</li>\n<li><p><a href=\"https://waline.js.org/guide/features/\">功能挺全</a>：</p>\n<ul>\n<li><p>能做基于Markdown的富文本评论编辑，支持微博表情</p>\n</li>\n<li><p>支持评论后台审核</p>\n</li>\n<li><p>支持匿名评论和用户注册</p>\n</li>\n<li><p>支持多语言界面</p>\n</li>\n<li><p>支持页面浏览量和评论数统计</p>\n</li>\n<li><p>支持邮件、微信、QQ、Telegram、Discord、飞书等各种webhook通知</p>\n</li>\n</ul>\n</li>\n<li><p><a href=\"https://waline.js.org/guide/database.html\">数据库部分</a>：可以有多种选择，SaaS可以用LeanCloud，DB就多了，MongoDB、MYSQL、TiDB、SQLite、PostgreSQL、腾讯的CloudBase，甚至能把github仓库当DB用。</p>\n</li>\n<li><p><a href=\"https://waline.js.org/guide/deploy/\">服务端部分</a>：可以在各种全栈应用托管平台部署，也可以自己在云主机上做独立部署。</p>\n</li>\n</ul>\n<p>我选择SQLite+独立部署服务端：</p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs yaml\"><span class=\"hljs-attr\">version:</span> <span class=\"hljs-string\">&#x27;3.8&#x27;</span><br><br><span class=\"hljs-attr\">services:</span><br>  <span class=\"hljs-attr\">waline:</span><br>    <span class=\"hljs-attr\">image:</span> <span class=\"hljs-string\">lizheming/waline:latest</span><br>    <span class=\"hljs-attr\">container_name:</span> <span class=\"hljs-string\">waline</span><br>    <span class=\"hljs-attr\">restart:</span> <span class=\"hljs-string\">unless-stopped</span><br>    <span class=\"hljs-attr\">ports:</span><br>      <span class=\"hljs-bullet\">-</span> <span class=\"hljs-number\">127.0</span><span class=\"hljs-number\">.0</span><span class=\"hljs-number\">.1</span><span class=\"hljs-string\">:8086:8360</span><br>    <span class=\"hljs-attr\">volumes:</span><br>      <span class=\"hljs-bullet\">-</span> <span class=\"hljs-string\">$&#123;PWD&#125;/data:/app/data</span><br>    <span class=\"hljs-attr\">environment:</span><br>      <span class=\"hljs-attr\">TZ:</span> <span class=\"hljs-string\">&#x27;Asia/Shanghai&#x27;</span><br>      <span class=\"hljs-attr\">SQLITE_PATH:</span> <span class=\"hljs-string\">&#x27;/app/data&#x27;</span><br>      <span class=\"hljs-attr\">JWT_TOKEN:</span> <span class=\"hljs-string\">$&#123;JWT_TOKEN&#125;</span><br>      <span class=\"hljs-attr\">SITE_NAME:</span> <span class=\"hljs-string\">&quot;BipedalBit&#x27;s blog&quot;</span><br>      <span class=\"hljs-attr\">SITE_URL:</span> <span class=\"hljs-string\">&#x27;https://bipedalbit.net&#x27;</span><br>      <span class=\"hljs-attr\">SECURE_DOMAINS:</span> <span class=\"hljs-string\">&#x27;bipedalbit.net,****,****&#x27;</span><br>      <span class=\"hljs-attr\">SERVER_URL:</span> <span class=\"hljs-string\">&#x27;https://****&#x27;</span><br>      <span class=\"hljs-attr\">AUTHOR_EMAIL:</span> <span class=\"hljs-string\">&#x27;****&#x27;</span><br>      <span class=\"hljs-comment\">#LEAN_ID: $&#123;LEAN_ID&#125;</span><br>      <span class=\"hljs-comment\">#LEAN_KEY: $&#123;LEAN_KEY&#125;</span><br>      <span class=\"hljs-comment\">#LEAN_MASTER_KEY: $&#123;LEAN_MASTER_KEY&#125;</span><br>      <span class=\"hljs-attr\">SMTP_SERVICE:</span> <span class=\"hljs-string\">&#x27;QQ&#x27;</span><br>      <span class=\"hljs-attr\">SMTP_USER:</span> <span class=\"hljs-string\">$&#123;SMTP_USER&#125;</span><br>      <span class=\"hljs-attr\">SMTP_PASS:</span> <span class=\"hljs-string\">$&#123;SMTP_PASS&#125;</span><br>      <span class=\"hljs-attr\">SENDER_NAME:</span> <span class=\"hljs-string\">&#x27;bot&#x27;</span><br>      <span class=\"hljs-attr\">SENDER_EMAIL:</span> <span class=\"hljs-string\">&#x27;****&#x27;</span><br>      <span class=\"hljs-attr\">IPQPS:</span> <span class=\"hljs-number\">5</span><br>      <span class=\"hljs-attr\">COMMENT_AUDIT:</span> <span class=\"hljs-string\">&#x27;false&#x27;</span><br></code></pre></td></tr></table></figure>\n\n<ul>\n<li><p>老规矩，不直接暴露端口到公网，nginx做汇聚入口和反向代理。</p>\n</li>\n<li><p>除了官方文档里提到的功能，还能配跨域白名单、QPS限制。</p>\n</li>\n<li><p>sqlite部署方式有点尴尬，需要从github仓库自己下载初始化好的<a href=\"https://github.com/walinejs/waline/blob/main/assets/waline.sqlite\">waline.sqlite文件</a>挂载进容器。</p>\n</li>\n</ul>\n<p><img src=\"https://cdn.minio.bipedalbit.net/bipedalbit-net-images/waline/waline_2025-06-07_22-53-58.png\" alt=\"waline评论管理\"><br><img src=\"https://cdn.minio.bipedalbit.net/bipedalbit-net-images/waline/waline_2025-06-07_22-55-19.png\" alt=\"waline用户管理\"><br><img src=\"https://cdn.minio.bipedalbit.net/bipedalbit-net-images/waline/waline_2025-06-07_22-54-42.png\" alt=\"waline用户编辑\"></p>\n",
            "tags": [
                "hexo",
                "NAS",
                "minio",
                "CDN",
                "waline"
            ]
        }
    ]
}