<?xml version="1.0"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://blog.bipedalbit.net</id>
    <title>Hacking to the gate! • Posts by &#34;apt-file&#34; tag</title>
    <link href="https://blog.bipedalbit.net" />
    <updated>2015-10-19T10:33:33.000Z</updated>
    <category term="Qt" />
    <category term="signal-slot" />
    <category term="Q_OBJECT" />
    <category term="nginx" />
    <category term="select/poll" />
    <category term="epoll" />
    <category term="ngx_int_t" />
    <category term="rbtree" />
    <category term="C" />
    <category term="static" />
    <category term="内存分布" />
    <category term="sublime" />
    <category term="C++" />
    <category term="makefile" />
    <category term="node.js" />
    <category term="github" />
    <category term="socket.io" />
    <category term="Web请求处理机制" />
    <category term="同步/异步" />
    <category term="阻塞/非阻塞" />
    <category term="事件驱动模型" />
    <category term="BP神经网络" />
    <category term="机器学习" />
    <category term="python" />
    <category term="pybrain" />
    <category term="c++11" />
    <category term="多线程" />
    <category term="ubuntu" />
    <category term="debian" />
    <category term="apt-file" />
    <category term="cin" />
    <category term="cout" />
    <category term="scanf" />
    <category term="printf" />
    <category term="进制转换" />
    <category term="人工神经网络" />
    <category term="人机博弈" />
    <category term="Maxmin" />
    <category term="AlphaBeta" />
    <category term="PVS" />
    <category term="MTD(f)" />
    <category term="位域" />
    <category term="bitset" />
    <category term="vector&amp;lt;bool&amp;gt;" />
    <category term="网络爬虫" />
    <category term="类脑" />
    <category term="codeigniter" />
    <category term="php" />
    <category term="IIS7" />
    <category term="apache" />
    <category term="模拟登录" />
    <category term="proxy" />
    <category term="domain" />
    <category term="DNS" />
    <category term="hexo" />
    <category term="vps" />
    <category term="dropbox" />
    <category term="ffmpeg" />
    <category term="板绘" />
    <category term="sai" />
    <category term="琪露诺" />
    <category term="LLM" />
    <category term="ollama" />
    <category term="open-webui" />
    <category term="oneapi" />
    <category term="mcpserver" />
    <category term="NAS" />
    <category term="minio" />
    <category term="CDN" />
    <category term="waline" />
    <category term="mcpo" />
    <category term="svn" />
    <entry>
        <id>https://blog.bipedalbit.net/2015/10/19/%E8%A7%A3%E5%86%B3%E4%BE%9D%E8%B5%96%E9%97%AE%E9%A2%98%E7%9A%84%E5%88%A9%E5%99%A8%E2%80%94%E2%80%94apt-file/</id>
        <title>解决依赖问题的利器——apt-file</title>
        <link rel="alternate" href="https://blog.bipedalbit.net/2015/10/19/%E8%A7%A3%E5%86%B3%E4%BE%9D%E8%B5%96%E9%97%AE%E9%A2%98%E7%9A%84%E5%88%A9%E5%99%A8%E2%80%94%E2%80%94apt-file/"/>
        <content type="html">&lt;p&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; 学校的有线网络客户端是DrCom，Windows下停掉热点分享服务和代理后跑的很顺利。可是切到我常用的Ubuntu下时客户端却跑不起来。从终端用命令运行客户端时发现有依赖文件缺失，借着这个契机，我认识了Ubuntu（Debian）下解决依赖问题的利器——apt-file。&lt;/p&gt;
&lt;span id=&#34;more&#34;&gt;&lt;/span&gt;
&lt;p&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; 事情的始末是这样的，当时报的文件缺失是libXi.so.6，发现文件缺失后我先在整个计算机范围内查找了这个文件，在&lt;code&gt;/usr/lib/x86_64-linux-gnu&lt;/code&gt;目录下发现了一个，当时很不解，明明不缺依赖文件啊。&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; 后来我百度了一下大家遇到同类情况的解决方案，发现原来缺的是32位的libXi.so.6，刚才的目录下显然是64位的gnu文件。然后我发现大家开始用各种方式安装32位的兼容库，如ia32-libs，这个库还被Ubuntu抛弃好几年了，得换以前的源装之类的。也有人建议利用增加32位的架构来支持依赖32位库的软件。且不论有多么拐弯抹角有多麻烦，前面这些解决方案在我的Ubuntu Kylin 14.04 LTS下都没有见效。&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; 这时灰头土脸漫不经心在网上闲逛的我看见了一篇&lt;a href=&#34;http://blog.163.com/shishihoule@126/blog/static/57293547201442683951681/&#34;&gt;惊艳的博文&lt;/a&gt;。让我激动的是博主&lt;strong&gt;发现依赖缺失-&amp;gt;利用apt-file找到依赖文件-&amp;gt;逐个补全依赖文件-&amp;gt;解决问题&lt;/strong&gt;这一直截了当的过程的畅快感。感谢博主，感谢博主感谢的博主。&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; 在利用apt-file解决问题前我们需要做一点知识储备。&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; 首先我们需要了解，Linux下有一个检查可执行文档依赖项的命令：&lt;a href=&#34;http://man7.org/linux/man-pages/man1/ldd.1.html&#34;&gt;ldd&lt;/a&gt;。&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; 然后我们需要了解，Ubuntu下用apt-get来install文件时可以通过类似&lt;code&gt;sudo apt-get install libxi:i386&lt;/code&gt;的格式来指定文件使用的架构，i386就是指32位架构。&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; 我们还可以借助Ubuntu的&lt;code&gt;sudo -i&lt;/code&gt;命令让终端留在root权限下，免得我们在逐个安装依赖文件时总要在命令前加”sudo“。&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; 最后是apt-file的安装和使用：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Ubuntu（Debian）系统中默认没有apt-file工具，安装和许多其他工具一样，&lt;code&gt;sudo apt-get install apt-file&lt;/code&gt;就好。&lt;/li&gt;
&lt;li&gt;安装成功后还不能直接使用，&lt;code&gt;apt-file update&lt;/code&gt;命令会更新软件缓存库，有了库才能搜索文件。第一次使用或&lt;code&gt;apt-get update&lt;/code&gt;后都需运行一次该命令。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;apt-file search file_name&lt;/code&gt;可以查找（含有目标字符串的）目标文件存在于哪些软件包中。直接search可能返回太多内容，可以利用Linux的grep命令获得返回内容中字符串完整匹配的部分，如&lt;code&gt;apt-file search filename | grep -w filename&lt;/code&gt;，或者获得特定路径下的文件，如&lt;code&gt;apt-file search filename | grep /bin/&lt;/code&gt;。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;apt-file list package_name&lt;/code&gt;可以罗列目标软件包包含的文件。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; 于是可以动手解决问题了：&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;hljs&#34;&gt;sudo -i
apt-get install apt-file
apt-file update
ldd DrClientLinux
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; 缺的也不多，找到那几个“not found”的依赖文件，然后继续。&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;hljs&#34;&gt;apt-file search libxi|grep libxi.so.6
apt-file search libxi|grep libxi
apt-get install libxi6:i386
./DrClientLinux
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; 跟之前报告说缺的依赖文件有了不同，继续。&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;hljs&#34;&gt;apt-file search libxrender|grep libxrender
apt-get install libxrender1:i386
./DrClientLinux
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; 缺的依赖文件又不同了。发现这些依赖文件所属包的命名规律了，直接装，不用找了。&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;hljs&#34;&gt;apt-get install libxrandr2:i386
./DrClientLinux
apt-get install libxcursor1:i386
./DrClientLinux
apt-get install libxinerama1:i386
./DrClientLinux
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; 妥了，可喜可贺！&lt;/p&gt;
</content>
        <category term="ubuntu" />
        <category term="debian" />
        <category term="apt-file" />
        <updated>2015-10-19T10:33:33.000Z</updated>
    </entry>
</feed>
