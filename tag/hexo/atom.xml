<?xml version="1.0"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://blog.bipedalbit.net</id>
    <title>Hacking to the gate! • Posts by &#34;hexo&#34; tag</title>
    <link href="https://blog.bipedalbit.net" />
    <updated>2025-06-07T15:12:47.000Z</updated>
    <category term="Qt" />
    <category term="signal-slot" />
    <category term="Q_OBJECT" />
    <category term="nginx" />
    <category term="select/poll" />
    <category term="epoll" />
    <category term="ngx_int_t" />
    <category term="rbtree" />
    <category term="C" />
    <category term="static" />
    <category term="内存分布" />
    <category term="sublime" />
    <category term="C++" />
    <category term="makefile" />
    <category term="node.js" />
    <category term="github" />
    <category term="socket.io" />
    <category term="Web请求处理机制" />
    <category term="同步/异步" />
    <category term="阻塞/非阻塞" />
    <category term="事件驱动模型" />
    <category term="BP神经网络" />
    <category term="机器学习" />
    <category term="python" />
    <category term="pybrain" />
    <category term="c++11" />
    <category term="多线程" />
    <category term="ubuntu" />
    <category term="debian" />
    <category term="apt-file" />
    <category term="cin" />
    <category term="cout" />
    <category term="scanf" />
    <category term="printf" />
    <category term="进制转换" />
    <category term="人工神经网络" />
    <category term="人机博弈" />
    <category term="Maxmin" />
    <category term="AlphaBeta" />
    <category term="PVS" />
    <category term="MTD(f)" />
    <category term="位域" />
    <category term="bitset" />
    <category term="vector&amp;lt;bool&amp;gt;" />
    <category term="网络爬虫" />
    <category term="类脑" />
    <category term="codeigniter" />
    <category term="php" />
    <category term="IIS7" />
    <category term="apache" />
    <category term="模拟登录" />
    <category term="proxy" />
    <category term="domain" />
    <category term="DNS" />
    <category term="hexo" />
    <category term="vps" />
    <category term="dropbox" />
    <category term="ffmpeg" />
    <category term="板绘" />
    <category term="sai" />
    <category term="琪露诺" />
    <category term="LLM" />
    <category term="ollama" />
    <category term="open-webui" />
    <category term="oneapi" />
    <category term="mcpserver" />
    <category term="NAS" />
    <category term="minio" />
    <category term="CDN" />
    <category term="waline" />
    <category term="mcpo" />
    <category term="svn" />
    <entry>
        <id>https://blog.bipedalbit.net/2025/06/07/%E5%86%8D%E8%B0%88hexo%E9%9D%99%E6%80%81%E7%AB%99%E6%90%AD%E5%BB%BA/</id>
        <title>再谈hexo静态站搭建</title>
        <link rel="alternate" href="https://blog.bipedalbit.net/2025/06/07/%E5%86%8D%E8%B0%88hexo%E9%9D%99%E6%80%81%E7%AB%99%E6%90%AD%E5%BB%BA/"/>
        <content type="html">&lt;h1 id=&#34;回顾&#34;&gt;&lt;a href=&#34;#回顾&#34; class=&#34;headerlink&#34; title=&#34;回顾&#34;&gt;&lt;/a&gt;回顾&lt;/h1&gt;&lt;p&gt;不是头一次谈hexo静态站搭建了，2016年就写了相关的博客，非常耐心事无巨细地介绍过&lt;a href=&#34;https://bipedalbit.net/2016/04/24/hexo%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA/&#34;&gt;当时的搭建方案&lt;/a&gt;。&lt;/p&gt;
&lt;p&gt;紧接着开了自己的VPS，于是又写文介绍了&lt;a href=&#34;https://bipedalbit.net/2016/04/25/%E5%88%A9%E7%94%A8Dropbox%E5%AE%9E%E7%8E%B0%E5%AE%9E%E6%97%B6%E5%90%8C%E6%AD%A5%E7%9A%84%E9%9D%99%E6%80%81%E7%AB%99/&#34;&gt;迭代方案&lt;/a&gt;，在VPS上做了镜像站部署，用dropbox做静态资源同步。现在由于国内不搭梯子访问github已经不稳定，VPS上的静态站反而成了主站，github pages上那个站成替身了哈哈。&lt;/p&gt;
&lt;h1 id=&#34;概述&#34;&gt;&lt;a href=&#34;#概述&#34; class=&#34;headerlink&#34; title=&#34;概述&#34;&gt;&lt;/a&gt;概述&lt;/h1&gt;&lt;p&gt;新的静态站其实主要更新了3个点：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;主题：landscape-plus &amp;#x3D;&amp;gt; fluid&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;图床：七牛 &amp;#x3D;&amp;gt; 自建minio+cdn&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;评论插件：多说 &amp;#x3D;&amp;gt; 自建waline&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;hexo&#34;&gt;&lt;a href=&#34;#hexo&#34; class=&#34;headerlink&#34; title=&#34;hexo&#34;&gt;&lt;/a&gt;hexo&lt;/h1&gt;&lt;p&gt;很幸运，在旧笔记本上居然翻到了完整未损坏的当年的hexo项目目录，不过其实要装修个人站的话，只需要把站里的markdown文章救回来就好，反正外面的静态站框架还是会用hexo。&lt;/p&gt;
&lt;p&gt;说起来，hexo这个静态站框架也是很经久不衰，虽然插件和主题消亡了不少个，但框架本身还在持续迭代，社区也还在活跃，一直出新的插件和主题，简直跟sublime text有一拼，我也是真爱掺和这种自由度高的DIY项目，怕是早晚要入PCB板、3D打印的坑。&lt;/p&gt;
&lt;p&gt;看了眼&lt;a href=&#34;https://hexo.io/docs/commands&#34;&gt;hexo的新官方文档&lt;/a&gt;，命令行用法没什么变化，项目结构也没变化，但比起9年前（Σ(⊙▽⊙”这就是成年人的世界吗？好吓人的时间尺度），除了github pages，适配了一些新的免费静态站托管平台：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;gitlab pages：依赖可用的gitlab，gitlab知道吧？github开源对标方案。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href=&#34;https://www.heroku.com/&#34;&gt;Heroku&lt;/a&gt;：一个可以免费托管全栈应用的PaaS平台，有每月白嫖小时数，应用有些休眠问题要解决。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href=&#34;https://www.netlify.com/about/&#34;&gt;Netlify&lt;/a&gt;：SaaS托管平台。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href=&#34;https://vercel.com/&#34;&gt;Vercel&lt;/a&gt;：前端应用托管平台，有白嫖流量，但好像是固定额度，不是每月送额度。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href=&#34;https://rss3.io/&#34;&gt;RSS3&lt;/a&gt;：就是基于web3那一套做的RSS托管，简单理解就是IPFS上放静态资源，区块链代币支付存储和基建维护费。IPFS这个存储方案嘛我调研过，彻底去中心，可靠、近似真·持久化，IO性能还OK，但是存储成本其实比各大云厂的对象存储还贵一些，考虑到赛博活菩萨甚至有可以白嫖的对象存储，IPFS吧就有点鸡肋，现在更多是用来破审核，偷摸分享些灰色地带的资源。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;一些纯资源同步工具：Rsync、FTPSync、SFTP。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;还提了一嘴，其他类似的静态资源托管方案可以自己同步hexo项目的public目录内容即可，比如我的VPS+dropbox方案。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;hexo的项目结构带大家熟悉一下：&lt;/p&gt;
&lt;figure class=&#34;highlight nix&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;code class=&#34;hljs nix&#34;&gt;.&lt;br&gt;├── _config.fluid.yml&lt;br&gt;├── _config.landscape.yml&lt;br&gt;├── _config.yml&lt;br&gt;├── db.json&lt;br&gt;├── node_modules&lt;span class=&#34;hljs-symbol&#34;&gt;/&lt;/span&gt;&lt;br&gt;├── package.json&lt;br&gt;├── package-lock.json&lt;br&gt;├── public&lt;span class=&#34;hljs-symbol&#34;&gt;/&lt;/span&gt;&lt;br&gt;├── scaffolds&lt;span class=&#34;hljs-symbol&#34;&gt;/&lt;/span&gt;&lt;br&gt;│   ├── draft.md&lt;br&gt;│   ├── page.md&lt;br&gt;│   └── post.md&lt;br&gt;├── source&lt;span class=&#34;hljs-symbol&#34;&gt;/&lt;/span&gt;&lt;br&gt;│   ├── about&lt;span class=&#34;hljs-symbol&#34;&gt;/&lt;/span&gt;&lt;br&gt;│   │   └── index.md&lt;br&gt;│   ├── CNAME&lt;br&gt;│   ├── _drafts&lt;span class=&#34;hljs-symbol&#34;&gt;/&lt;/span&gt;&lt;br&gt;│   ├── img&lt;span class=&#34;hljs-symbol&#34;&gt;/&lt;/span&gt;&lt;br&gt;│   └── _posts&lt;span class=&#34;hljs-symbol&#34;&gt;/&lt;/span&gt;&lt;br&gt;└── themes&lt;span class=&#34;hljs-operator&#34;&gt;/&lt;/span&gt;&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;_config.yml&lt;/code&gt;：这是整个hexo项目的配置文件&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;_config.landscape.yml&lt;/code&gt;：这是landsacpe主题的hexo项目配置文件，landscape是hexo项目的默认主体，主题配置文件一般相对于项目配置文件会多出一些配置项，这就是主题的发挥空间。主题配置文件中的配置优先级高于项目配置，所以跟主题无关的项目配置可以配在&lt;code&gt;_config.yml&lt;/code&gt;里，主题特有的配置配在主题配置文件里，方便随时换主题。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;_config.fluid.yml&lt;/code&gt;：这是我现在用的&lt;a href=&#34;https://hexo.fluid-dev.com/docs/start/#%E4%B8%BB%E9%A2%98%E7%AE%80%E4%BB%8B&#34;&gt;fluid主题&lt;/a&gt;的配置文件。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;几个json文件和&lt;code&gt;node_modules/&lt;/code&gt;目录理解成项目运行时环境就好，包括了hexo框架本身、插件和主题的实现。迁移hexo项目时，可以删掉&lt;code&gt;node_modules/&lt;/code&gt;目录，靠json文件能重建项目运行时资源。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;themes/&lt;/code&gt;目录是用来放&lt;code&gt;git clone&lt;/code&gt;下来的主题的，不是很冷门的主题的话，直接用命令安装到项目的运行时资源里就行。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;public/&lt;/code&gt;目录用来放hexo框架生成的网站静态资源，可以直接把这个目录当网站根目录，拿去部署网站。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;scaffolds/&lt;/code&gt;目录，字面意思是脚手架，其实是用来放几种markdown文件的模板，用生成markdown文件时会根据这些模板做一些内容初始化，我是还没有做什么修改。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;source/&lt;/code&gt;目录是项目的内容目录，其中的markdown文件会生成对应静态资源后搬到&lt;code&gt;public/&lt;/code&gt;目录中，其他目录会原样搬到&lt;code&gt;public/&lt;/code&gt;目录中。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;source/about/index.md&lt;/code&gt;用来创建关于页。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;source/_drafts&lt;/code&gt;目录用来放文章草稿，不会生成静态资源。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;source/_posts&lt;/code&gt;目录用来放文章正文，会生成静态资源。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;hexo框架和fluid我就不细讲了，效果可以看我的静态站，用法可以看官方文档学习。&lt;/p&gt;
&lt;h1 id=&#34;图床&#34;&gt;&lt;a href=&#34;#图床&#34; class=&#34;headerlink&#34; title=&#34;图床&#34;&gt;&lt;/a&gt;图床&lt;/h1&gt;&lt;p&gt;静态站的头图、文章插图都会用到一些比较大的图片资源，这些资源如果跟其他静态资源放在一起，会有几个缺点：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;p&gt;图片可能越攒越多，对静态站的托管平台造成磁盘空间压力。静态站内的静态资源我是用dropbox同步，所以先于磁盘空间承压的瓶颈点是dropbox容量，这个对我影响比较大。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;向静态站托管平台同步图片文件渠道通常比较受限，不能随心所欲，不那么方便日常攒图随时更新。这点上用dropbox倒是还算方便。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;图片在静态站内部，客户端拉取资源需要走站域名，如果你有多个站，不方便跨站共享图，可能会有跨域问题。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;图片的IO会占据静态站在托管平台的大部分IO带宽，如果你的IO带宽很有限或者流量受限，就比较危险了。有人说可以上CDN，是能缓解不少，但资源更新比较频繁的话，CDN回源也会频繁，还是会吃IO。我VPS带宽、流量可观，所以这点倒是无所谓。&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;长远考虑，我需要使用独立的、配有CDN的图床。&lt;/p&gt;
&lt;p&gt;上一版静态站，我的图床是七牛图床，当时七牛提供子域名给每个用户空间，现在七牛要求用户自行绑定备案域名。备案可太麻烦了，我选择换方案。&lt;/p&gt;
&lt;p&gt;有人安利过cloudfare的R2存储，虽然可以白嫖，但cloudfare国内被白嫖太多，CDN国内节点经常会负载过高变卡甚至断连。正巧我有了NAS这个便宜宽敞的存储空间，我选择自建对象存储，内网穿透出去作为图床，自配CDN。&lt;/p&gt;
&lt;h2 id=&#34;minio&#34;&gt;&lt;a href=&#34;#minio&#34; class=&#34;headerlink&#34; title=&#34;minio&#34;&gt;&lt;/a&gt;minio&lt;/h2&gt;&lt;p&gt;&lt;a href=&#34;https://min.io/docs/minio/container/index.html&#34;&gt;minio&lt;/a&gt;是Amazon S3对象存储的开源对标项目。minio可以用docker容器部署，我的群晖NAS支持docker容器，我在搭open-webui时有现成的&lt;a href=&#34;https://bipedalbit.net/2025/05/28/%E6%90%AD%E5%BB%BA%E7%A7%81%E6%9C%89LLM%E5%8A%A9%E6%89%8B%E5%B9%B3%E5%8F%B0/#5-2-3-frpc&#34;&gt;frp内网穿透方案&lt;/a&gt;在公网暴露minio的API，这不就妥了。&lt;/p&gt;
&lt;p&gt;minio还是用docker-compose部署：&lt;/p&gt;
&lt;figure class=&#34;highlight yaml&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;code class=&#34;hljs yaml&#34;&gt;&lt;span class=&#34;hljs-attr&#34;&gt;minio:&lt;/span&gt;&lt;br&gt;    &lt;span class=&#34;hljs-attr&#34;&gt;image:&lt;/span&gt; &lt;span class=&#34;hljs-string&#34;&gt;ghcr.io/minio/minio:RELEASE.2025-04-22T22-12-26Z&lt;/span&gt;&lt;br&gt;    &lt;span class=&#34;hljs-attr&#34;&gt;container_name:&lt;/span&gt; &lt;span class=&#34;hljs-string&#34;&gt;minio&lt;/span&gt;&lt;br&gt;    &lt;span class=&#34;hljs-attr&#34;&gt;volumes:&lt;/span&gt;&lt;br&gt;      &lt;span class=&#34;hljs-bullet&#34;&gt;-&lt;/span&gt; &lt;span class=&#34;hljs-string&#34;&gt;./data:/data&lt;/span&gt;&lt;br&gt;      &lt;span class=&#34;hljs-bullet&#34;&gt;-&lt;/span&gt; &lt;span class=&#34;hljs-string&#34;&gt;./config:/root/.minio&lt;/span&gt;&lt;br&gt;    &lt;span class=&#34;hljs-attr&#34;&gt;ports:&lt;/span&gt;&lt;br&gt;      &lt;span class=&#34;hljs-bullet&#34;&gt;-&lt;/span&gt; &lt;span class=&#34;hljs-number&#34;&gt;9000&lt;/span&gt;&lt;span class=&#34;hljs-string&#34;&gt;:9000&lt;/span&gt;&lt;br&gt;      &lt;span class=&#34;hljs-bullet&#34;&gt;-&lt;/span&gt; &lt;span class=&#34;hljs-number&#34;&gt;9001&lt;/span&gt;&lt;span class=&#34;hljs-string&#34;&gt;:9001&lt;/span&gt;&lt;br&gt;    &lt;span class=&#34;hljs-attr&#34;&gt;environment:&lt;/span&gt;&lt;br&gt;      &lt;span class=&#34;hljs-bullet&#34;&gt;-&lt;/span&gt; &lt;span class=&#34;hljs-string&#34;&gt;&amp;#x27;MINIO_ROOT_USER=bipedalbit&amp;#x27;&lt;/span&gt;&lt;br&gt;      &lt;span class=&#34;hljs-bullet&#34;&gt;-&lt;/span&gt; &lt;span class=&#34;hljs-string&#34;&gt;&amp;#x27;MINIO_ROOT_PASSWORD=****&amp;#x27;&lt;/span&gt;&lt;br&gt;    &lt;span class=&#34;hljs-attr&#34;&gt;restart:&lt;/span&gt; &lt;span class=&#34;hljs-string&#34;&gt;unless-stopped&lt;/span&gt;&lt;br&gt;    &lt;span class=&#34;hljs-attr&#34;&gt;command:&lt;/span&gt; [&lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;server /data --console-address :9001&amp;quot;&lt;/span&gt;]&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;strong&gt;注意2025.5.24发布的minio更新版本中，把minio的web控制台功能从社区版代码里移除了：&lt;a href=&#34;https://github.com/minio/minio/releases/tag/RELEASE.2025-05-24T17-08-30Z&#34;&gt;RELEASE.2025-05-24T17-08-30Z&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;挪到商业版里了，挣钱嘛，不寒碜。所以我这里没有用latest镜像，而是用了还有web控制台的最后一个版本。&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;--console-address&lt;/code&gt;如果不指定，会在每次启动容器时随机变化。&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;web控制台端口我不暴露到公网，安全保障。控制台界面跟普通S3对象存储的界面大同小异，能建桶，能配用户策略、桶策略，能配跨域白名单，能在界面操作桶文件。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://cdn.minio.bipedalbit.net/bipedalbit-net-images/minio/minio_2025-06-07_20-38-12.png&#34; alt=&#34;minio登录页&#34;&gt;&lt;br&gt;&lt;img src=&#34;https://cdn.minio.bipedalbit.net/bipedalbit-net-images/minio/minio_2025-06-07_20-38-43.png&#34; alt=&#34;minio桶列表&#34;&gt;&lt;br&gt;&lt;img src=&#34;https://cdn.minio.bipedalbit.net/bipedalbit-net-images/minio/minio_2025-06-07_20-39-14.png&#34; alt=&#34;minio桶详情&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;CDN&#34;&gt;&lt;a href=&#34;#CDN&#34; class=&#34;headerlink&#34; title=&#34;CDN&#34;&gt;&lt;/a&gt;CDN&lt;/h2&gt;&lt;p&gt;有了对象存储，接下来就是选一个全球都有节点，不至于卡的、白嫖额度多的CDN。公布答案吧，我选了&lt;a href=&#34;https://console.lightcdn.com/cdnResources&#34;&gt;LightCDN&lt;/a&gt;，这家CDN的卖点是尽量让冷门区域也有节点覆盖，所以全球加速效果都不会太差，但也不会太快，对我来说足够了。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://cdn.minio.bipedalbit.net/bipedalbit-net-images/lightcdn/lightcdn_2025-06-07_21-33-43.png&#34; alt=&#34;lightcdn请求统计&#34;&gt;&lt;br&gt;&lt;img src=&#34;https://cdn.minio.bipedalbit.net/bipedalbit-net-images/lightcdn/lightcdn_2025-06-07_21-34-38.png&#34; alt=&#34;lightcdn费用统计&#34;&gt;&lt;/p&gt;
&lt;h1 id=&#34;Waline&#34;&gt;&lt;a href=&#34;#Waline&#34; class=&#34;headerlink&#34; title=&#34;Waline&#34;&gt;&lt;/a&gt;Waline&lt;/h1&gt;&lt;p&gt;多说评论插件挂了有一阵子了，一直没顾上换新方案。时间尺度一拉长，就发现依赖第三方服务的插件还是欠缺稳定性，不如自建。&lt;/p&gt;
&lt;p&gt;关于&lt;a href=&#34;https://waline.js.org/&#34;&gt;waline&lt;/a&gt;，我简要介绍一下：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;hexo的fluid主题对waline有适配支持，不需要手动做代码嵌入&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href=&#34;https://waline.js.org/guide/features/&#34;&gt;功能挺全&lt;/a&gt;：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;能做基于Markdown的富文本评论编辑，支持微博表情&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;支持评论后台审核&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;支持匿名评论和用户注册&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;支持多语言界面&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;支持页面浏览量和评论数统计&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;支持邮件、微信、QQ、Telegram、Discord、飞书等各种webhook通知&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href=&#34;https://waline.js.org/guide/database.html&#34;&gt;数据库部分&lt;/a&gt;：可以有多种选择，SaaS可以用LeanCloud，DB就多了，MongoDB、MYSQL、TiDB、SQLite、PostgreSQL、腾讯的CloudBase，甚至能把github仓库当DB用。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href=&#34;https://waline.js.org/guide/deploy/&#34;&gt;服务端部分&lt;/a&gt;：可以在各种全栈应用托管平台部署，也可以自己在云主机上做独立部署。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;我选择SQLite+独立部署服务端：&lt;/p&gt;
&lt;figure class=&#34;highlight yaml&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;code class=&#34;hljs yaml&#34;&gt;&lt;span class=&#34;hljs-attr&#34;&gt;version:&lt;/span&gt; &lt;span class=&#34;hljs-string&#34;&gt;&amp;#x27;3.8&amp;#x27;&lt;/span&gt;&lt;br&gt;&lt;br&gt;&lt;span class=&#34;hljs-attr&#34;&gt;services:&lt;/span&gt;&lt;br&gt;  &lt;span class=&#34;hljs-attr&#34;&gt;waline:&lt;/span&gt;&lt;br&gt;    &lt;span class=&#34;hljs-attr&#34;&gt;image:&lt;/span&gt; &lt;span class=&#34;hljs-string&#34;&gt;lizheming/waline:latest&lt;/span&gt;&lt;br&gt;    &lt;span class=&#34;hljs-attr&#34;&gt;container_name:&lt;/span&gt; &lt;span class=&#34;hljs-string&#34;&gt;waline&lt;/span&gt;&lt;br&gt;    &lt;span class=&#34;hljs-attr&#34;&gt;restart:&lt;/span&gt; &lt;span class=&#34;hljs-string&#34;&gt;unless-stopped&lt;/span&gt;&lt;br&gt;    &lt;span class=&#34;hljs-attr&#34;&gt;ports:&lt;/span&gt;&lt;br&gt;      &lt;span class=&#34;hljs-bullet&#34;&gt;-&lt;/span&gt; &lt;span class=&#34;hljs-number&#34;&gt;127.0&lt;/span&gt;&lt;span class=&#34;hljs-number&#34;&gt;.0&lt;/span&gt;&lt;span class=&#34;hljs-number&#34;&gt;.1&lt;/span&gt;&lt;span class=&#34;hljs-string&#34;&gt;:8086:8360&lt;/span&gt;&lt;br&gt;    &lt;span class=&#34;hljs-attr&#34;&gt;volumes:&lt;/span&gt;&lt;br&gt;      &lt;span class=&#34;hljs-bullet&#34;&gt;-&lt;/span&gt; &lt;span class=&#34;hljs-string&#34;&gt;$&amp;#123;PWD&amp;#125;/data:/app/data&lt;/span&gt;&lt;br&gt;    &lt;span class=&#34;hljs-attr&#34;&gt;environment:&lt;/span&gt;&lt;br&gt;      &lt;span class=&#34;hljs-attr&#34;&gt;TZ:&lt;/span&gt; &lt;span class=&#34;hljs-string&#34;&gt;&amp;#x27;Asia/Shanghai&amp;#x27;&lt;/span&gt;&lt;br&gt;      &lt;span class=&#34;hljs-attr&#34;&gt;SQLITE_PATH:&lt;/span&gt; &lt;span class=&#34;hljs-string&#34;&gt;&amp;#x27;/app/data&amp;#x27;&lt;/span&gt;&lt;br&gt;      &lt;span class=&#34;hljs-attr&#34;&gt;JWT_TOKEN:&lt;/span&gt; &lt;span class=&#34;hljs-string&#34;&gt;$&amp;#123;JWT_TOKEN&amp;#125;&lt;/span&gt;&lt;br&gt;      &lt;span class=&#34;hljs-attr&#34;&gt;SITE_NAME:&lt;/span&gt; &lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;BipedalBit&amp;#x27;s blog&amp;quot;&lt;/span&gt;&lt;br&gt;      &lt;span class=&#34;hljs-attr&#34;&gt;SITE_URL:&lt;/span&gt; &lt;span class=&#34;hljs-string&#34;&gt;&amp;#x27;https://bipedalbit.net&amp;#x27;&lt;/span&gt;&lt;br&gt;      &lt;span class=&#34;hljs-attr&#34;&gt;SECURE_DOMAINS:&lt;/span&gt; &lt;span class=&#34;hljs-string&#34;&gt;&amp;#x27;bipedalbit.net,****,****&amp;#x27;&lt;/span&gt;&lt;br&gt;      &lt;span class=&#34;hljs-attr&#34;&gt;SERVER_URL:&lt;/span&gt; &lt;span class=&#34;hljs-string&#34;&gt;&amp;#x27;https://****&amp;#x27;&lt;/span&gt;&lt;br&gt;      &lt;span class=&#34;hljs-attr&#34;&gt;AUTHOR_EMAIL:&lt;/span&gt; &lt;span class=&#34;hljs-string&#34;&gt;&amp;#x27;****&amp;#x27;&lt;/span&gt;&lt;br&gt;      &lt;span class=&#34;hljs-comment&#34;&gt;#LEAN_ID: $&amp;#123;LEAN_ID&amp;#125;&lt;/span&gt;&lt;br&gt;      &lt;span class=&#34;hljs-comment&#34;&gt;#LEAN_KEY: $&amp;#123;LEAN_KEY&amp;#125;&lt;/span&gt;&lt;br&gt;      &lt;span class=&#34;hljs-comment&#34;&gt;#LEAN_MASTER_KEY: $&amp;#123;LEAN_MASTER_KEY&amp;#125;&lt;/span&gt;&lt;br&gt;      &lt;span class=&#34;hljs-attr&#34;&gt;SMTP_SERVICE:&lt;/span&gt; &lt;span class=&#34;hljs-string&#34;&gt;&amp;#x27;QQ&amp;#x27;&lt;/span&gt;&lt;br&gt;      &lt;span class=&#34;hljs-attr&#34;&gt;SMTP_USER:&lt;/span&gt; &lt;span class=&#34;hljs-string&#34;&gt;$&amp;#123;SMTP_USER&amp;#125;&lt;/span&gt;&lt;br&gt;      &lt;span class=&#34;hljs-attr&#34;&gt;SMTP_PASS:&lt;/span&gt; &lt;span class=&#34;hljs-string&#34;&gt;$&amp;#123;SMTP_PASS&amp;#125;&lt;/span&gt;&lt;br&gt;      &lt;span class=&#34;hljs-attr&#34;&gt;SENDER_NAME:&lt;/span&gt; &lt;span class=&#34;hljs-string&#34;&gt;&amp;#x27;bot&amp;#x27;&lt;/span&gt;&lt;br&gt;      &lt;span class=&#34;hljs-attr&#34;&gt;SENDER_EMAIL:&lt;/span&gt; &lt;span class=&#34;hljs-string&#34;&gt;&amp;#x27;****&amp;#x27;&lt;/span&gt;&lt;br&gt;      &lt;span class=&#34;hljs-attr&#34;&gt;IPQPS:&lt;/span&gt; &lt;span class=&#34;hljs-number&#34;&gt;5&lt;/span&gt;&lt;br&gt;      &lt;span class=&#34;hljs-attr&#34;&gt;COMMENT_AUDIT:&lt;/span&gt; &lt;span class=&#34;hljs-string&#34;&gt;&amp;#x27;false&amp;#x27;&lt;/span&gt;&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;老规矩，不直接暴露端口到公网，nginx做汇聚入口和反向代理。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;除了官方文档里提到的功能，还能配跨域白名单、QPS限制。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;sqlite部署方式有点尴尬，需要从github仓库自己下载初始化好的&lt;a href=&#34;https://github.com/walinejs/waline/blob/main/assets/waline.sqlite&#34;&gt;waline.sqlite文件&lt;/a&gt;挂载进容器。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&#34;https://cdn.minio.bipedalbit.net/bipedalbit-net-images/waline/waline_2025-06-07_22-53-58.png&#34; alt=&#34;waline评论管理&#34;&gt;&lt;br&gt;&lt;img src=&#34;https://cdn.minio.bipedalbit.net/bipedalbit-net-images/waline/waline_2025-06-07_22-55-19.png&#34; alt=&#34;waline用户管理&#34;&gt;&lt;br&gt;&lt;img src=&#34;https://cdn.minio.bipedalbit.net/bipedalbit-net-images/waline/waline_2025-06-07_22-54-42.png&#34; alt=&#34;waline用户编辑&#34;&gt;&lt;/p&gt;
</content>
        <category term="hexo" />
        <category term="NAS" />
        <category term="minio" />
        <category term="CDN" />
        <category term="waline" />
        <updated>2025-06-07T15:12:47.000Z</updated>
    </entry>
    <entry>
        <id>https://blog.bipedalbit.net/2016/04/25/%E5%88%A9%E7%94%A8Dropbox%E5%AE%9E%E7%8E%B0%E5%AE%9E%E6%97%B6%E5%90%8C%E6%AD%A5%E7%9A%84%E9%9D%99%E6%80%81%E7%AB%99/</id>
        <title>利用Dropbox实现实时同步的静态站</title>
        <link rel="alternate" href="https://blog.bipedalbit.net/2016/04/25/%E5%88%A9%E7%94%A8Dropbox%E5%AE%9E%E7%8E%B0%E5%AE%9E%E6%97%B6%E5%90%8C%E6%AD%A5%E7%9A%84%E9%9D%99%E6%80%81%E7%AB%99/"/>
        <content type="html">&lt;p&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; 上个周末正在练习nginx静态站服务器功能的基本配置，忽然想到一个点子。既然我有现成的VPS可以用，而且只是用来搭ShadowSocks服务器科学上网用，不拿来做建站练习实在有点浪费。之前早就把VPS和手头各个平台上的ShadowSocks+Dropbox环境配好了，那为什么不干脆在VPS的Dropbox文件夹里建站呢？自动同步，多终端随处修改，应该会比Github Pages更方便。试了一下，结果亦可赛艇。&lt;/p&gt;
&lt;span id=&#34;more&#34;&gt;&lt;/span&gt;
&lt;h3 id=&#34;VPS&#34;&gt;&lt;a href=&#34;#VPS&#34; class=&#34;headerlink&#34; title=&#34;VPS&#34;&gt;&lt;/a&gt;VPS&lt;/h3&gt;&lt;p&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; VPS的选择主要看需要，论国内访问速度当然还是BAT和新浪之类的国产云主机最好，但是如果你想顺便用来科学上网，那么就得选国外VPS服务商了。一般来说，提起国外的网络服务运营商，总是想起欧美的，尤其是美国的，然而事实上，日本的VPS产业也很发达。大名鼎鼎的&lt;a href=&#34;https://www.linode.com/&#34;&gt;Linode&lt;/a&gt;、&lt;a href=&#34;https://www.conoha.jp/zh/&#34;&gt;Conoha&lt;/a&gt;等服务商，因为机房离国内近，相对美国的VPS有了速度优势。最近可能意识到墙内市场的潜力，有的日本VPS服务明显做的很贴咱的心了，比如我选的&lt;a href=&#34;https://www.z.com/&#34;&gt;z.com&lt;/a&gt;，它就是Conoha重新套了个壳，900日元每月的开销不算便宜也不很贵，但是它能用支付宝结帐！&lt;/p&gt;
&lt;h3 id=&#34;系统环境&#34;&gt;&lt;a href=&#34;#系统环境&#34; class=&#34;headerlink&#34; title=&#34;系统环境&#34;&gt;&lt;/a&gt;系统环境&lt;/h3&gt;&lt;p&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; 要搭服务器，不论什么功能，稳定性是很重要的，虽然巨硬和IBM也分别有server产品，但是咱用不起，挑个Linux系统比较合适，至于Mac OS，你是要搭服务器，又不是要去星巴克。我Linux入门时选择的是最流行的发行版Ubuntu，于是VPS也挑了Ubuntu 14.04LTS的镜像，使用和练习都比较方便，上手快，国内大家爱用的还有CentOS和RedHat。就别选什么Desktop镜像了，DE占空间又浪费资源，就算有远程桌面，也没有必要用，SSH连接足矣。把公钥放Github，wget到服务器~&amp;#x2F;.ssh目录，改个名叫authorized_keys就行，多个公钥可以都放authorized_keys里面，一个一行就好。&lt;/p&gt;
&lt;h3 id=&#34;Dropbox&#34;&gt;&lt;a href=&#34;#Dropbox&#34; class=&#34;headerlink&#34; title=&#34;Dropbox&#34;&gt;&lt;/a&gt;Dropbox&lt;/h3&gt;&lt;p&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; Dropbox是个云盘，跟国内遍地都是的云盘有几个不同点，首先是资历老，然后给的免费空间少（XDDDD），2GB，跨平台做得好，几乎所有系统平台都有客户端，最重要的是有一个文件实时同步功能（也许正是这个功能限制了免费空间的大小），最后，是的，国外的好东西一般是要被墙的，Dropbox也不例外。会科学上网的同学们可以各显神通去&lt;a href=&#34;https://www.dropbox.com/&#34;&gt;官网&lt;/a&gt;注册，下客户端试用一下。在VPS上装个Dropbox用来传文件简直方便，VPS网快，墙内下不动的东西也可以VPS下完从Dropbox拖回来。据说国内的金山快盘可以作为Dropbox的替代品，改天做个评测再发博文介绍下。别跟我提百度云，且不论它没有官方Linux客户端且免费空间太大，我对百度有偏见。&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; 这篇文用到的就是Dropbox的自动同步功能，在各个终端的Dropbox文件夹内，内容都与云端进行实时同步。既然是个文件夹，那么里面放一个静态站也没有什么不可以了，2GB绰绰有余。&lt;/p&gt;
&lt;h3 id=&#34;Nginx&#34;&gt;&lt;a href=&#34;#Nginx&#34; class=&#34;headerlink&#34; title=&#34;Nginx&#34;&gt;&lt;/a&gt;Nginx&lt;/h3&gt;&lt;p&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;a href=&#34;http://nginx.org/&#34;&gt;Nginx&lt;/a&gt;读作engine X，是由Igor Sysoev（俄罗斯籍）为俄罗斯访问量第二的Rambler.ru站点开发的，第一个公开版本0.1.0发布于2004年10月4日。其将源代码以类BSD许可证的形式发布，因它的稳定性、丰富的功能集、示例配置文件和低系统资源的消耗而闻名。主要功能为静态网站的服务器、多服务端的负载均衡服务器即反向代理服务器。配置简单、高效、轻。既然是做静态站，我首选了Nginx作为服务器，Apache有点笨重，不做动态站就先不装了。&lt;/p&gt;
&lt;h3 id=&#34;Hexo&#34;&gt;&lt;a href=&#34;#Hexo&#34; class=&#34;headerlink&#34; title=&#34;Hexo&#34;&gt;&lt;/a&gt;Hexo&lt;/h3&gt;&lt;p&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; 做什么样的静态站呢？这次直接把我的Hexo博客拿来做实验。&lt;a href=&#34;https://bipedalbit.net/2016/4/24/hexo%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA/&#34;&gt;上篇文&lt;/a&gt;提到过，Hexo是个静态博客站生成器，&lt;code&gt;hexo g&lt;/code&gt;命令执行后，Hexo项目目录的public子目录下就是静态站的确切内容了。可以干脆把Hexo项目目录放在Dropbox文件夹中，每次&lt;code&gt;hexo g&lt;/code&gt;之后，自动更新静态站内容，同时Dropbox自动把静态站同步到VPS，VPS的Nginx不需要更改配置因为地址映射没有变化。于是我们现在可以在本地修改Hexo博客后自动发布更新到直连外网的VPS，还可以在任意一个向Github分发过SSH公钥的终端向Github Pages发布新的静态站内容。&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; 不知到你们想到了什么，我觉得这个套路可以使VPS上维护一个经常预更新的静态站alpha版，Github Pages上维护一个比较稳定的静态站beta版。&lt;/p&gt;
</content>
        <category term="nginx" />
        <category term="hexo" />
        <category term="vps" />
        <category term="dropbox" />
        <updated>2016-04-25T06:05:09.000Z</updated>
    </entry>
    <entry>
        <id>https://blog.bipedalbit.net/2016/04/24/hexo%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA/</id>
        <title>hexo博客搭建</title>
        <link rel="alternate" href="https://blog.bipedalbit.net/2016/04/24/hexo%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA/"/>
        <content type="html">&lt;p&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; 转眼三个多月没更博文了，并没有荒废只是有点忙。攒了很多想写的东西，先填个拖了很久的坑：我这个博客是怎么搭起来的。&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; 总的来说，我的博客是由Github Pages维护，本地用Hexo管理的一个静态博客。这篇文里我将介绍搭建Github Pages+Hexo博客的过程。&lt;/p&gt;
&lt;span id=&#34;more&#34;&gt;&lt;/span&gt;
&lt;p&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; 在讲搭建流程之前需要铺垫一下，介绍几个基本概念，Github Pages、Hexo、域名和DNS服务。&lt;/p&gt;
&lt;h3 id=&#34;Github-Pages&#34;&gt;&lt;a href=&#34;#Github-Pages&#34; class=&#34;headerlink&#34; title=&#34;Github Pages&#34;&gt;&lt;/a&gt;Github Pages&lt;/h3&gt;&lt;p&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; 如果想搭建一个自己的博客，首先你需要一个7×24不间断服务的稳定服务器。一般来说，geek们不会自己买一个，我们可以租一个云服务器。有更好的选择吗？有。我们也可以找到一些免费的云空间，比如新浪的SAE（以后没准就不免费了），还有我要讲的Github Pages。Github Pages是Github（如果你不知道Github是什么可以自己百度，这里我不太想解释）提供的一项福利，帮助广大geek们维护一个静态网站空间。静态网站就是页面内容不会随着数据库中数据的变化而动态的发生变化的网站，各大购物网站都是典型的动态网站。通常个人博客主要包含静态内容，就算需要修改更新，手动处理也完全足够，评论系统除外，但评论系统可以用第三方插件。于是这里有了分歧，一部分人选择了自己管理评论系统的数据库，还想偶尔在网站上玩点酷炫的动态网站花活，比如挂个网页游戏或者弹幕播放器，他们需要一个完全控制的云服务器，如SAE、百度云、腾讯云、Linode、Conoha等等；另一部分人希望让博客单纯一点，静态网站是更好的选择，Github向每一个用户帐号免费提供一个静态网站空间。&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; Github Page使用起来很简单，它的&lt;a href=&#34;https://pages.github.com/&#34;&gt;网站首页&lt;/a&gt;上有讲解，其实就是在Github新建一个repository，命名为username.github.io，其中username为你的Github用户名。这个repository就是你的静态网站空间了，访问它可以使用刚才的username.github.io，也就是Github Pages的二级域名。如果你是Github的用户，接下来你一定知道怎么更新网站内容了。&lt;/p&gt;
&lt;h3 id=&#34;Hexo&#34;&gt;&lt;a href=&#34;#Hexo&#34; class=&#34;headerlink&#34; title=&#34;Hexo&#34;&gt;&lt;/a&gt;Hexo&lt;/h3&gt;&lt;p&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; Hexo是一个开源的静态博客生成器，用node.js开发，作者是台湾大学生tommy351。这里我要提一句，node.js不是js，是基于谷歌v8引擎（js解析引擎）开发的一种服务端语言，语法与js没有什么两样，可以在http协议外（使用socket.io包）实现区别于AJAX的服务器主动推，鼓吹面向过程、基于消息机制的函数异步处理特性。Hexo封装了不止一种对免费服务器空间的接口，其中也包括Github的。这篇文里我准备介绍的是Github Pages搭配Hexo的搭建方式。&lt;/p&gt;
&lt;h3 id=&#34;域名与DNS&#34;&gt;&lt;a href=&#34;#域名与DNS&#34; class=&#34;headerlink&#34; title=&#34;域名与DNS&#34;&gt;&lt;/a&gt;域名与DNS&lt;/h3&gt;&lt;p&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; 要怎么访问一个网站？你当然可以直接访问网站的IP地址，但是这不方便，大家一般都使用域名（Domain）。域名最右边的一节是域名后缀，通常用于标识域名类型，域名最右边的两节xxx.xxx作为一个整体通常表示一个顶级域名。它的左边可以再加若干节，如果加了，那些就都是顶级域名下的子域名了。为了完成特定域名（包括子域名）到特定IP的映射，需要一个DNS（Domain Name System）服务器，它将对特定域名的请求转发到特定的IP地址。&lt;/p&gt;
&lt;h3 id=&#34;Github-Pages-Hexo环境搭建&#34;&gt;&lt;a href=&#34;#Github-Pages-Hexo环境搭建&#34; class=&#34;headerlink&#34; title=&#34;Github Pages+Hexo环境搭建&#34;&gt;&lt;/a&gt;Github Pages+Hexo环境搭建&lt;/h3&gt;&lt;p&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; Hexo有一些依赖环境，但是它没有现成的安装包，开源项目嘛，无可厚非。首先你需要安装node.js环境，大家系统平台多种多样，怎么装就自己去&lt;a href=&#34;http://nodejs.cn/&#34;&gt;node官网&lt;/a&gt;上看吧；git客户端也是要装的，同理也自己去&lt;a href=&#34;https://git-scm.com/downloads&#34;&gt;官网&lt;/a&gt;看。此外我们还需要分发个SSH证书，就是把你计算机的公钥在Github帐号里复制一份，这样通过SSH方式连接Github时就可以验证你的身份，就不用输用户名密码了。而Hexo连接Github的方式就是走的SSH方式，所以这个步骤是必要的。win平台通常用SSH Client管理SSH连接，或者也可以用终端形式的putty或者SSH Secure Shell；Ubuntu下是&lt;code&gt;sudo apt-get install openssh-server&lt;/code&gt;；CentOS下是&lt;code&gt;sudo yum install openssh-server&lt;/code&gt;；Mac OS自带SSH客户端。私钥公钥生成和端口配置什么的我不是很想全都介绍，说个Ubuntu的吧，比较简单。&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; 没配git帐号的先配一下：&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;hljs&#34;&gt;git config --global user.email &amp;quot;你的邮箱&amp;quot;
git config --global user.name &amp;quot;你的Github用户名&amp;quot;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; 生成SSH密钥对：&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;hljs&#34;&gt;ssh -keygen -t rsa -C&amp;quot;前面配git时填过的邮箱&amp;quot;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; 然后一路回车，然后你在&lt;code&gt;~/.ssh&lt;/code&gt;目录下就有了id_rsa和id_rsa.pub两个文件，它们分别是你的私钥和公钥，你需要把私钥登记一下：&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;hljs&#34;&gt;ssh-add id_rsa
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; 接下来就是分发公钥了，你可以手动进id_rsa.pub复制公钥内容，也可以用系统工具复制：&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;hljs&#34;&gt;xclip -selection c  ~/.ssh/id_rsa.pub
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; 然后登录Github并&lt;a href=&#34;https://github.com/settings/ssh&#34;&gt;Add SSH Key&lt;/a&gt;，给新公钥起个名粘贴进去就好。然后测试一下：&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;hljs&#34;&gt;ssh -T git@github.com
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; 提示信息包含“successfully authenticated”就算成功了。如果有问题，可以重新设置，常见问题请参考：&lt;br&gt;&lt;a href=&#34;https://help.github.com/articles/generating-an-ssh-key/&#34;&gt;GitHub Help - Generating SSH Keys&lt;/a&gt;&lt;br&gt;&lt;a href=&#34;https://help.github.com/articles/error-permission-denied-publickey/&#34;&gt;GitHub Help - Error Permission denied (publickey)&lt;/a&gt;&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; 接下来是为node安装Hexo包：&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;hljs&#34;&gt;npm install -g hexo
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; Hexo封装了一些博客管理接口：&lt;br&gt;	&lt;br&gt;	hexo init &lt;folder&gt;  # 初始化目录，可以指定目录地址，我更喜欢进入目录后hexo init一下&lt;br&gt;	hexo n “title” # 创建新文章，你会在&amp;#x2F;source&amp;#x2F;_post目录下找到包含title的新md文档，你可以编辑它&lt;br&gt;	hexo s # 在本地查起服务查看效果，默认是访问0.0.0.0:4000&lt;br&gt;	hexo g # 为博客重新生成静态页面&lt;br&gt;	hexo d # 同步到Github Pages空间&lt;/p&gt;
&lt;h3 id=&#34;写博文&#34;&gt;&lt;a href=&#34;#写博文&#34; class=&#34;headerlink&#34; title=&#34;写博文&#34;&gt;&lt;/a&gt;写博文&lt;/h3&gt;&lt;p&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; 前面提到过，&lt;code&gt;hexo n&lt;/code&gt;之后我们就获得了一个新md文档，接下来你需要按照Markdown语法编辑这个文档。但Hexo的博文还需要包含一些必要内容以辅助页面关联及效果：&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;hljs&#34;&gt;title: postName #文章页面上的显示名称，可以任意修改，不会出现在URL中
date: 2016-4-25 11:30:16 #文章生成时间，一般不改，当然也可以任意修改
categories: #文章分类目录，可以为空，注意:后面有个空格
tags: #文章标签，可空，多标签请用格式[tag1,tag2,tag3]，注意:后面有个空格
photos: #fancybox功能将要显示是图片集合
- http://bruce.u.qiniudn.com/2013/11/27/reading/photos-0.jpg
- http://bruce.u.qiniudn.com/2013/11/27/reading/photos-1.jpg
---
摘要
&amp;lt;!--more--&amp;gt;
这里开始使用markdown格式输入你的正文。
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; 至于Markdown语法，读者可以自行百度，网上很多。写完保存之后可以先&lt;code&gt;hexo s&lt;/code&gt;一下，去0.0.0.0:4000看效果，如果觉得满意，再&lt;code&gt;hexo g&lt;/code&gt;生成静态页面并&lt;code&gt;hexo d&lt;/code&gt;同步到Github Pages。注意这里生成的整个静态网站页面都在&amp;#x2F;public子目录下，你完全可以起一个服务器把本地80口映射到这里。&lt;/p&gt;
&lt;h3 id=&#34;主题安装&#34;&gt;&lt;a href=&#34;#主题安装&#34; class=&#34;headerlink&#34; title=&#34;主题安装&#34;&gt;&lt;/a&gt;主题安装&lt;/h3&gt;&lt;p&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; Hexo迄今为止已经衍生出了很多主题，主题列表&lt;a href=&#34;https://github.com/hexojs/hexo/wiki/Themes&#34;&gt;Hexo Themes&lt;/a&gt;，我的博客使用的是&lt;a href=&#34;https://github.com/xiangming/landscape-plus&#34;&gt;Landscape plus&lt;/a&gt;，一个专为中国大陆用户做过调整的Hexo主题，别的Hexo主题读者可以自己百度一下。&lt;code&gt;hexo init&lt;/code&gt;一个目录之后，把选定的主题&lt;code&gt;git clone&lt;/code&gt;到Hexo目录的themes子目录下，然后编辑&amp;#x2F;_config.yml：&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;hljs&#34;&gt;theme: themename
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; 然后配置一下主题下的_config.yml：&lt;br&gt;	&lt;br&gt;	menu: #配置页头显示哪些菜单&lt;br&gt;	#  Home: &amp;#x2F;&lt;br&gt;	  Archives: &amp;#x2F;archives&lt;br&gt;	  Reading: &amp;#x2F;reading&lt;br&gt;	  About: &amp;#x2F;about&lt;br&gt;	#  Guestbook: &amp;#x2F;about&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;hljs&#34;&gt;excerpt_link: Read More #摘要链接文字
archive_yearly: false #按年存档

widgets: #配置页脚显示哪些小挂件
	- category
#  - tag
	- tagcloud
	- recent_posts
#  - blogroll

blogrolls: #友情链接
	- sitename: http://site.address
	- sitename: http://site.address
	- sitename: http://site.address

fancybox: true #是否开启fancybox效果，就是文章开头加一个电子相册的感觉

duoshuo_shortname: username #多说账号

google_analytics:
rss:
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; 要更新主题只需要从Github拉取主题内容即可&lt;code&gt;cd themes/modernist&lt;/code&gt;然后&lt;code&gt;git pull&lt;/code&gt;。&lt;/p&gt;
&lt;h3 id=&#34;评论插件&#34;&gt;&lt;a href=&#34;#评论插件&#34; class=&#34;headerlink&#34; title=&#34;评论插件&#34;&gt;&lt;/a&gt;评论插件&lt;/h3&gt;&lt;p&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; 有很多免费的第三方评论插件提供商，你可以通过简单的配置使用他们的数据库管理你网站的评论数据，hexo默认集成的是Disqus，但是有GFW存在，所以我选择了国内的&lt;a href=&#34;http://duoshuo.com/&#34;&gt;多说&lt;/a&gt;。直接用你的微博&amp;#x2F;豆瓣&amp;#x2F;人人&amp;#x2F;百度&amp;#x2F;开心网帐号登录多说，做一下基本设置。你也可以在多说后台自定义一下多说评论框的格式，比如评论框的位置，对于css设置，可以&lt;a href=&#34;http://dev.duoshuo.com/docs/4ff1cfd0397309552c000017&#34;&gt;参考这里&lt;/a&gt;。如果你是有的其他第三方评论系统，将通用代码粘贴到&amp;#x2F;themes&amp;#x2F;themename&amp;#x2F;layout&amp;#x2F;_partial&amp;#x2F;comment.ejs里面：&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;hljs&#34;&gt;&amp;lt;% if (config.disqus_shortname &amp;amp;&amp;amp; page.comments)&amp;#123; %&amp;gt;
&amp;lt;section id=&amp;quot;comment&amp;quot;&amp;gt;
  #你的通用代码
&amp;lt;% &amp;#125; %&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&#34;域名配置&#34;&gt;&lt;a href=&#34;#域名配置&#34; class=&#34;headerlink&#34; title=&#34;域名配置&#34;&gt;&lt;/a&gt;域名配置&lt;/h3&gt;&lt;p&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; 国内域名服务商有万网、腾讯、阿里、美橙等等，国外推荐&lt;a href=&#34;http://www.godaddy.com/&#34;&gt;狗爹（godaddy）&lt;/a&gt;。&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; 买完域名你需要给域名指定DNS服务器。DNS服务商非常多，一般域名服务商和云主机服务商都提供DNS服务，我选择的是国内的&lt;a href=&#34;http://www.dnspod.cn/&#34;&gt;DNSPod&lt;/a&gt;，免费的，提供监测网站状态功能，还挺好用。&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; 域名服务商和DNS服务商那边的配置它们各自网站都会提供教程，自己网站空间中给静态网站绑定域名很简单，在网站根目录放一个叫CNAME的文档，里面填上你的域名就行了。&lt;/p&gt;
&lt;h3 id=&#34;参考文章&#34;&gt;&lt;a href=&#34;#参考文章&#34; class=&#34;headerlink&#34; title=&#34;参考文章&#34;&gt;&lt;/a&gt;参考文章&lt;/h3&gt;&lt;p&gt;&lt;a href=&#34;http://ibruce.info/2013/11/22/hexo-your-blog/&#34;&gt;http://ibruce.info/2013/11/22/hexo-your-blog/&lt;/a&gt;（大大的教程写的真心详细，基本就是这篇领我进门）&lt;/p&gt;
</content>
        <category term="github" />
        <category term="domain" />
        <category term="DNS" />
        <category term="hexo" />
        <updated>2016-04-24T13:02:39.000Z</updated>
    </entry>
</feed>
