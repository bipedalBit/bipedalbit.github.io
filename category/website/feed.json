{
    "version": "https://jsonfeed.org/version/1",
    "title": "Hacking to the gate! • All posts by \"website\" category",
    "description": "Bipedal Bit's blog",
    "home_page_url": "https://blog.bipedalbit.net",
    "items": [
        {
            "id": "https://blog.bipedalbit.net/2016/04/25/%E5%88%A9%E7%94%A8Dropbox%E5%AE%9E%E7%8E%B0%E5%AE%9E%E6%97%B6%E5%90%8C%E6%AD%A5%E7%9A%84%E9%9D%99%E6%80%81%E7%AB%99/",
            "url": "https://blog.bipedalbit.net/2016/04/25/%E5%88%A9%E7%94%A8Dropbox%E5%AE%9E%E7%8E%B0%E5%AE%9E%E6%97%B6%E5%90%8C%E6%AD%A5%E7%9A%84%E9%9D%99%E6%80%81%E7%AB%99/",
            "title": "利用Dropbox实现实时同步的静态站",
            "date_published": "2016-04-25T06:05:09.000Z",
            "content_html": "<p>&nbsp;&nbsp;&nbsp; 上个周末正在练习nginx静态站服务器功能的基本配置，忽然想到一个点子。既然我有现成的VPS可以用，而且只是用来搭ShadowSocks服务器科学上网用，不拿来做建站练习实在有点浪费。之前早就把VPS和手头各个平台上的ShadowSocks+Dropbox环境配好了，那为什么不干脆在VPS的Dropbox文件夹里建站呢？自动同步，多终端随处修改，应该会比Github Pages更方便。试了一下，结果亦可赛艇。</p>\n<span id=\"more\"></span>\n<h3 id=\"VPS\"><a href=\"#VPS\" class=\"headerlink\" title=\"VPS\"></a>VPS</h3><p>&nbsp;&nbsp;&nbsp; VPS的选择主要看需要，论国内访问速度当然还是BAT和新浪之类的国产云主机最好，但是如果你想顺便用来科学上网，那么就得选国外VPS服务商了。一般来说，提起国外的网络服务运营商，总是想起欧美的，尤其是美国的，然而事实上，日本的VPS产业也很发达。大名鼎鼎的<a href=\"https://www.linode.com/\">Linode</a>、<a href=\"https://www.conoha.jp/zh/\">Conoha</a>等服务商，因为机房离国内近，相对美国的VPS有了速度优势。最近可能意识到墙内市场的潜力，有的日本VPS服务明显做的很贴咱的心了，比如我选的<a href=\"https://www.z.com/\">z.com</a>，它就是Conoha重新套了个壳，900日元每月的开销不算便宜也不很贵，但是它能用支付宝结帐！</p>\n<h3 id=\"系统环境\"><a href=\"#系统环境\" class=\"headerlink\" title=\"系统环境\"></a>系统环境</h3><p>&nbsp;&nbsp;&nbsp; 要搭服务器，不论什么功能，稳定性是很重要的，虽然巨硬和IBM也分别有server产品，但是咱用不起，挑个Linux系统比较合适，至于Mac OS，你是要搭服务器，又不是要去星巴克。我Linux入门时选择的是最流行的发行版Ubuntu，于是VPS也挑了Ubuntu 14.04LTS的镜像，使用和练习都比较方便，上手快，国内大家爱用的还有CentOS和RedHat。就别选什么Desktop镜像了，DE占空间又浪费资源，就算有远程桌面，也没有必要用，SSH连接足矣。把公钥放Github，wget到服务器~&#x2F;.ssh目录，改个名叫authorized_keys就行，多个公钥可以都放authorized_keys里面，一个一行就好。</p>\n<h3 id=\"Dropbox\"><a href=\"#Dropbox\" class=\"headerlink\" title=\"Dropbox\"></a>Dropbox</h3><p>&nbsp;&nbsp;&nbsp; Dropbox是个云盘，跟国内遍地都是的云盘有几个不同点，首先是资历老，然后给的免费空间少（XDDDD），2GB，跨平台做得好，几乎所有系统平台都有客户端，最重要的是有一个文件实时同步功能（也许正是这个功能限制了免费空间的大小），最后，是的，国外的好东西一般是要被墙的，Dropbox也不例外。会科学上网的同学们可以各显神通去<a href=\"https://www.dropbox.com/\">官网</a>注册，下客户端试用一下。在VPS上装个Dropbox用来传文件简直方便，VPS网快，墙内下不动的东西也可以VPS下完从Dropbox拖回来。据说国内的金山快盘可以作为Dropbox的替代品，改天做个评测再发博文介绍下。别跟我提百度云，且不论它没有官方Linux客户端且免费空间太大，我对百度有偏见。<br>&nbsp;&nbsp;&nbsp; 这篇文用到的就是Dropbox的自动同步功能，在各个终端的Dropbox文件夹内，内容都与云端进行实时同步。既然是个文件夹，那么里面放一个静态站也没有什么不可以了，2GB绰绰有余。</p>\n<h3 id=\"Nginx\"><a href=\"#Nginx\" class=\"headerlink\" title=\"Nginx\"></a>Nginx</h3><p>&nbsp;&nbsp;&nbsp; <a href=\"http://nginx.org/\">Nginx</a>读作engine X，是由Igor Sysoev（俄罗斯籍）为俄罗斯访问量第二的Rambler.ru站点开发的，第一个公开版本0.1.0发布于2004年10月4日。其将源代码以类BSD许可证的形式发布，因它的稳定性、丰富的功能集、示例配置文件和低系统资源的消耗而闻名。主要功能为静态网站的服务器、多服务端的负载均衡服务器即反向代理服务器。配置简单、高效、轻。既然是做静态站，我首选了Nginx作为服务器，Apache有点笨重，不做动态站就先不装了。</p>\n<h3 id=\"Hexo\"><a href=\"#Hexo\" class=\"headerlink\" title=\"Hexo\"></a>Hexo</h3><p>&nbsp;&nbsp;&nbsp; 做什么样的静态站呢？这次直接把我的Hexo博客拿来做实验。<a href=\"https://bipedalbit.net/2016/4/24/hexo%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA/\">上篇文</a>提到过，Hexo是个静态博客站生成器，<code>hexo g</code>命令执行后，Hexo项目目录的public子目录下就是静态站的确切内容了。可以干脆把Hexo项目目录放在Dropbox文件夹中，每次<code>hexo g</code>之后，自动更新静态站内容，同时Dropbox自动把静态站同步到VPS，VPS的Nginx不需要更改配置因为地址映射没有变化。于是我们现在可以在本地修改Hexo博客后自动发布更新到直连外网的VPS，还可以在任意一个向Github分发过SSH公钥的终端向Github Pages发布新的静态站内容。<br>&nbsp;&nbsp;&nbsp; 不知到你们想到了什么，我觉得这个套路可以使VPS上维护一个经常预更新的静态站alpha版，Github Pages上维护一个比较稳定的静态站beta版。</p>\n",
            "tags": [
                "nginx",
                "hexo",
                "vps",
                "dropbox"
            ]
        },
        {
            "id": "https://blog.bipedalbit.net/2016/04/24/hexo%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA/",
            "url": "https://blog.bipedalbit.net/2016/04/24/hexo%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA/",
            "title": "hexo博客搭建",
            "date_published": "2016-04-24T13:02:39.000Z",
            "content_html": "<p>&nbsp;&nbsp;&nbsp; 转眼三个多月没更博文了，并没有荒废只是有点忙。攒了很多想写的东西，先填个拖了很久的坑：我这个博客是怎么搭起来的。<br>&nbsp;&nbsp;&nbsp; 总的来说，我的博客是由Github Pages维护，本地用Hexo管理的一个静态博客。这篇文里我将介绍搭建Github Pages+Hexo博客的过程。</p>\n<span id=\"more\"></span>\n<p>&nbsp;&nbsp;&nbsp; 在讲搭建流程之前需要铺垫一下，介绍几个基本概念，Github Pages、Hexo、域名和DNS服务。</p>\n<h3 id=\"Github-Pages\"><a href=\"#Github-Pages\" class=\"headerlink\" title=\"Github Pages\"></a>Github Pages</h3><p>&nbsp;&nbsp;&nbsp; 如果想搭建一个自己的博客，首先你需要一个7×24不间断服务的稳定服务器。一般来说，geek们不会自己买一个，我们可以租一个云服务器。有更好的选择吗？有。我们也可以找到一些免费的云空间，比如新浪的SAE（以后没准就不免费了），还有我要讲的Github Pages。Github Pages是Github（如果你不知道Github是什么可以自己百度，这里我不太想解释）提供的一项福利，帮助广大geek们维护一个静态网站空间。静态网站就是页面内容不会随着数据库中数据的变化而动态的发生变化的网站，各大购物网站都是典型的动态网站。通常个人博客主要包含静态内容，就算需要修改更新，手动处理也完全足够，评论系统除外，但评论系统可以用第三方插件。于是这里有了分歧，一部分人选择了自己管理评论系统的数据库，还想偶尔在网站上玩点酷炫的动态网站花活，比如挂个网页游戏或者弹幕播放器，他们需要一个完全控制的云服务器，如SAE、百度云、腾讯云、Linode、Conoha等等；另一部分人希望让博客单纯一点，静态网站是更好的选择，Github向每一个用户帐号免费提供一个静态网站空间。<br>&nbsp;&nbsp;&nbsp; Github Page使用起来很简单，它的<a href=\"https://pages.github.com/\">网站首页</a>上有讲解，其实就是在Github新建一个repository，命名为username.github.io，其中username为你的Github用户名。这个repository就是你的静态网站空间了，访问它可以使用刚才的username.github.io，也就是Github Pages的二级域名。如果你是Github的用户，接下来你一定知道怎么更新网站内容了。</p>\n<h3 id=\"Hexo\"><a href=\"#Hexo\" class=\"headerlink\" title=\"Hexo\"></a>Hexo</h3><p>&nbsp;&nbsp;&nbsp; Hexo是一个开源的静态博客生成器，用node.js开发，作者是台湾大学生tommy351。这里我要提一句，node.js不是js，是基于谷歌v8引擎（js解析引擎）开发的一种服务端语言，语法与js没有什么两样，可以在http协议外（使用socket.io包）实现区别于AJAX的服务器主动推，鼓吹面向过程、基于消息机制的函数异步处理特性。Hexo封装了不止一种对免费服务器空间的接口，其中也包括Github的。这篇文里我准备介绍的是Github Pages搭配Hexo的搭建方式。</p>\n<h3 id=\"域名与DNS\"><a href=\"#域名与DNS\" class=\"headerlink\" title=\"域名与DNS\"></a>域名与DNS</h3><p>&nbsp;&nbsp;&nbsp; 要怎么访问一个网站？你当然可以直接访问网站的IP地址，但是这不方便，大家一般都使用域名（Domain）。域名最右边的一节是域名后缀，通常用于标识域名类型，域名最右边的两节xxx.xxx作为一个整体通常表示一个顶级域名。它的左边可以再加若干节，如果加了，那些就都是顶级域名下的子域名了。为了完成特定域名（包括子域名）到特定IP的映射，需要一个DNS（Domain Name System）服务器，它将对特定域名的请求转发到特定的IP地址。</p>\n<h3 id=\"Github-Pages-Hexo环境搭建\"><a href=\"#Github-Pages-Hexo环境搭建\" class=\"headerlink\" title=\"Github Pages+Hexo环境搭建\"></a>Github Pages+Hexo环境搭建</h3><p>&nbsp;&nbsp;&nbsp; Hexo有一些依赖环境，但是它没有现成的安装包，开源项目嘛，无可厚非。首先你需要安装node.js环境，大家系统平台多种多样，怎么装就自己去<a href=\"http://nodejs.cn/\">node官网</a>上看吧；git客户端也是要装的，同理也自己去<a href=\"https://git-scm.com/downloads\">官网</a>看。此外我们还需要分发个SSH证书，就是把你计算机的公钥在Github帐号里复制一份，这样通过SSH方式连接Github时就可以验证你的身份，就不用输用户名密码了。而Hexo连接Github的方式就是走的SSH方式，所以这个步骤是必要的。win平台通常用SSH Client管理SSH连接，或者也可以用终端形式的putty或者SSH Secure Shell；Ubuntu下是<code>sudo apt-get install openssh-server</code>；CentOS下是<code>sudo yum install openssh-server</code>；Mac OS自带SSH客户端。私钥公钥生成和端口配置什么的我不是很想全都介绍，说个Ubuntu的吧，比较简单。<br>&nbsp;&nbsp;&nbsp; 没配git帐号的先配一下：</p>\n<pre><code class=\"hljs\">git config --global user.email &quot;你的邮箱&quot;\ngit config --global user.name &quot;你的Github用户名&quot;\n</code></pre>\n<p>&nbsp;&nbsp;&nbsp; 生成SSH密钥对：</p>\n<pre><code class=\"hljs\">ssh -keygen -t rsa -C&quot;前面配git时填过的邮箱&quot;\n</code></pre>\n<p>&nbsp;&nbsp;&nbsp; 然后一路回车，然后你在<code>~/.ssh</code>目录下就有了id_rsa和id_rsa.pub两个文件，它们分别是你的私钥和公钥，你需要把私钥登记一下：</p>\n<pre><code class=\"hljs\">ssh-add id_rsa\n</code></pre>\n<p>&nbsp;&nbsp;&nbsp; 接下来就是分发公钥了，你可以手动进id_rsa.pub复制公钥内容，也可以用系统工具复制：</p>\n<pre><code class=\"hljs\">xclip -selection c  ~/.ssh/id_rsa.pub\n</code></pre>\n<p>&nbsp;&nbsp;&nbsp; 然后登录Github并<a href=\"https://github.com/settings/ssh\">Add SSH Key</a>，给新公钥起个名粘贴进去就好。然后测试一下：</p>\n<pre><code class=\"hljs\">ssh -T git@github.com\n</code></pre>\n<p>&nbsp;&nbsp;&nbsp; 提示信息包含“successfully authenticated”就算成功了。如果有问题，可以重新设置，常见问题请参考：<br><a href=\"https://help.github.com/articles/generating-an-ssh-key/\">GitHub Help - Generating SSH Keys</a><br><a href=\"https://help.github.com/articles/error-permission-denied-publickey/\">GitHub Help - Error Permission denied (publickey)</a><br>&nbsp;&nbsp;&nbsp; 接下来是为node安装Hexo包：</p>\n<pre><code class=\"hljs\">npm install -g hexo\n</code></pre>\n<p>&nbsp;&nbsp;&nbsp; Hexo封装了一些博客管理接口：<br>\t<br>\thexo init <folder>  # 初始化目录，可以指定目录地址，我更喜欢进入目录后hexo init一下<br>\thexo n “title” # 创建新文章，你会在&#x2F;source&#x2F;_post目录下找到包含title的新md文档，你可以编辑它<br>\thexo s # 在本地查起服务查看效果，默认是访问0.0.0.0:4000<br>\thexo g # 为博客重新生成静态页面<br>\thexo d # 同步到Github Pages空间</p>\n<h3 id=\"写博文\"><a href=\"#写博文\" class=\"headerlink\" title=\"写博文\"></a>写博文</h3><p>&nbsp;&nbsp;&nbsp; 前面提到过，<code>hexo n</code>之后我们就获得了一个新md文档，接下来你需要按照Markdown语法编辑这个文档。但Hexo的博文还需要包含一些必要内容以辅助页面关联及效果：</p>\n<pre><code class=\"hljs\">title: postName #文章页面上的显示名称，可以任意修改，不会出现在URL中\ndate: 2016-4-25 11:30:16 #文章生成时间，一般不改，当然也可以任意修改\ncategories: #文章分类目录，可以为空，注意:后面有个空格\ntags: #文章标签，可空，多标签请用格式[tag1,tag2,tag3]，注意:后面有个空格\nphotos: #fancybox功能将要显示是图片集合\n- http://bruce.u.qiniudn.com/2013/11/27/reading/photos-0.jpg\n- http://bruce.u.qiniudn.com/2013/11/27/reading/photos-1.jpg\n---\n摘要\n&lt;!--more--&gt;\n这里开始使用markdown格式输入你的正文。\n</code></pre>\n<p>&nbsp;&nbsp;&nbsp; 至于Markdown语法，读者可以自行百度，网上很多。写完保存之后可以先<code>hexo s</code>一下，去0.0.0.0:4000看效果，如果觉得满意，再<code>hexo g</code>生成静态页面并<code>hexo d</code>同步到Github Pages。注意这里生成的整个静态网站页面都在&#x2F;public子目录下，你完全可以起一个服务器把本地80口映射到这里。</p>\n<h3 id=\"主题安装\"><a href=\"#主题安装\" class=\"headerlink\" title=\"主题安装\"></a>主题安装</h3><p>&nbsp;&nbsp;&nbsp; Hexo迄今为止已经衍生出了很多主题，主题列表<a href=\"https://github.com/hexojs/hexo/wiki/Themes\">Hexo Themes</a>，我的博客使用的是<a href=\"https://github.com/xiangming/landscape-plus\">Landscape plus</a>，一个专为中国大陆用户做过调整的Hexo主题，别的Hexo主题读者可以自己百度一下。<code>hexo init</code>一个目录之后，把选定的主题<code>git clone</code>到Hexo目录的themes子目录下，然后编辑&#x2F;_config.yml：</p>\n<pre><code class=\"hljs\">theme: themename\n</code></pre>\n<p>&nbsp;&nbsp;&nbsp; 然后配置一下主题下的_config.yml：<br>\t<br>\tmenu: #配置页头显示哪些菜单<br>\t#  Home: &#x2F;<br>\t  Archives: &#x2F;archives<br>\t  Reading: &#x2F;reading<br>\t  About: &#x2F;about<br>\t#  Guestbook: &#x2F;about</p>\n<pre><code class=\"hljs\">excerpt_link: Read More #摘要链接文字\narchive_yearly: false #按年存档\n\nwidgets: #配置页脚显示哪些小挂件\n\t- category\n#  - tag\n\t- tagcloud\n\t- recent_posts\n#  - blogroll\n\nblogrolls: #友情链接\n\t- sitename: http://site.address\n\t- sitename: http://site.address\n\t- sitename: http://site.address\n\nfancybox: true #是否开启fancybox效果，就是文章开头加一个电子相册的感觉\n\nduoshuo_shortname: username #多说账号\n\ngoogle_analytics:\nrss:\n</code></pre>\n<p>&nbsp;&nbsp;&nbsp; 要更新主题只需要从Github拉取主题内容即可<code>cd themes/modernist</code>然后<code>git pull</code>。</p>\n<h3 id=\"评论插件\"><a href=\"#评论插件\" class=\"headerlink\" title=\"评论插件\"></a>评论插件</h3><p>&nbsp;&nbsp;&nbsp; 有很多免费的第三方评论插件提供商，你可以通过简单的配置使用他们的数据库管理你网站的评论数据，hexo默认集成的是Disqus，但是有GFW存在，所以我选择了国内的<a href=\"http://duoshuo.com/\">多说</a>。直接用你的微博&#x2F;豆瓣&#x2F;人人&#x2F;百度&#x2F;开心网帐号登录多说，做一下基本设置。你也可以在多说后台自定义一下多说评论框的格式，比如评论框的位置，对于css设置，可以<a href=\"http://dev.duoshuo.com/docs/4ff1cfd0397309552c000017\">参考这里</a>。如果你是有的其他第三方评论系统，将通用代码粘贴到&#x2F;themes&#x2F;themename&#x2F;layout&#x2F;_partial&#x2F;comment.ejs里面：</p>\n<pre><code class=\"hljs\">&lt;% if (config.disqus_shortname &amp;&amp; page.comments)&#123; %&gt;\n&lt;section id=&quot;comment&quot;&gt;\n  #你的通用代码\n&lt;% &#125; %&gt;\n</code></pre>\n<h3 id=\"域名配置\"><a href=\"#域名配置\" class=\"headerlink\" title=\"域名配置\"></a>域名配置</h3><p>&nbsp;&nbsp;&nbsp; 国内域名服务商有万网、腾讯、阿里、美橙等等，国外推荐<a href=\"http://www.godaddy.com/\">狗爹（godaddy）</a>。<br>&nbsp;&nbsp;&nbsp; 买完域名你需要给域名指定DNS服务器。DNS服务商非常多，一般域名服务商和云主机服务商都提供DNS服务，我选择的是国内的<a href=\"http://www.dnspod.cn/\">DNSPod</a>，免费的，提供监测网站状态功能，还挺好用。<br>&nbsp;&nbsp;&nbsp; 域名服务商和DNS服务商那边的配置它们各自网站都会提供教程，自己网站空间中给静态网站绑定域名很简单，在网站根目录放一个叫CNAME的文档，里面填上你的域名就行了。</p>\n<h3 id=\"参考文章\"><a href=\"#参考文章\" class=\"headerlink\" title=\"参考文章\"></a>参考文章</h3><p><a href=\"http://ibruce.info/2013/11/22/hexo-your-blog/\">http://ibruce.info/2013/11/22/hexo-your-blog/</a>（大大的教程写的真心详细，基本就是这篇领我进门）</p>\n",
            "tags": [
                "github",
                "domain",
                "DNS",
                "hexo"
            ]
        }
    ]
}