{
    "version": "https://jsonfeed.org/version/1",
    "title": "Hacking to the gate! • All posts by \"website\" category",
    "description": "Bipedal Bit's blog",
    "home_page_url": "https://bipedalbit.net",
    "items": [
        {
            "id": "https://bipedalbit.net/2025/06/11/%E8%AE%B0%E4%B8%80%E6%AC%A1DNS%E6%B1%A1%E6%9F%93%E5%BA%94%E5%AF%B9/",
            "url": "https://bipedalbit.net/2025/06/11/%E8%AE%B0%E4%B8%80%E6%AC%A1DNS%E6%B1%A1%E6%9F%93%E5%BA%94%E5%AF%B9/",
            "title": "记一次DNS污染应对",
            "date_published": "2025-06-11T12:22:04.000Z",
            "content_html": "<p>静态站的waline评论插件服务的二级域名被ISP DNS做了污染封禁导致评论插件和访问计数不可用。记录一下我排查和解决问题的过程与思考。</p>\n<span id=\"more\"></span>\n<h1 id=\"现象\"><a href=\"#现象\" class=\"headerlink\" title=\"现象\"></a>现象</h1><ul>\n<li><p>特定条件下，从客户端访问我的静态站时，客户端请求我的自建waline服务失败，看响应头发现remote ip是(::1)，ipv6回环地址。</p>\n</li>\n<li><p>ping对应域名证实DNS结果确实为(::1)。</p>\n</li>\n<li><p>为了明确问题，我用不同网络环境做了测试：</p>\n</li>\n</ul>\n<table>\n<thead>\n<tr>\n<th>网络</th>\n<th>代理</th>\n<th>DNS</th>\n<th>结果</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>中国移动蜂巢5G</td>\n<td>关闭</td>\n<td>自动</td>\n<td>fail</td>\n</tr>\n<tr>\n<td>中国移动蜂巢5G</td>\n<td>全局</td>\n<td>等同于8.8.8.8</td>\n<td>success</td>\n</tr>\n<tr>\n<td>中国移动蜂巢5G</td>\n<td>关闭</td>\n<td>114.114.114.114</td>\n<td>success</td>\n</tr>\n<tr>\n<td>中国移动光纤宽带</td>\n<td>关闭</td>\n<td>自动</td>\n<td>fail</td>\n</tr>\n<tr>\n<td>中国移动光纤宽带</td>\n<td>全局</td>\n<td>等同于8.8.8.8</td>\n<td>success</td>\n</tr>\n<tr>\n<td>中国移动光纤宽带</td>\n<td>关闭</td>\n<td>114.114.114.114</td>\n<td>success</td>\n</tr>\n</tbody></table>\n<p>我手头只有移动的5G网络和宽带网络，还不好排除ISP本身状态的影响，但绕过中国移动网络的ISP DNS，就能成功。</p>\n<p>初步判断是DNS的问题。上<a href=\"https://dnschecker.org/\">DNSChecker</a>验证一下非ISP DNS，用当前的中国移动ISP+各种全球非ISP DNS做测试，结果是域名解析全部正确。那么看起来真的很可能是ISP DNS主动做了污染。</p>\n<p>搜搜有前科吗？有的，国内ISP偶现用回环地址做DNS污染来针对性封禁域名的情况。</p>\n<p>捞个本地的移动ISP DNS试试，<code>dig @211.137.64.163 &lt;domain&gt;</code>：</p>\n<figure class=\"highlight nix\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs nix\">; <span class=\"hljs-operator\">&lt;</span><span class=\"hljs-operator\">&lt;</span><span class=\"hljs-operator\">&gt;</span><span class=\"hljs-operator\">&gt;</span> DiG <span class=\"hljs-number\">9.18</span>.<span class=\"hljs-number\">3</span>0-<span class=\"hljs-number\">0</span>ubuntu0.<span class=\"hljs-number\">24.04</span>.<span class=\"hljs-number\">2</span><span class=\"hljs-operator\">-</span>Ubuntu <span class=\"hljs-operator\">&lt;</span><span class=\"hljs-operator\">&lt;</span><span class=\"hljs-operator\">&gt;</span><span class=\"hljs-operator\">&gt;</span> @<span class=\"hljs-number\">211.137</span>.<span class=\"hljs-number\">64.163</span> <span class=\"hljs-symbol\">&lt;domain&gt;</span><br>; (<span class=\"hljs-number\">1</span> server found)<br>;; global <span class=\"hljs-params\">options:</span> <span class=\"hljs-operator\">+</span>cmd<br>;; Got <span class=\"hljs-params\">answer:</span><br>;; <span class=\"hljs-operator\">-&gt;</span><span class=\"hljs-operator\">&gt;</span>HEADER<span class=\"hljs-operator\">&lt;</span><span class=\"hljs-operator\">&lt;</span><span class=\"hljs-operator\">-</span> <span class=\"hljs-params\">opcode:</span> QUERY, <span class=\"hljs-params\">status:</span> NOERROR, <span class=\"hljs-params\">id:</span> <span class=\"hljs-number\">48130</span><br>;; <span class=\"hljs-params\">flags:</span> qr rd ra; <span class=\"hljs-params\">QUERY:</span> <span class=\"hljs-number\">1</span>, <span class=\"hljs-params\">ANSWER:</span> <span class=\"hljs-number\">1</span>, <span class=\"hljs-params\">AUTHORITY:</span> <span class=\"hljs-number\">0</span>, <span class=\"hljs-params\">ADDITIONAL:</span> <span class=\"hljs-number\">0</span><br><br>;; QUESTION <span class=\"hljs-params\">SECTION:</span><br>;<span class=\"hljs-symbol\">&lt;domain&gt;</span>.\t\tIN\tA<br><br>;; ANSWER <span class=\"hljs-params\">SECTION:</span><br><span class=\"hljs-symbol\">&lt;domain&gt;</span>.\t<span class=\"hljs-number\">3600</span>\tIN\tA\t<span class=\"hljs-number\">127.0</span>.<span class=\"hljs-number\">0.1</span><br><br>;; Query <span class=\"hljs-params\">time:</span> <span class=\"hljs-number\">5</span> msec<br>;; <span class=\"hljs-params\">SERVER:</span> <span class=\"hljs-number\">211.137</span>.<span class=\"hljs-number\">64.163</span><span class=\"hljs-comment\">#53(211.137.64.163) (UDP)</span><br>;; <span class=\"hljs-params\">WHEN:</span> Wed Jun <span class=\"hljs-number\">11</span> <span class=\"hljs-number\">20</span>:<span class=\"hljs-number\">16</span>:<span class=\"hljs-number\">16</span> CST <span class=\"hljs-number\">2025</span><br>;; MSG SIZE  <span class=\"hljs-params\">rcvd:</span> <span class=\"hljs-number\">55</span><br></code></pre></td></tr></table></figure>\n\n<p>真的给我解成了回环地址。</p>\n<p>上班时也试了下电信的ISP DNS，<code>dig @202.103.24.68 &lt;domain&gt;</code>：</p>\n<figure class=\"highlight nix\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs nix\">; <span class=\"hljs-operator\">&lt;</span><span class=\"hljs-operator\">&lt;</span><span class=\"hljs-operator\">&gt;</span><span class=\"hljs-operator\">&gt;</span> DiG <span class=\"hljs-number\">9.11</span>.<span class=\"hljs-number\">5</span><span class=\"hljs-operator\">-</span>P4-<span class=\"hljs-number\">5.1</span><span class=\"hljs-operator\">+</span>deb10u11-Debian <span class=\"hljs-operator\">&lt;</span><span class=\"hljs-operator\">&lt;</span><span class=\"hljs-operator\">&gt;</span><span class=\"hljs-operator\">&gt;</span> @<span class=\"hljs-number\">202.103</span>.<span class=\"hljs-number\">24.68</span> <span class=\"hljs-symbol\">&lt;domain&gt;</span><br>; (<span class=\"hljs-number\">1</span> server found)<br>;; global <span class=\"hljs-params\">options:</span> <span class=\"hljs-operator\">+</span>cmd<br>;; Got <span class=\"hljs-params\">answer:</span><br>;; <span class=\"hljs-operator\">-&gt;</span><span class=\"hljs-operator\">&gt;</span>HEADER<span class=\"hljs-operator\">&lt;</span><span class=\"hljs-operator\">&lt;</span><span class=\"hljs-operator\">-</span> <span class=\"hljs-params\">opcode:</span> QUERY, <span class=\"hljs-params\">status:</span> NOERROR, <span class=\"hljs-params\">id:</span> <span class=\"hljs-number\">17701</span><br>;; <span class=\"hljs-params\">flags:</span> qr aa rd; <span class=\"hljs-params\">QUERY:</span> <span class=\"hljs-number\">1</span>, <span class=\"hljs-params\">ANSWER:</span> <span class=\"hljs-number\">1</span>, <span class=\"hljs-params\">AUTHORITY:</span> <span class=\"hljs-number\">0</span>, <span class=\"hljs-params\">ADDITIONAL:</span> <span class=\"hljs-number\">0</span><br>;; <span class=\"hljs-params\">WARNING:</span> recursion requested but not available<br><br>;; QUESTION <span class=\"hljs-params\">SECTION:</span><br>;<span class=\"hljs-symbol\">&lt;domain&gt;</span>.\t\tIN\tA<br><br>;; ANSWER <span class=\"hljs-params\">SECTION:</span><br><span class=\"hljs-symbol\">&lt;domain&gt;</span>.\t<span class=\"hljs-number\">300</span>\tIN\tA\t<span class=\"hljs-number\">127.0</span>.<span class=\"hljs-number\">0.1</span><br><br>;; Query <span class=\"hljs-params\">time:</span> <span class=\"hljs-number\">5</span> msec<br>;; <span class=\"hljs-params\">SERVER:</span> <span class=\"hljs-number\">202.103</span>.<span class=\"hljs-number\">24.68</span><span class=\"hljs-comment\">#53(202.103.24.68)</span><br>;; <span class=\"hljs-params\">WHEN:</span> 三 <span class=\"hljs-number\">6</span>月 <span class=\"hljs-number\">11</span> <span class=\"hljs-number\">16</span>:<span class=\"hljs-number\">16</span>:<span class=\"hljs-number\">34</span> CST <span class=\"hljs-number\">2025</span><br>;; MSG SIZE  <span class=\"hljs-params\">rcvd:</span> <span class=\"hljs-number\">55</span><br></code></pre></td></tr></table></figure>\n\n<p>看来还不止被一个ISP做了DNS污染，都给我解成回环地址。</p>\n<h1 id=\"DNS劫持与DNS污染\"><a href=\"#DNS劫持与DNS污染\" class=\"headerlink\" title=\"DNS劫持与DNS污染\"></a>DNS劫持与DNS污染</h1><table>\n<thead>\n<tr>\n<th><strong>对比维度</strong></th>\n<th><strong>DNS劫持</strong></th>\n<th><strong>DNS污染</strong></th>\n</tr>\n</thead>\n<tbody><tr>\n<td><strong>攻击方式</strong></td>\n<td>篡改DNS解析结果</td>\n<td>伪造DNS响应数据</td>\n</tr>\n<tr>\n<td><strong>影响范围</strong></td>\n<td>个体或小范围</td>\n<td>大范围或区域</td>\n</tr>\n<tr>\n<td><strong>目的</strong></td>\n<td>诱导用户访问恶意网站</td>\n<td>干扰用户访问特定服务</td>\n</tr>\n<tr>\n<td><strong>典型场景</strong></td>\n<td>钓鱼、恶意软件传播</td>\n<td>网络封锁、广告注入</td>\n</tr>\n</tbody></table>\n<p>DNS劫持通常在客户端完成，DNS污染通常在网关或DNS服务上操作。</p>\n<h1 id=\"分析原因\"><a href=\"#分析原因\" class=\"headerlink\" title=\"分析原因\"></a>分析原因</h1><ul>\n<li>捞了下waline服务的日志，发现有不少”&#x2F;robots.txt not found”，还在80、443口都来了一遍。有搜索引擎爬虫或者模拟搜索引擎的爬虫试图抓取我waline服务端的响应内容，那么可能有人在收录或分析我的waline服务。其实应该也分析不出什么，这服务没过鉴权的情况下响应体里甚至不包含文字。</li>\n<li>其实也可能是二级域名本身的关键词命中了什么政策类的域名筛选规则，大家给二级域名起名也要谨慎点。</li>\n</ul>\n<h1 id=\"应对\"><a href=\"#应对\" class=\"headerlink\" title=\"应对\"></a>应对</h1><ul>\n<li><p>除了用于展示内容的静态站域名，其他功能性二级域名都用nginx配置加上禁爬声明先：</p>\n<figure class=\"highlight nginx\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs nginx\"><span class=\"hljs-comment\"># HTTP server block</span><br><span class=\"hljs-section\">server</span> &#123;<br>    <span class=\"hljs-attribute\">listen</span> <span class=\"hljs-number\">80</span>;<br>    <span class=\"hljs-attribute\">server_name</span> example.com;<br><br>    <span class=\"hljs-comment\"># 禁止爬虫访问所有内容</span><br>    <span class=\"hljs-section\">location</span> = /robots.txt &#123;<br>        <span class=\"hljs-attribute\">return</span> <span class=\"hljs-number\">200</span> <span class=\"hljs-string\">&quot;User-agent: *\\&quot;\\nDisallow: /&quot;</span>;<br>        <span class=\"hljs-attribute\">add_header</span> Content-Type text/plain;<br>        <span class=\"hljs-attribute\">add_header</span> Cache-Control <span class=\"hljs-string\">&quot;public, max-age=3600&quot;</span>;<br>        <span class=\"hljs-attribute\">if</span> (<span class=\"hljs-variable\">$request_method</span> !<span class=\"hljs-regexp\">~ ^(GET|HEAD)$</span> ) &#123;<br>            <span class=\"hljs-attribute\">return</span> <span class=\"hljs-number\">405</span>;<br>        &#125;<br>    &#125;<br><br>    <span class=\"hljs-comment\"># 其他请求重定向到 HTTPS</span><br>    <span class=\"hljs-section\">location</span> / &#123;<br>        <span class=\"hljs-attribute\">return</span> <span class=\"hljs-number\">301</span> https://<span class=\"hljs-variable\">$host</span><span class=\"hljs-variable\">$request_uri</span>;<br>    &#125;<br>&#125;<br><br><span class=\"hljs-comment\"># HTTPS server block</span><br><span class=\"hljs-section\">server</span> &#123;<br>    <span class=\"hljs-attribute\">listen</span> <span class=\"hljs-number\">443</span> ssl;<br>    <span class=\"hljs-attribute\">server_name</span> example.com;<br><br>    <span class=\"hljs-attribute\">ssl_certificate</span> /path/to/cert.pem;<br>    <span class=\"hljs-attribute\">ssl_certificate_key</span> /path/to/privkey.pem;<br><br>    <span class=\"hljs-comment\"># 禁止爬虫访问所有内容</span><br>    <span class=\"hljs-section\">location</span> = /robots.txt &#123;<br>        <span class=\"hljs-attribute\">return</span> <span class=\"hljs-number\">200</span> <span class=\"hljs-string\">&quot;User-agent: *\\&quot;\\nDisallow: /&quot;</span>;<br>        <span class=\"hljs-attribute\">add_header</span> Content-Type text/plain;<br>        <span class=\"hljs-attribute\">add_header</span> Cache-Control <span class=\"hljs-string\">&quot;public, max-age=3600&quot;</span>;<br>        <span class=\"hljs-attribute\">if</span> (<span class=\"hljs-variable\">$request_method</span> !<span class=\"hljs-regexp\">~ ^(GET|HEAD)$</span> ) &#123;<br>            <span class=\"hljs-attribute\">return</span> <span class=\"hljs-number\">405</span>;<br>        &#125;<br>    &#125;<br><br>    <span class=\"hljs-comment\"># 其他请求处理（如 root、proxy_pass 等）</span><br>    <span class=\"hljs-section\">location</span> / &#123;<br>        <span class=\"hljs-comment\"># 你的其他配置，如 proxy_pass 或 root</span><br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure>\n</li>\n<li><p>再给二级域名换成个更烂大街的抽象名称躲封禁规则，配好对应DNS记录和nginx路由。</p>\n</li>\n<li><p>用certbot更新下SSL证书：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">certbot certonly ----cert-name &lt;cert_name&gt; --manual --preferred-challenges http --webroot-path /root/Dropbox/&lt;homepage_dir&gt; -m me@bipedalbit.net -d &lt;domain1&gt; -d &lt;domain2&gt; -d &lt;domain3&gt;<br></code></pre></td></tr></table></figure>\n</li>\n<li><p>我不爱用<code>certbot run</code>自动改nginx配置文件更新SSL证书，会把我写好的nginx配置格式搞乱。用<code>certbot certonly</code>命令需要按命令行提示在指定域名下指定位置放个指定内容的文本文件证明你是指定域名内容的控制方，然后回车下一步。麻烦点，但低频操作，不自动化也负担不大。</p>\n</li>\n<li><p>改改waline服务的部署配置，把里面的服务二级域名更新下，重启服务。</p>\n</li>\n<li><p>OK这下通了，观察一天看看，还是通的，大概是妥了。</p>\n</li>\n</ul>\n",
            "tags": [
                "DNS",
                "DNS劫持",
                "DNS污染"
            ]
        },
        {
            "id": "https://bipedalbit.net/2025/06/07/%E5%86%8D%E8%B0%88hexo%E9%9D%99%E6%80%81%E7%AB%99%E6%90%AD%E5%BB%BA/",
            "url": "https://bipedalbit.net/2025/06/07/%E5%86%8D%E8%B0%88hexo%E9%9D%99%E6%80%81%E7%AB%99%E6%90%AD%E5%BB%BA/",
            "title": "再谈hexo静态站搭建",
            "date_published": "2025-06-07T15:12:47.000Z",
            "content_html": "<p>记录一下在2016年hexo静态站基础上完成站点翻新的主要思路和过程。这次翻新主要包含：hexo主题的审美升级，图床从七牛迁移到自建方案，评论插件从多说迁移到自建方案。</p>\n<span id=\"more\"></span>\n<h1 id=\"回顾\"><a href=\"#回顾\" class=\"headerlink\" title=\"回顾\"></a>回顾</h1><p>不是头一次谈hexo静态站搭建了，2016年就写了相关的博客，非常耐心事无巨细地介绍过<a href=\"https://bipedalbit.net/2016/04/24/hexo%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA/\">当时的搭建方案</a>。</p>\n<p>紧接着开了自己的VPS，于是又写文介绍了<a href=\"https://bipedalbit.net/2016/04/25/%E5%88%A9%E7%94%A8Dropbox%E5%AE%9E%E7%8E%B0%E5%AE%9E%E6%97%B6%E5%90%8C%E6%AD%A5%E7%9A%84%E9%9D%99%E6%80%81%E7%AB%99/\">迭代方案</a>，在VPS上做了镜像站部署，用dropbox做静态资源同步。现在由于国内不搭梯子访问github已经不稳定，VPS上的静态站反而成了主站，github pages上那个站成替身了哈哈。</p>\n<h1 id=\"概述\"><a href=\"#概述\" class=\"headerlink\" title=\"概述\"></a>概述</h1><p>新的静态站其实主要更新了3个点：</p>\n<ul>\n<li><p>主题：landscape-plus &#x3D;&gt; fluid</p>\n</li>\n<li><p>图床：七牛 &#x3D;&gt; 自建minio+cdn</p>\n</li>\n<li><p>评论插件：多说 &#x3D;&gt; 自建waline</p>\n</li>\n</ul>\n<h1 id=\"hexo\"><a href=\"#hexo\" class=\"headerlink\" title=\"hexo\"></a>hexo</h1><p>很幸运，在旧笔记本上居然翻到了完整未损坏的当年的hexo项目目录，不过其实要装修个人站的话，只需要把站里的markdown文章救回来就好，反正外面的静态站框架还是会用hexo。</p>\n<p>说起来，hexo这个静态站框架也是很经久不衰，虽然插件和主题消亡了不少个，但框架本身还在持续迭代，社区也还在活跃，一直出新的插件和主题，简直跟sublime text有一拼，我也是真爱掺和这种自由度高的DIY项目，怕是早晚要入PCB板、3D打印的坑。</p>\n<p>看了眼<a href=\"https://hexo.io/docs/commands\">hexo的新官方文档</a>，命令行用法没什么变化，项目结构也没变化，但比起9年前（Σ(⊙▽⊙”这就是成年人的世界吗？好吓人的时间尺度），除了github pages，适配了一些新的免费静态站托管平台：</p>\n<ul>\n<li><p>gitlab pages：依赖可用的gitlab，gitlab知道吧？github开源对标方案。</p>\n</li>\n<li><p><a href=\"https://www.heroku.com/\">Heroku</a>：一个可以免费托管全栈应用的PaaS平台，有每月白嫖小时数，应用有些休眠问题要解决。</p>\n</li>\n<li><p><a href=\"https://www.netlify.com/about/\">Netlify</a>：SaaS托管平台。</p>\n</li>\n<li><p><a href=\"https://vercel.com/\">Vercel</a>：前端应用托管平台，有白嫖流量，但好像是固定额度，不是每月送额度。</p>\n</li>\n<li><p><a href=\"https://rss3.io/\">RSS3</a>：就是基于web3那一套做的RSS托管，简单理解就是IPFS上放静态资源，区块链代币支付存储和基建维护费。IPFS这个存储方案嘛我调研过，彻底去中心，可靠、近似真·持久化，IO性能还OK，但是存储成本其实比各大云厂的对象存储还贵一些，考虑到赛博活菩萨甚至有可以白嫖的对象存储，IPFS吧就有点鸡肋，现在更多是用来破审核，偷摸分享些灰色地带的资源。</p>\n</li>\n<li><p>一些纯资源同步工具：Rsync、FTPSync、SFTP。</p>\n</li>\n<li><p>还提了一嘴，其他类似的静态资源托管方案可以自己同步hexo项目的public目录内容即可，比如我的VPS+dropbox方案。</p>\n</li>\n</ul>\n<p>hexo的项目结构带大家熟悉一下：</p>\n<figure class=\"highlight nix\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs nix\">.<br>├── _config.fluid.yml<br>├── _config.landscape.yml<br>├── _config.yml<br>├── db.json<br>├── node_modules<span class=\"hljs-symbol\">/</span><br>├── package.json<br>├── package-lock.json<br>├── public<span class=\"hljs-symbol\">/</span><br>├── scaffolds<span class=\"hljs-symbol\">/</span><br>│   ├── draft.md<br>│   ├── page.md<br>│   └── post.md<br>├── source<span class=\"hljs-symbol\">/</span><br>│   ├── about<span class=\"hljs-symbol\">/</span><br>│   │   └── index.md<br>│   ├── CNAME<br>│   ├── _drafts<span class=\"hljs-symbol\">/</span><br>│   ├── img<span class=\"hljs-symbol\">/</span><br>│   └── _posts<span class=\"hljs-symbol\">/</span><br>└── themes<span class=\"hljs-operator\">/</span><br></code></pre></td></tr></table></figure>\n\n<ul>\n<li><p><code>_config.yml</code>：这是整个hexo项目的配置文件</p>\n</li>\n<li><p><code>_config.landscape.yml</code>：这是landsacpe主题的hexo项目配置文件，landscape是hexo项目的默认主体，主题配置文件一般相对于项目配置文件会多出一些配置项，这就是主题的发挥空间。主题配置文件中的配置优先级高于项目配置，所以跟主题无关的项目配置可以配在<code>_config.yml</code>里，主题特有的配置配在主题配置文件里，方便随时换主题。</p>\n</li>\n<li><p><code>_config.fluid.yml</code>：这是我现在用的<a href=\"https://hexo.fluid-dev.com/docs/start/#%E4%B8%BB%E9%A2%98%E7%AE%80%E4%BB%8B\">fluid主题</a>的配置文件。</p>\n</li>\n<li><p>几个json文件和<code>node_modules/</code>目录理解成项目运行时环境就好，包括了hexo框架本身、插件和主题的实现。迁移hexo项目时，可以删掉<code>node_modules/</code>目录，靠json文件能重建项目运行时资源。</p>\n</li>\n<li><p><code>themes/</code>目录是用来放<code>git clone</code>下来的主题的，不是很冷门的主题的话，直接用命令安装到项目的运行时资源里就行。</p>\n</li>\n<li><p><code>public/</code>目录用来放hexo框架生成的网站静态资源，可以直接把这个目录当网站根目录，拿去部署网站。</p>\n</li>\n<li><p><code>scaffolds/</code>目录，字面意思是脚手架，其实是用来放几种markdown文件的模板，用生成markdown文件时会根据这些模板做一些内容初始化，我是还没有做什么修改。</p>\n</li>\n<li><p><code>source/</code>目录是项目的内容目录，其中的markdown文件会生成对应静态资源后搬到<code>public/</code>目录中，其他目录会原样搬到<code>public/</code>目录中。</p>\n</li>\n<li><p><code>source/about/index.md</code>用来创建关于页。</p>\n</li>\n<li><p><code>source/_drafts</code>目录用来放文章草稿，不会生成静态资源。</p>\n</li>\n<li><p><code>source/_posts</code>目录用来放文章正文，会生成静态资源。</p>\n</li>\n</ul>\n<p>hexo框架和fluid我就不细讲了，效果可以看我的静态站，用法可以看官方文档学习。</p>\n<h1 id=\"图床\"><a href=\"#图床\" class=\"headerlink\" title=\"图床\"></a>图床</h1><p>静态站的头图、文章插图都会用到一些比较大的图片资源，这些资源如果跟其他静态资源放在一起，会有几个缺点：</p>\n<ol>\n<li><p>图片可能越攒越多，对静态站的托管平台造成磁盘空间压力。静态站内的静态资源我是用dropbox同步，所以先于磁盘空间承压的瓶颈点是dropbox容量，这个对我影响比较大。</p>\n</li>\n<li><p>向静态站托管平台同步图片文件渠道通常比较受限，不能随心所欲，不那么方便日常攒图随时更新。这点上用dropbox倒是还算方便。</p>\n</li>\n<li><p>图片在静态站内部，客户端拉取资源需要走站域名，如果你有多个站，不方便跨站共享图，可能会有跨域问题。</p>\n</li>\n<li><p>图片的IO会占据静态站在托管平台的大部分IO带宽，如果你的IO带宽很有限或者流量受限，就比较危险了。有人说可以上CDN，是能缓解不少，但资源更新比较频繁的话，CDN回源也会频繁，还是会吃IO。我VPS带宽、流量可观，所以这点倒是无所谓。</p>\n</li>\n</ol>\n<p>长远考虑，我需要使用独立的、配有CDN的图床。</p>\n<p>上一版静态站，我的图床是七牛图床，当时七牛提供子域名给每个用户空间，现在七牛要求用户自行绑定备案域名。备案可太麻烦了，我选择换方案。</p>\n<p>有人安利过cloudfare的R2存储，虽然可以白嫖，但cloudfare国内被白嫖太多，CDN国内节点经常会负载过高变卡甚至断连。正巧我有了NAS这个便宜宽敞的存储空间，我选择自建对象存储，内网穿透出去作为图床，自配CDN。</p>\n<h2 id=\"minio\"><a href=\"#minio\" class=\"headerlink\" title=\"minio\"></a>minio</h2><p><a href=\"https://min.io/docs/minio/container/index.html\">minio</a>是Amazon S3对象存储的开源对标项目。minio可以用docker容器部署，我的群晖NAS支持docker容器，我在搭open-webui时有现成的<a href=\"https://bipedalbit.net/2025/05/28/%E6%90%AD%E5%BB%BA%E7%A7%81%E6%9C%89LLM%E5%8A%A9%E6%89%8B%E5%B9%B3%E5%8F%B0/#5-2-3-frpc\">frp内网穿透方案</a>在公网暴露minio的API，这不就妥了。</p>\n<p>minio还是用docker-compose部署：</p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs yaml\"><span class=\"hljs-attr\">minio:</span><br>    <span class=\"hljs-attr\">image:</span> <span class=\"hljs-string\">ghcr.io/minio/minio:RELEASE.2025-04-22T22-12-26Z</span><br>    <span class=\"hljs-attr\">container_name:</span> <span class=\"hljs-string\">minio</span><br>    <span class=\"hljs-attr\">volumes:</span><br>      <span class=\"hljs-bullet\">-</span> <span class=\"hljs-string\">./data:/data</span><br>      <span class=\"hljs-bullet\">-</span> <span class=\"hljs-string\">./config:/root/.minio</span><br>    <span class=\"hljs-attr\">ports:</span><br>      <span class=\"hljs-bullet\">-</span> <span class=\"hljs-number\">9000</span><span class=\"hljs-string\">:9000</span><br>      <span class=\"hljs-bullet\">-</span> <span class=\"hljs-number\">9001</span><span class=\"hljs-string\">:9001</span><br>    <span class=\"hljs-attr\">environment:</span><br>      <span class=\"hljs-bullet\">-</span> <span class=\"hljs-string\">&#x27;MINIO_ROOT_USER=bipedalbit&#x27;</span><br>      <span class=\"hljs-bullet\">-</span> <span class=\"hljs-string\">&#x27;MINIO_ROOT_PASSWORD=****&#x27;</span><br>    <span class=\"hljs-attr\">restart:</span> <span class=\"hljs-string\">unless-stopped</span><br>    <span class=\"hljs-attr\">command:</span> [<span class=\"hljs-string\">&quot;server /data --console-address :9001&quot;</span>]<br></code></pre></td></tr></table></figure>\n<p><strong>注意2025.5.24发布的minio更新版本中，把minio的web控制台功能从社区版代码里移除了：<a href=\"https://github.com/minio/minio/releases/tag/RELEASE.2025-05-24T17-08-30Z\">RELEASE.2025-05-24T17-08-30Z</a></strong></p>\n<p><strong>挪到商业版里了，挣钱嘛，不寒碜。所以我这里没有用latest镜像，而是用了还有web控制台的最后一个版本。</strong></p>\n<p><strong><code>--console-address</code>如果不指定，会在每次启动容器时随机变化。</strong></p>\n<p>web控制台端口我不暴露到公网，安全保障。控制台界面跟普通S3对象存储的界面大同小异，能建桶，能配用户策略、桶策略，能配跨域白名单，能在界面操作桶文件。</p>\n<p><img src=\"https://cdn.minio.bipedalbit.net/bipedalbit-net-images/minio/minio_2025-06-07_20-38-12.png\" alt=\"minio登录页\"><br><img src=\"https://cdn.minio.bipedalbit.net/bipedalbit-net-images/minio/minio_2025-06-07_20-38-43.png\" alt=\"minio桶列表\"><br><img src=\"https://cdn.minio.bipedalbit.net/bipedalbit-net-images/minio/minio_2025-06-07_20-39-14.png\" alt=\"minio桶详情\"></p>\n<h2 id=\"CDN\"><a href=\"#CDN\" class=\"headerlink\" title=\"CDN\"></a>CDN</h2><p>有了对象存储，接下来就是选一个全球都有节点，不至于卡的、白嫖额度多的CDN。公布答案吧，我选了<a href=\"https://console.lightcdn.com/cdnResources\">LightCDN</a>，这家CDN的卖点是尽量让冷门区域也有节点覆盖，所以全球加速效果都不会太差，但也不会太快，对我来说足够了。</p>\n<p><img src=\"https://cdn.minio.bipedalbit.net/bipedalbit-net-images/lightcdn/lightcdn_2025-06-07_21-33-43.png\" alt=\"lightcdn请求统计\"><br><img src=\"https://cdn.minio.bipedalbit.net/bipedalbit-net-images/lightcdn/lightcdn_2025-06-07_21-34-38.png\" alt=\"lightcdn费用统计\"></p>\n<h1 id=\"Waline\"><a href=\"#Waline\" class=\"headerlink\" title=\"Waline\"></a>Waline</h1><p>多说评论插件挂了有一阵子了，一直没顾上换新方案。时间尺度一拉长，就发现依赖第三方服务的插件还是欠缺稳定性，不如自建。</p>\n<p>关于<a href=\"https://waline.js.org/\">waline</a>，我简要介绍一下：</p>\n<ul>\n<li><p>hexo的fluid主题对waline有适配支持，不需要手动做代码嵌入</p>\n</li>\n<li><p><a href=\"https://waline.js.org/guide/features/\">功能挺全</a>：</p>\n<ul>\n<li><p>能做基于Markdown的富文本评论编辑，支持微博表情</p>\n</li>\n<li><p>支持评论后台审核</p>\n</li>\n<li><p>支持匿名评论和用户注册</p>\n</li>\n<li><p>支持多语言界面</p>\n</li>\n<li><p>支持页面浏览量和评论数统计</p>\n</li>\n<li><p>支持邮件、微信、QQ、Telegram、Discord、飞书等各种webhook通知</p>\n</li>\n</ul>\n</li>\n<li><p><a href=\"https://waline.js.org/guide/database.html\">数据库部分</a>：可以有多种选择，SaaS可以用LeanCloud，DB就多了，MongoDB、MYSQL、TiDB、SQLite、PostgreSQL、腾讯的CloudBase，甚至能把github仓库当DB用。</p>\n</li>\n<li><p><a href=\"https://waline.js.org/guide/deploy/\">服务端部分</a>：可以在各种全栈应用托管平台部署，也可以自己在云主机上做独立部署。</p>\n</li>\n</ul>\n<p>我选择SQLite+独立部署服务端：</p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs yaml\"><span class=\"hljs-attr\">version:</span> <span class=\"hljs-string\">&#x27;3.8&#x27;</span><br><br><span class=\"hljs-attr\">services:</span><br>  <span class=\"hljs-attr\">waline:</span><br>    <span class=\"hljs-attr\">image:</span> <span class=\"hljs-string\">lizheming/waline:latest</span><br>    <span class=\"hljs-attr\">container_name:</span> <span class=\"hljs-string\">waline</span><br>    <span class=\"hljs-attr\">restart:</span> <span class=\"hljs-string\">unless-stopped</span><br>    <span class=\"hljs-attr\">ports:</span><br>      <span class=\"hljs-bullet\">-</span> <span class=\"hljs-number\">127.0</span><span class=\"hljs-number\">.0</span><span class=\"hljs-number\">.1</span><span class=\"hljs-string\">:8086:8360</span><br>    <span class=\"hljs-attr\">volumes:</span><br>      <span class=\"hljs-bullet\">-</span> <span class=\"hljs-string\">$&#123;PWD&#125;/data:/app/data</span><br>    <span class=\"hljs-attr\">environment:</span><br>      <span class=\"hljs-attr\">TZ:</span> <span class=\"hljs-string\">&#x27;Asia/Shanghai&#x27;</span><br>      <span class=\"hljs-attr\">SQLITE_PATH:</span> <span class=\"hljs-string\">&#x27;/app/data&#x27;</span><br>      <span class=\"hljs-attr\">JWT_TOKEN:</span> <span class=\"hljs-string\">$&#123;JWT_TOKEN&#125;</span><br>      <span class=\"hljs-attr\">SITE_NAME:</span> <span class=\"hljs-string\">&quot;BipedalBit&#x27;s blog&quot;</span><br>      <span class=\"hljs-attr\">SITE_URL:</span> <span class=\"hljs-string\">&#x27;https://bipedalbit.net&#x27;</span><br>      <span class=\"hljs-attr\">SECURE_DOMAINS:</span> <span class=\"hljs-string\">&#x27;bipedalbit.net,****,****&#x27;</span><br>      <span class=\"hljs-attr\">SERVER_URL:</span> <span class=\"hljs-string\">&#x27;https://****&#x27;</span><br>      <span class=\"hljs-attr\">AUTHOR_EMAIL:</span> <span class=\"hljs-string\">&#x27;****&#x27;</span><br>      <span class=\"hljs-comment\">#LEAN_ID: $&#123;LEAN_ID&#125;</span><br>      <span class=\"hljs-comment\">#LEAN_KEY: $&#123;LEAN_KEY&#125;</span><br>      <span class=\"hljs-comment\">#LEAN_MASTER_KEY: $&#123;LEAN_MASTER_KEY&#125;</span><br>      <span class=\"hljs-attr\">SMTP_SERVICE:</span> <span class=\"hljs-string\">&#x27;QQ&#x27;</span><br>      <span class=\"hljs-attr\">SMTP_USER:</span> <span class=\"hljs-string\">$&#123;SMTP_USER&#125;</span><br>      <span class=\"hljs-attr\">SMTP_PASS:</span> <span class=\"hljs-string\">$&#123;SMTP_PASS&#125;</span><br>      <span class=\"hljs-attr\">SENDER_NAME:</span> <span class=\"hljs-string\">&#x27;bot&#x27;</span><br>      <span class=\"hljs-attr\">SENDER_EMAIL:</span> <span class=\"hljs-string\">&#x27;****&#x27;</span><br>      <span class=\"hljs-attr\">IPQPS:</span> <span class=\"hljs-number\">5</span><br>      <span class=\"hljs-attr\">COMMENT_AUDIT:</span> <span class=\"hljs-string\">&#x27;false&#x27;</span><br></code></pre></td></tr></table></figure>\n\n<ul>\n<li><p>老规矩，不直接暴露端口到公网，nginx做汇聚入口和反向代理。</p>\n</li>\n<li><p>除了官方文档里提到的功能，还能配跨域白名单、QPS限制。</p>\n</li>\n<li><p>sqlite部署方式有点尴尬，需要从github仓库自己下载初始化好的<a href=\"https://github.com/walinejs/waline/blob/main/assets/waline.sqlite\">waline.sqlite文件</a>挂载进容器。</p>\n</li>\n</ul>\n<p><img src=\"https://cdn.minio.bipedalbit.net/bipedalbit-net-images/waline/waline_2025-06-07_22-53-58.png\" alt=\"waline评论管理\"><br><img src=\"https://cdn.minio.bipedalbit.net/bipedalbit-net-images/waline/waline_2025-06-07_22-55-19.png\" alt=\"waline用户管理\"><br><img src=\"https://cdn.minio.bipedalbit.net/bipedalbit-net-images/waline/waline_2025-06-07_22-54-42.png\" alt=\"waline用户编辑\"></p>\n",
            "tags": [
                "hexo",
                "NAS",
                "minio",
                "CDN",
                "waline"
            ]
        },
        {
            "id": "https://bipedalbit.net/2016/04/25/%E5%88%A9%E7%94%A8Dropbox%E5%AE%9E%E7%8E%B0%E5%AE%9E%E6%97%B6%E5%90%8C%E6%AD%A5%E7%9A%84%E9%9D%99%E6%80%81%E7%AB%99/",
            "url": "https://bipedalbit.net/2016/04/25/%E5%88%A9%E7%94%A8Dropbox%E5%AE%9E%E7%8E%B0%E5%AE%9E%E6%97%B6%E5%90%8C%E6%AD%A5%E7%9A%84%E9%9D%99%E6%80%81%E7%AB%99/",
            "title": "利用Dropbox实现实时同步的静态站",
            "date_published": "2016-04-25T06:05:09.000Z",
            "content_html": "<p>&nbsp;&nbsp;&nbsp; 上个周末正在练习nginx静态站服务器功能的基本配置，忽然想到一个点子。既然我有现成的VPS可以用，而且只是用来搭ShadowSocks服务器科学上网用，不拿来做建站练习实在有点浪费。之前早就把VPS和手头各个平台上的ShadowSocks+Dropbox环境配好了，那为什么不干脆在VPS的Dropbox文件夹里建站呢？自动同步，多终端随处修改，应该会比Github Pages更方便。试了一下，结果亦可赛艇。</p>\n<span id=\"more\"></span>\n<h3 id=\"VPS\"><a href=\"#VPS\" class=\"headerlink\" title=\"VPS\"></a>VPS</h3><p>&nbsp;&nbsp;&nbsp; VPS的选择主要看需要，论国内访问速度当然还是BAT和新浪之类的国产云主机最好，但是如果你想顺便用来科学上网，那么就得选国外VPS服务商了。一般来说，提起国外的网络服务运营商，总是想起欧美的，尤其是美国的，然而事实上，日本的VPS产业也很发达。大名鼎鼎的<a href=\"https://www.linode.com/\">Linode</a>、<a href=\"https://www.conoha.jp/zh/\">Conoha</a>等服务商，因为机房离国内近，相对美国的VPS有了速度优势。最近可能意识到墙内市场的潜力，有的日本VPS服务明显做的很贴咱的心了，比如我选的<a href=\"https://www.z.com/\">z.com</a>，它就是Conoha重新套了个壳，900日元每月的开销不算便宜也不很贵，但是它能用支付宝结帐！</p>\n<h3 id=\"系统环境\"><a href=\"#系统环境\" class=\"headerlink\" title=\"系统环境\"></a>系统环境</h3><p>&nbsp;&nbsp;&nbsp; 要搭服务器，不论什么功能，稳定性是很重要的，虽然巨硬和IBM也分别有server产品，但是咱用不起，挑个Linux系统比较合适，至于Mac OS，你是要搭服务器，又不是要去星巴克。我Linux入门时选择的是最流行的发行版Ubuntu，于是VPS也挑了Ubuntu 14.04LTS的镜像，使用和练习都比较方便，上手快，国内大家爱用的还有CentOS和RedHat。就别选什么Desktop镜像了，DE占空间又浪费资源，就算有远程桌面，也没有必要用，SSH连接足矣。把公钥放Github，wget到服务器~&#x2F;.ssh目录，改个名叫authorized_keys就行，多个公钥可以都放authorized_keys里面，一个一行就好。</p>\n<h3 id=\"Dropbox\"><a href=\"#Dropbox\" class=\"headerlink\" title=\"Dropbox\"></a>Dropbox</h3><p>&nbsp;&nbsp;&nbsp; Dropbox是个云盘，跟国内遍地都是的云盘有几个不同点，首先是资历老，然后给的免费空间少（XDDDD），2GB，跨平台做得好，几乎所有系统平台都有客户端，最重要的是有一个文件实时同步功能（也许正是这个功能限制了免费空间的大小），最后，是的，国外的好东西一般是要被墙的，Dropbox也不例外。会科学上网的同学们可以各显神通去<a href=\"https://www.dropbox.com/\">官网</a>注册，下客户端试用一下。在VPS上装个Dropbox用来传文件简直方便，VPS网快，墙内下不动的东西也可以VPS下完从Dropbox拖回来。据说国内的金山快盘可以作为Dropbox的替代品，改天做个评测再发博文介绍下。别跟我提百度云，且不论它没有官方Linux客户端且免费空间太大，我对百度有偏见。<br>&nbsp;&nbsp;&nbsp; 这篇文用到的就是Dropbox的自动同步功能，在各个终端的Dropbox文件夹内，内容都与云端进行实时同步。既然是个文件夹，那么里面放一个静态站也没有什么不可以了，2GB绰绰有余。</p>\n<h3 id=\"Nginx\"><a href=\"#Nginx\" class=\"headerlink\" title=\"Nginx\"></a>Nginx</h3><p>&nbsp;&nbsp;&nbsp; <a href=\"http://nginx.org/\">Nginx</a>读作engine X，是由Igor Sysoev（俄罗斯籍）为俄罗斯访问量第二的Rambler.ru站点开发的，第一个公开版本0.1.0发布于2004年10月4日。其将源代码以类BSD许可证的形式发布，因它的稳定性、丰富的功能集、示例配置文件和低系统资源的消耗而闻名。主要功能为静态网站的服务器、多服务端的负载均衡服务器即反向代理服务器。配置简单、高效、轻。既然是做静态站，我首选了Nginx作为服务器，Apache有点笨重，不做动态站就先不装了。</p>\n<h3 id=\"Hexo\"><a href=\"#Hexo\" class=\"headerlink\" title=\"Hexo\"></a>Hexo</h3><p>&nbsp;&nbsp;&nbsp; 做什么样的静态站呢？这次直接把我的Hexo博客拿来做实验。<a href=\"https://bipedalbit.net/2016/4/24/hexo%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA/\">上篇文</a>提到过，Hexo是个静态博客站生成器，<code>hexo g</code>命令执行后，Hexo项目目录的public子目录下就是静态站的确切内容了。可以干脆把Hexo项目目录放在Dropbox文件夹中，每次<code>hexo g</code>之后，自动更新静态站内容，同时Dropbox自动把静态站同步到VPS，VPS的Nginx不需要更改配置因为地址映射没有变化。于是我们现在可以在本地修改Hexo博客后自动发布更新到直连外网的VPS，还可以在任意一个向Github分发过SSH公钥的终端向Github Pages发布新的静态站内容。<br>&nbsp;&nbsp;&nbsp; 不知到你们想到了什么，我觉得这个套路可以使VPS上维护一个经常预更新的静态站alpha版，Github Pages上维护一个比较稳定的静态站beta版。</p>\n",
            "tags": [
                "nginx",
                "hexo",
                "vps",
                "dropbox"
            ]
        },
        {
            "id": "https://bipedalbit.net/2016/04/24/hexo%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA/",
            "url": "https://bipedalbit.net/2016/04/24/hexo%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA/",
            "title": "hexo博客搭建",
            "date_published": "2016-04-24T13:02:39.000Z",
            "content_html": "<p>&nbsp;&nbsp;&nbsp; 转眼三个多月没更博文了，并没有荒废只是有点忙。攒了很多想写的东西，先填个拖了很久的坑：我这个博客是怎么搭起来的。<br>&nbsp;&nbsp;&nbsp; 总的来说，我的博客是由Github Pages维护，本地用Hexo管理的一个静态博客。这篇文里我将介绍搭建Github Pages+Hexo博客的过程。</p>\n<span id=\"more\"></span>\n<p>&nbsp;&nbsp;&nbsp; 在讲搭建流程之前需要铺垫一下，介绍几个基本概念，Github Pages、Hexo、域名和DNS服务。</p>\n<h3 id=\"Github-Pages\"><a href=\"#Github-Pages\" class=\"headerlink\" title=\"Github Pages\"></a>Github Pages</h3><p>&nbsp;&nbsp;&nbsp; 如果想搭建一个自己的博客，首先你需要一个7×24不间断服务的稳定服务器。一般来说，geek们不会自己买一个，我们可以租一个云服务器。有更好的选择吗？有。我们也可以找到一些免费的云空间，比如新浪的SAE（以后没准就不免费了），还有我要讲的Github Pages。Github Pages是Github（如果你不知道Github是什么可以自己百度，这里我不太想解释）提供的一项福利，帮助广大geek们维护一个静态网站空间。静态网站就是页面内容不会随着数据库中数据的变化而动态的发生变化的网站，各大购物网站都是典型的动态网站。通常个人博客主要包含静态内容，就算需要修改更新，手动处理也完全足够，评论系统除外，但评论系统可以用第三方插件。于是这里有了分歧，一部分人选择了自己管理评论系统的数据库，还想偶尔在网站上玩点酷炫的动态网站花活，比如挂个网页游戏或者弹幕播放器，他们需要一个完全控制的云服务器，如SAE、百度云、腾讯云、Linode、Conoha等等；另一部分人希望让博客单纯一点，静态网站是更好的选择，Github向每一个用户帐号免费提供一个静态网站空间。<br>&nbsp;&nbsp;&nbsp; Github Page使用起来很简单，它的<a href=\"https://pages.github.com/\">网站首页</a>上有讲解，其实就是在Github新建一个repository，命名为username.github.io，其中username为你的Github用户名。这个repository就是你的静态网站空间了，访问它可以使用刚才的username.github.io，也就是Github Pages的二级域名。如果你是Github的用户，接下来你一定知道怎么更新网站内容了。</p>\n<h3 id=\"Hexo\"><a href=\"#Hexo\" class=\"headerlink\" title=\"Hexo\"></a>Hexo</h3><p>&nbsp;&nbsp;&nbsp; Hexo是一个开源的静态博客生成器，用node.js开发，作者是台湾大学生tommy351。这里我要提一句，node.js不是js，是基于谷歌v8引擎（js解析引擎）开发的一种服务端语言，语法与js没有什么两样，可以在http协议外（使用socket.io包）实现区别于AJAX的服务器主动推，鼓吹面向过程、基于消息机制的函数异步处理特性。Hexo封装了不止一种对免费服务器空间的接口，其中也包括Github的。这篇文里我准备介绍的是Github Pages搭配Hexo的搭建方式。</p>\n<h3 id=\"域名与DNS\"><a href=\"#域名与DNS\" class=\"headerlink\" title=\"域名与DNS\"></a>域名与DNS</h3><p>&nbsp;&nbsp;&nbsp; 要怎么访问一个网站？你当然可以直接访问网站的IP地址，但是这不方便，大家一般都使用域名（Domain）。域名最右边的一节是域名后缀，通常用于标识域名类型，域名最右边的两节xxx.xxx作为一个整体通常表示一个顶级域名。它的左边可以再加若干节，如果加了，那些就都是顶级域名下的子域名了。为了完成特定域名（包括子域名）到特定IP的映射，需要一个DNS（Domain Name System）服务器，它将对特定域名的请求转发到特定的IP地址。</p>\n<h3 id=\"Github-Pages-Hexo环境搭建\"><a href=\"#Github-Pages-Hexo环境搭建\" class=\"headerlink\" title=\"Github Pages+Hexo环境搭建\"></a>Github Pages+Hexo环境搭建</h3><p>&nbsp;&nbsp;&nbsp; Hexo有一些依赖环境，但是它没有现成的安装包，开源项目嘛，无可厚非。首先你需要安装node.js环境，大家系统平台多种多样，怎么装就自己去<a href=\"http://nodejs.cn/\">node官网</a>上看吧；git客户端也是要装的，同理也自己去<a href=\"https://git-scm.com/downloads\">官网</a>看。此外我们还需要分发个SSH证书，就是把你计算机的公钥在Github帐号里复制一份，这样通过SSH方式连接Github时就可以验证你的身份，就不用输用户名密码了。而Hexo连接Github的方式就是走的SSH方式，所以这个步骤是必要的。win平台通常用SSH Client管理SSH连接，或者也可以用终端形式的putty或者SSH Secure Shell；Ubuntu下是<code>sudo apt-get install openssh-server</code>；CentOS下是<code>sudo yum install openssh-server</code>；Mac OS自带SSH客户端。私钥公钥生成和端口配置什么的我不是很想全都介绍，说个Ubuntu的吧，比较简单。<br>&nbsp;&nbsp;&nbsp; 没配git帐号的先配一下：</p>\n<pre><code class=\"hljs\">git config --global user.email &quot;你的邮箱&quot;\ngit config --global user.name &quot;你的Github用户名&quot;\n</code></pre>\n<p>&nbsp;&nbsp;&nbsp; 生成SSH密钥对：</p>\n<pre><code class=\"hljs\">ssh -keygen -t rsa -C&quot;前面配git时填过的邮箱&quot;\n</code></pre>\n<p>&nbsp;&nbsp;&nbsp; 然后一路回车，然后你在<code>~/.ssh</code>目录下就有了id_rsa和id_rsa.pub两个文件，它们分别是你的私钥和公钥，你需要把私钥登记一下：</p>\n<pre><code class=\"hljs\">ssh-add id_rsa\n</code></pre>\n<p>&nbsp;&nbsp;&nbsp; 接下来就是分发公钥了，你可以手动进id_rsa.pub复制公钥内容，也可以用系统工具复制：</p>\n<pre><code class=\"hljs\">xclip -selection c  ~/.ssh/id_rsa.pub\n</code></pre>\n<p>&nbsp;&nbsp;&nbsp; 然后登录Github并<a href=\"https://github.com/settings/ssh\">Add SSH Key</a>，给新公钥起个名粘贴进去就好。然后测试一下：</p>\n<pre><code class=\"hljs\">ssh -T git@github.com\n</code></pre>\n<p>&nbsp;&nbsp;&nbsp; 提示信息包含“successfully authenticated”就算成功了。如果有问题，可以重新设置，常见问题请参考：<br><a href=\"https://help.github.com/articles/generating-an-ssh-key/\">GitHub Help - Generating SSH Keys</a><br><a href=\"https://help.github.com/articles/error-permission-denied-publickey/\">GitHub Help - Error Permission denied (publickey)</a><br>&nbsp;&nbsp;&nbsp; 接下来是为node安装Hexo包：</p>\n<pre><code class=\"hljs\">npm install -g hexo\n</code></pre>\n<p>&nbsp;&nbsp;&nbsp; Hexo封装了一些博客管理接口：<br>\t<br>\thexo init <folder>  # 初始化目录，可以指定目录地址，我更喜欢进入目录后hexo init一下<br>\thexo n “title” # 创建新文章，你会在&#x2F;source&#x2F;_post目录下找到包含title的新md文档，你可以编辑它<br>\thexo s # 在本地查起服务查看效果，默认是访问0.0.0.0:4000<br>\thexo g # 为博客重新生成静态页面<br>\thexo d # 同步到Github Pages空间</p>\n<h3 id=\"写博文\"><a href=\"#写博文\" class=\"headerlink\" title=\"写博文\"></a>写博文</h3><p>&nbsp;&nbsp;&nbsp; 前面提到过，<code>hexo n</code>之后我们就获得了一个新md文档，接下来你需要按照Markdown语法编辑这个文档。但Hexo的博文还需要包含一些必要内容以辅助页面关联及效果：</p>\n<pre><code class=\"hljs\">title: postName #文章页面上的显示名称，可以任意修改，不会出现在URL中\ndate: 2016-4-25 11:30:16 #文章生成时间，一般不改，当然也可以任意修改\ncategories: #文章分类目录，可以为空，注意:后面有个空格\ntags: #文章标签，可空，多标签请用格式[tag1,tag2,tag3]，注意:后面有个空格\nphotos: #fancybox功能将要显示是图片集合\n- http://bruce.u.qiniudn.com/2013/11/27/reading/photos-0.jpg\n- http://bruce.u.qiniudn.com/2013/11/27/reading/photos-1.jpg\n---\n摘要\n&lt;!--more--&gt;\n这里开始使用markdown格式输入你的正文。\n</code></pre>\n<p>&nbsp;&nbsp;&nbsp; 至于Markdown语法，读者可以自行百度，网上很多。写完保存之后可以先<code>hexo s</code>一下，去0.0.0.0:4000看效果，如果觉得满意，再<code>hexo g</code>生成静态页面并<code>hexo d</code>同步到Github Pages。注意这里生成的整个静态网站页面都在&#x2F;public子目录下，你完全可以起一个服务器把本地80口映射到这里。</p>\n<h3 id=\"主题安装\"><a href=\"#主题安装\" class=\"headerlink\" title=\"主题安装\"></a>主题安装</h3><p>&nbsp;&nbsp;&nbsp; Hexo迄今为止已经衍生出了很多主题，主题列表<a href=\"https://github.com/hexojs/hexo/wiki/Themes\">Hexo Themes</a>，我的博客使用的是<a href=\"https://github.com/xiangming/landscape-plus\">Landscape plus</a>，一个专为中国大陆用户做过调整的Hexo主题，别的Hexo主题读者可以自己百度一下。<code>hexo init</code>一个目录之后，把选定的主题<code>git clone</code>到Hexo目录的themes子目录下，然后编辑&#x2F;_config.yml：</p>\n<pre><code class=\"hljs\">theme: themename\n</code></pre>\n<p>&nbsp;&nbsp;&nbsp; 然后配置一下主题下的_config.yml：<br>\t<br>\tmenu: #配置页头显示哪些菜单<br>\t#  Home: &#x2F;<br>\t  Archives: &#x2F;archives<br>\t  Reading: &#x2F;reading<br>\t  About: &#x2F;about<br>\t#  Guestbook: &#x2F;about</p>\n<pre><code class=\"hljs\">excerpt_link: Read More #摘要链接文字\narchive_yearly: false #按年存档\n\nwidgets: #配置页脚显示哪些小挂件\n\t- category\n#  - tag\n\t- tagcloud\n\t- recent_posts\n#  - blogroll\n\nblogrolls: #友情链接\n\t- sitename: http://site.address\n\t- sitename: http://site.address\n\t- sitename: http://site.address\n\nfancybox: true #是否开启fancybox效果，就是文章开头加一个电子相册的感觉\n\nduoshuo_shortname: username #多说账号\n\ngoogle_analytics:\nrss:\n</code></pre>\n<p>&nbsp;&nbsp;&nbsp; 要更新主题只需要从Github拉取主题内容即可<code>cd themes/modernist</code>然后<code>git pull</code>。</p>\n<h3 id=\"评论插件\"><a href=\"#评论插件\" class=\"headerlink\" title=\"评论插件\"></a>评论插件</h3><p>&nbsp;&nbsp;&nbsp; 有很多免费的第三方评论插件提供商，你可以通过简单的配置使用他们的数据库管理你网站的评论数据，hexo默认集成的是Disqus，但是有GFW存在，所以我选择了国内的<a href=\"http://duoshuo.com/\">多说</a>。直接用你的微博&#x2F;豆瓣&#x2F;人人&#x2F;百度&#x2F;开心网帐号登录多说，做一下基本设置。你也可以在多说后台自定义一下多说评论框的格式，比如评论框的位置，对于css设置，可以<a href=\"http://dev.duoshuo.com/docs/4ff1cfd0397309552c000017\">参考这里</a>。如果你是有的其他第三方评论系统，将通用代码粘贴到&#x2F;themes&#x2F;themename&#x2F;layout&#x2F;_partial&#x2F;comment.ejs里面：</p>\n<pre><code class=\"hljs\">&lt;% if (config.disqus_shortname &amp;&amp; page.comments)&#123; %&gt;\n&lt;section id=&quot;comment&quot;&gt;\n  #你的通用代码\n&lt;% &#125; %&gt;\n</code></pre>\n<h3 id=\"域名配置\"><a href=\"#域名配置\" class=\"headerlink\" title=\"域名配置\"></a>域名配置</h3><p>&nbsp;&nbsp;&nbsp; 国内域名服务商有万网、腾讯、阿里、美橙等等，国外推荐<a href=\"http://www.godaddy.com/\">狗爹（godaddy）</a>。<br>&nbsp;&nbsp;&nbsp; 买完域名你需要给域名指定DNS服务器。DNS服务商非常多，一般域名服务商和云主机服务商都提供DNS服务，我选择的是国内的<a href=\"http://www.dnspod.cn/\">DNSPod</a>，免费的，提供监测网站状态功能，还挺好用。<br>&nbsp;&nbsp;&nbsp; 域名服务商和DNS服务商那边的配置它们各自网站都会提供教程，自己网站空间中给静态网站绑定域名很简单，在网站根目录放一个叫CNAME的文档，里面填上你的域名就行了。</p>\n<h3 id=\"参考文章\"><a href=\"#参考文章\" class=\"headerlink\" title=\"参考文章\"></a>参考文章</h3><p><a href=\"http://ibruce.info/2013/11/22/hexo-your-blog/\">http://ibruce.info/2013/11/22/hexo-your-blog/</a>（大大的教程写的真心详细，基本就是这篇领我进门）</p>\n",
            "tags": [
                "github",
                "domain",
                "DNS",
                "hexo"
            ]
        }
    ]
}