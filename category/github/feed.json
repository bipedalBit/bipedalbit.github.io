{
    "version": "https://jsonfeed.org/version/1",
    "title": "Hacking to the gate! • All posts by \"github\" category",
    "description": "Bipedal Bit's blog",
    "home_page_url": "https://bipedalbit.net",
    "items": [
        {
            "id": "https://bipedalbit.net/2025/06/10/%E8%AE%B0%E4%B8%80%E6%AC%A1%E5%BC%80%E6%BA%90%E9%A1%B9%E7%9B%AE%E8%B4%A1%E7%8C%AE/",
            "url": "https://bipedalbit.net/2025/06/10/%E8%AE%B0%E4%B8%80%E6%AC%A1%E5%BC%80%E6%BA%90%E9%A1%B9%E7%9B%AE%E8%B4%A1%E7%8C%AE/",
            "title": "记一次开源项目贡献",
            "date_published": "2025-06-10T12:50:30.000Z",
            "content_html": "<p>mcpo项目是open-webui开源团队为标准化接入MCP工具而创建的mcp-server封装服务。记录一下给这个项目提交pr完成开源贡献的过程，也详细讲解这个pr中我的解bug思路。</p>\n<span id=\"more\"></span>\n<h1 id=\"前言\"><a href=\"#前言\" class=\"headerlink\" title=\"前言\"></a>前言</h1><p>给open-webui配各种mcp工具时，用了<a href=\"https://docs.openwebui.com/openapi-servers/mcp/\">mcpo</a>来对各种mcp-server做openapi规范的封装（实际上我只是希望用它的鉴权封装，虽然只是个简单的静态Bearer Token）。添加图表绘制工具<a href=\"https://github.com/antvis/mcp-server-chart\">mcp-server-chart</a>时，发现有报错，mcpo服务起不来。翻issue无果后，手痒了，提个pr吧。</p>\n<h1 id=\"科普之协作开发\"><a href=\"#科普之协作开发\" class=\"headerlink\" title=\"科普之协作开发\"></a>科普之协作开发</h1><p>现代协作软件开发场景中，会有多个开发人员在同一个项目中分工迭代软件物料。虽然通常会按模块（横向分工隔离）或版本（纵向分工隔离）的维度做分工，尽量保证协作开发时大家更新的物料不发生重叠，但实际上很难避免冲突。</p>\n<p>协同场景物料版本管理在我可见范围内的主流方案是svn和git。值得注意的是，一些纯客户端项目，和大部分游戏项目，都倾向使用svn做开发版本管理，这凸显了2个版本管理工具的主要区别：</p>\n<ul>\n<li><p>从场景角度看：</p>\n<ul>\n<li><p>git擅长针对代码或文本做充分的diff追踪，命令多操作细，主要基于分支做权限管理，开源社区生态好；</p>\n</li>\n<li><p>svn则可以对任意资源集做更精简的版本管理，还能做目录级别权限控制。</p>\n</li>\n</ul>\n</li>\n<li><p>从实现角度看：</p>\n<ul>\n<li><p>git的版本存储是分布式的，本地也会维护一份增量记录的完整版本历史，对代码、配置和少量文本资源来说，这足够了，但当项目中的多媒体甚至二进制资源文件多起来，磁盘占用会很可怕；</p>\n</li>\n<li><p>svn的版本存储是集中式的，本地不保留完整版本历史，每个分支做完整深拷贝冗余存储，所以通常不搞feature分支。</p>\n</li>\n</ul>\n</li>\n</ul>\n<p>总的来说，git是个代码版本管理工具，附带项目资源顺便管管还行，多了很伤；svn是个软件资源版本管理工具，diff追踪不会那么精细，但客户端负担小、资源权限管理细。</p>\n<h1 id=\"github开源贡献流程\"><a href=\"#github开源贡献流程\" class=\"headerlink\" title=\"github开源贡献流程\"></a>github开源贡献流程</h1><ol>\n<li>确认issue</li>\n<li>fork</li>\n<li>开发</li>\n<li>提交pr</li>\n<li>review</li>\n</ol>\n<h2 id=\"确认issue\"><a href=\"#确认issue\" class=\"headerlink\" title=\"确认issue\"></a>确认issue</h2><p>开源社区很大，如果一个开源项目足够活跃，那么很有可能项目issue里有人讨论过相同的问题或是相关的问题，开源社区就是容易给项目带来这种类似被动众测的buff。</p>\n<p>翻issue的主要目的有2个：</p>\n<ul>\n<li><p>找分析：用于快速定位问题场景和相关症结，定位坑后能绕就绕，绕不开也方便修。</p>\n</li>\n<li><p>找解法：如果急着用项目，issue里可能会发现一些没有审完的pr或者野生的release版本或者一些fix代码。</p>\n</li>\n</ul>\n<p>确认项目issue里没有合用的问题解法，而自己有解法且愿意做开源贡献时，就可以做下一步了。</p>\n<h2 id=\"fork\"><a href=\"#fork\" class=\"headerlink\" title=\"fork\"></a>fork</h2><p>github的常规开源贡献方式是fork项目到个人空间方便获取完全权限，然后进行分支操作和开发。</p>\n<p>如果你是项目的主创团队成员，也许你有权限直接在当前项目上创建自己的feature分支进行开发。</p>\n<p>例如，要fork mcpo项目可以点击项目github首页的fork按钮，进入<a href=\"https://github.com/open-webui/mcpo/fork\">fork发起页面</a>。</p>\n<p>选择fork项目到组织或个人空间，可以修改项目名和项目描述，可以选择是否只fork项目的main分支（github的默认项目主分支）。</p>\n<p>选分支时需要确认当前项目的分支逻辑，确保fork时包含希望合入代码的分支。例如，mcpo项目的主分支是main，开发分支是dev，所有feature分支需要在经过评审后合入dev分支，对dev分支做版本测试，dev分支在合适时机合入main分支并打上版本tag，打包发布对应release版本。</p>\n<h2 id=\"开发\"><a href=\"#开发\" class=\"headerlink\" title=\"开发\"></a>开发</h2><p>还是以这次我给mcpo项目提cr为例。问题背景我在pr的<a href=\"https://github.com/open-webui/mcpo/pull/174\">review issue</a>里有描述，大致上是这样：</p>\n<p>mcpo在给各种mcp-server做openapi规范封装时会自动生成接口文档，而接口文档的入参出参说明的生成需要走以下流程来完成：</p>\n<ol>\n<li>按照<a href=\"https://modelcontextprotocol.io/introduction\">MCP（Model Context Protocol）</a>这个协议，调用mcp server接口（目前有Stdio、SSE、StreamableHTTP三种通信模式），拉取输入、输出schema</li>\n<li>解析输入、输出schema，完成结构化</li>\n<li>根据结构化数据生成接口入参出参说明文档，用于进行接口文档渲染</li>\n</ol>\n<p>我在mcpo的配置文件里包含了<a href=\"https://github.com/antvis/mcp-server-chart\">mcp-server-chart</a>，试图正常启动mcpo服务：</p>\n<figure class=\"highlight json\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs json\"><span class=\"hljs-punctuation\">&#123;</span><br>  <span class=\"hljs-attr\">&quot;mcpServers&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-punctuation\">&#123;</span><br>    <span class=\"hljs-attr\">&quot;mcp-server-chart&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-punctuation\">&#123;</span><br>      <span class=\"hljs-attr\">&quot;command&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-string\">&quot;npx&quot;</span><span class=\"hljs-punctuation\">,</span><br>      <span class=\"hljs-attr\">&quot;args&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-punctuation\">[</span><br>        <span class=\"hljs-string\">&quot;-y&quot;</span><span class=\"hljs-punctuation\">,</span><br>        <span class=\"hljs-string\">&quot;@antv/mcp-server-chart&quot;</span><br>      <span class=\"hljs-punctuation\">]</span><br>    <span class=\"hljs-punctuation\">&#125;</span><br>  <span class=\"hljs-punctuation\">&#125;</span><br><span class=\"hljs-punctuation\">&#125;</span><br></code></pre></td></tr></table></figure>\n\n<p>发现报错了（捞个issue里的相同报错日志贴上来，懒得复现问题捞日志）：</p>\n<figure class=\"highlight coq\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs coq\">ERROR:      + Exception Group Traceback (most recent call last):<br>  |   <span class=\"hljs-type\">File</span> <span class=\"hljs-string\">&quot;/Users/ddrag/IdeaProjects/mcpo/.venv/lib/python3.11/site-packages/starlette/routing.py&quot;</span>, line <span class=\"hljs-number\">692</span>, <span class=\"hljs-built_in\">in</span> lifespan<br>  |     <span class=\"hljs-type\">async</span> <span class=\"hljs-built_in\">with</span> self.lifespan_context(app) <span class=\"hljs-built_in\">as</span> maybe_state:<br>  |   <span class=\"hljs-type\">File</span> <span class=\"hljs-string\">&quot;/opt/homebrew/Cellar/python@3.11/3.11.10/Frameworks/Python.framework/Versions/3.11/lib/python3.11/contextlib.py&quot;</span>, line <span class=\"hljs-number\">210</span>, <span class=\"hljs-built_in\">in</span> __aenter__<br>  |     <span class=\"hljs-type\">return</span> await anext(self.gen)<br>  |            <span class=\"hljs-type\">^^^^^^^^^^^^^^^^^^^^^</span><br><span class=\"hljs-type\">  |   File</span> <span class=\"hljs-string\">&quot;/Users/ddrag/IdeaProjects/mcpo/src/mcpo/main.py&quot;</span>, line <span class=\"hljs-number\">104</span>, <span class=\"hljs-built_in\">in</span> lifespan<br>  |     <span class=\"hljs-type\">async</span> <span class=\"hljs-built_in\">with</span> stdio_client(server_params) <span class=\"hljs-built_in\">as</span> (reader, writer):<br>  |   <span class=\"hljs-type\">File</span> <span class=\"hljs-string\">&quot;/opt/homebrew/Cellar/python@3.11/3.11.10/Frameworks/Python.framework/Versions/3.11/lib/python3.11/contextlib.py&quot;</span>, line <span class=\"hljs-number\">231</span>, <span class=\"hljs-built_in\">in</span> __aexit__<br>  |     <span class=\"hljs-type\">await</span> self.gen.athrow(typ, value, traceback)<br>  |   <span class=\"hljs-type\">File</span> <span class=\"hljs-string\">&quot;/Users/ddrag/IdeaProjects/mcpo/.venv/lib/python3.11/site-packages/mcp/client/stdio/__init__.py&quot;</span>, line <span class=\"hljs-number\">166</span>, <span class=\"hljs-built_in\">in</span> stdio_client<br>  |     <span class=\"hljs-type\">async</span> <span class=\"hljs-built_in\">with</span> (<br>  |   <span class=\"hljs-type\">File</span> <span class=\"hljs-string\">&quot;/Users/ddrag/IdeaProjects/mcpo/.venv/lib/python3.11/site-packages/anyio/_backends/_asyncio.py&quot;</span>, line <span class=\"hljs-number\">772</span>, <span class=\"hljs-built_in\">in</span> __aexit__<br>  |     <span class=\"hljs-type\">raise</span> BaseExceptionGroup(<br>  | <span class=\"hljs-type\">ExceptionGroup</span>: unhandled errors <span class=\"hljs-built_in\">in</span> a TaskGroup (<span class=\"hljs-number\">1</span> sub-exception)<br>  +-+---------------- <span class=\"hljs-number\">1</span> ----------------<br>    | <span class=\"hljs-type\">Exception</span> Group Traceback (most recent call last):<br>    |   <span class=\"hljs-type\">File</span> <span class=\"hljs-string\">&quot;/Users/ddrag/IdeaProjects/mcpo/.venv/lib/python3.11/site-packages/mcp/client/stdio/__init__.py&quot;</span>, line <span class=\"hljs-number\">173</span>, <span class=\"hljs-built_in\">in</span> stdio_client<br>    |     <span class=\"hljs-type\">yield</span> read_stream, write_stream<br>    |   <span class=\"hljs-type\">File</span> <span class=\"hljs-string\">&quot;/Users/ddrag/IdeaProjects/mcpo/src/mcpo/main.py&quot;</span>, line <span class=\"hljs-number\">105</span>, <span class=\"hljs-built_in\">in</span> lifespan<br>    |     <span class=\"hljs-type\">async</span> <span class=\"hljs-built_in\">with</span> ClientSession(reader, writer) <span class=\"hljs-built_in\">as</span> session:<br>    |   <span class=\"hljs-type\">File</span> <span class=\"hljs-string\">&quot;/Users/ddrag/IdeaProjects/mcpo/.venv/lib/python3.11/site-packages/anyio/_backends/_asyncio.py&quot;</span>, line <span class=\"hljs-number\">772</span>, <span class=\"hljs-built_in\">in</span> __aexit__<br>    |     <span class=\"hljs-type\">raise</span> BaseExceptionGroup(<br>    | <span class=\"hljs-type\">ExceptionGroup</span>: unhandled errors <span class=\"hljs-built_in\">in</span> a TaskGroup (<span class=\"hljs-number\">1</span> sub-exception)<br>    +-+---------------- <span class=\"hljs-number\">1</span> ----------------<br>      | <span class=\"hljs-type\">Traceback</span> (most recent call last):<br>      |   <span class=\"hljs-type\">File</span> <span class=\"hljs-string\">&quot;/Users/ddrag/IdeaProjects/mcpo/src/mcpo/main.py&quot;</span>, line <span class=\"hljs-number\">107</span>, <span class=\"hljs-built_in\">in</span> lifespan<br>      |     <span class=\"hljs-type\">await</span> create_dynamic_endpoints(app, api_dependency=api_dependency)<br>      |   <span class=\"hljs-type\">File</span> <span class=\"hljs-string\">&quot;/Users/ddrag/IdeaProjects/mcpo/src/mcpo/main.py&quot;</span>, line <span class=\"hljs-number\">43</span>, <span class=\"hljs-built_in\">in</span> create_dynamic_endpoints<br>      |     <span class=\"hljs-type\">form_model_fields</span> = get_model_fields(<br>      |                         <span class=\"hljs-type\">^^^^^^^^^^^^^^^^^</span><br><span class=\"hljs-type\">      |   File</span> <span class=\"hljs-string\">&quot;/Users/ddrag/IdeaProjects/mcpo/src/mcpo/utils/main.py&quot;</span>, line <span class=\"hljs-number\">182</span>, <span class=\"hljs-built_in\">in</span> get_model_fields<br>      |     <span class=\"hljs-type\">python_type_hint</span>, pydantic_field_info = _process_schema_property(<br>      |                                             <span class=\"hljs-type\">^^^^^^^^^^^^^^^^^^^^^^^^^</span><br><span class=\"hljs-type\">      |   File</span> <span class=\"hljs-string\">&quot;/Users/ddrag/IdeaProjects/mcpo/src/mcpo/utils/main.py&quot;</span>, line <span class=\"hljs-number\">84</span>, <span class=\"hljs-built_in\">in</span> _process_schema_property<br>      |     <span class=\"hljs-type\">type_hint</span>, <span class=\"hljs-keyword\">_</span> = _process_schema_property(<br>      |                    <span class=\"hljs-type\">^^^^^^^^^^^^^^^^^^^^^^^^^</span><br><span class=\"hljs-type\">      |   File</span> <span class=\"hljs-string\">&quot;/Users/ddrag/IdeaProjects/mcpo/src/mcpo/utils/main.py&quot;</span>, line <span class=\"hljs-number\">70</span>, <span class=\"hljs-built_in\">in</span> _process_schema_property<br>      |     <span class=\"hljs-type\">assert</span> ref <span class=\"hljs-built_in\">in</span> schema_defs, <span class=\"hljs-string\">&quot;Custom field not found&quot;</span><br>      |            <span class=\"hljs-type\">^^^^^^^^^^^^^^^^^^</span><br><span class=\"hljs-type\">      | TypeError</span>: argument of type &#x27;NoneType&#x27; is not iterable<br>      +------------------------------------<br></code></pre></td></tr></table></figure>\n\n<p>我们可以看看这个<code>mcpo/src/mcpo/utils/main.py</code>里的<code>_process_schema_property()</code>函数在做什么：</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br><span class=\"line\">131</span><br><span class=\"line\">132</span><br><span class=\"line\">133</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs python\"><span class=\"hljs-keyword\">def</span> <span class=\"hljs-title function_\">_process_schema_property</span><br>(<br>    _model_cache: <span class=\"hljs-type\">Dict</span>[<span class=\"hljs-built_in\">str</span>, <span class=\"hljs-type\">Type</span>],<br>    prop_schema: <span class=\"hljs-type\">Dict</span>[<span class=\"hljs-built_in\">str</span>, <span class=\"hljs-type\">Any</span>],<br>    model_name_prefix: <span class=\"hljs-built_in\">str</span>,<br>    prop_name: <span class=\"hljs-built_in\">str</span>,<br>    is_required: <span class=\"hljs-built_in\">bool</span>,<br>    schema_defs: <span class=\"hljs-type\">Optional</span>[<span class=\"hljs-type\">Dict</span>] = <span class=\"hljs-literal\">None</span>,<br>) -&gt; <span class=\"hljs-built_in\">tuple</span>[<span class=\"hljs-type\">Union</span>[<span class=\"hljs-type\">Type</span>, <span class=\"hljs-type\">List</span>, ForwardRef, <span class=\"hljs-type\">Any</span>], FieldInfo]:<br>    <span class=\"hljs-string\">&quot;&quot;&quot;</span><br><span class=\"hljs-string\">    Recursively processes a schema property to determine its Python type hint</span><br><span class=\"hljs-string\">    and Pydantic Field definition.</span><br><span class=\"hljs-string\"></span><br><span class=\"hljs-string\">    Returns:</span><br><span class=\"hljs-string\">        A tuple containing (python_type_hint, pydantic_field).</span><br><span class=\"hljs-string\">        The pydantic_field contains default value and description.</span><br><span class=\"hljs-string\">    &quot;&quot;&quot;</span><br>    <span class=\"hljs-keyword\">if</span> <span class=\"hljs-string\">&quot;$ref&quot;</span> <span class=\"hljs-keyword\">in</span> prop_schema:<br>        ref = prop_schema[<span class=\"hljs-string\">&quot;$ref&quot;</span>]<br>        ref = ref.split(<span class=\"hljs-string\">&quot;/&quot;</span>)[-<span class=\"hljs-number\">1</span>]<br>        <span class=\"hljs-keyword\">assert</span> ref <span class=\"hljs-keyword\">in</span> schema_defs, <span class=\"hljs-string\">&quot;Custom field not found&quot;</span><br>        prop_schema = schema_defs[ref]<br><br>    prop_type = prop_schema.get(<span class=\"hljs-string\">&quot;type&quot;</span>)<br>    prop_desc = prop_schema.get(<span class=\"hljs-string\">&quot;description&quot;</span>, <span class=\"hljs-string\">&quot;&quot;</span>)<br><br>    default_value = ... <span class=\"hljs-keyword\">if</span> is_required <span class=\"hljs-keyword\">else</span> prop_schema.get(<span class=\"hljs-string\">&quot;default&quot;</span>, <span class=\"hljs-literal\">None</span>)<br>    pydantic_field = Field(default=default_value, description=prop_desc)<br><br>    <span class=\"hljs-comment\"># Handle the case where prop_type is missing but &#x27;anyOf&#x27; key exists</span><br>    <span class=\"hljs-comment\"># In this case, use data type from &#x27;anyOf&#x27; to determine the type hint</span><br>    <span class=\"hljs-keyword\">if</span> <span class=\"hljs-string\">&quot;anyOf&quot;</span> <span class=\"hljs-keyword\">in</span> prop_schema:<br>        type_hints = []<br>        <span class=\"hljs-keyword\">for</span> i, schema_option <span class=\"hljs-keyword\">in</span> <span class=\"hljs-built_in\">enumerate</span>(prop_schema[<span class=\"hljs-string\">&quot;anyOf&quot;</span>]):<br>            type_hint, _ = _process_schema_property(<br>                _model_cache,<br>                schema_option,<br>                <span class=\"hljs-string\">f&quot;<span class=\"hljs-subst\">&#123;model_name_prefix&#125;</span>_<span class=\"hljs-subst\">&#123;prop_name&#125;</span>&quot;</span>,<br>                <span class=\"hljs-string\">f&quot;choice_<span class=\"hljs-subst\">&#123;i&#125;</span>&quot;</span>,<br>                <span class=\"hljs-literal\">False</span>,<br>            )<br>            type_hints.append(type_hint)<br>        <span class=\"hljs-keyword\">return</span> <span class=\"hljs-type\">Union</span>[<span class=\"hljs-built_in\">tuple</span>(type_hints)], pydantic_field<br><br>    <span class=\"hljs-comment\"># Handle the case where prop_type is a list of types, e.g. [&#x27;string&#x27;, &#x27;number&#x27;]</span><br>    <span class=\"hljs-keyword\">if</span> <span class=\"hljs-built_in\">isinstance</span>(prop_type, <span class=\"hljs-built_in\">list</span>):<br>        <span class=\"hljs-comment\"># Create a Union of all the types</span><br>        type_hints = []<br>        <span class=\"hljs-keyword\">for</span> type_option <span class=\"hljs-keyword\">in</span> prop_type:<br>            <span class=\"hljs-comment\"># Create a temporary schema with the single type and process it</span><br>            temp_schema = <span class=\"hljs-built_in\">dict</span>(prop_schema)<br>            temp_schema[<span class=\"hljs-string\">&quot;type&quot;</span>] = type_option<br>            type_hint, _ = _process_schema_property(<br>                _model_cache, temp_schema, model_name_prefix, prop_name, <span class=\"hljs-literal\">False</span><br>            )<br>            type_hints.append(type_hint)<br><br>        <span class=\"hljs-comment\"># Return a Union of all possible types</span><br>        <span class=\"hljs-keyword\">return</span> <span class=\"hljs-type\">Union</span>[<span class=\"hljs-built_in\">tuple</span>(type_hints)], pydantic_field<br><br>    <span class=\"hljs-keyword\">if</span> prop_type == <span class=\"hljs-string\">&quot;object&quot;</span>:<br>        nested_properties = prop_schema.get(<span class=\"hljs-string\">&quot;properties&quot;</span>, &#123;&#125;)<br>        nested_required = prop_schema.get(<span class=\"hljs-string\">&quot;required&quot;</span>, [])<br>        nested_fields = &#123;&#125;<br><br>        nested_model_name = <span class=\"hljs-string\">f&quot;<span class=\"hljs-subst\">&#123;model_name_prefix&#125;</span>_<span class=\"hljs-subst\">&#123;prop_name&#125;</span>_model&quot;</span>.replace(<br>            <span class=\"hljs-string\">&quot;__&quot;</span>, <span class=\"hljs-string\">&quot;_&quot;</span><br>        ).rstrip(<span class=\"hljs-string\">&quot;_&quot;</span>)<br><br>        <span class=\"hljs-keyword\">if</span> nested_model_name <span class=\"hljs-keyword\">in</span> _model_cache:<br>            <span class=\"hljs-keyword\">return</span> _model_cache[nested_model_name], pydantic_field<br><br>        <span class=\"hljs-keyword\">for</span> name, schema <span class=\"hljs-keyword\">in</span> nested_properties.items():<br>            is_nested_required = name <span class=\"hljs-keyword\">in</span> nested_required<br>            nested_type_hint, nested_pydantic_field = _process_schema_property(<br>                _model_cache,<br>                schema,<br>                nested_model_name,<br>                name,<br>                is_nested_required,<br>                schema_defs,<br>            )<br><br>            <span class=\"hljs-keyword\">if</span> name_needs_alias(name):<br>                other_names = <span class=\"hljs-built_in\">set</span>().union(nested_properties, nested_fields, _model_cache)<br>                alias_name = generate_alias_name(name, other_names)<br>                aliased_field = Field(<br>                    default=nested_pydantic_field.default,<br>                    description=nested_pydantic_field.description,<br>                    alias=name<br>                )<br>                nested_fields[alias_name] = (nested_type_hint, aliased_field)<br>            <span class=\"hljs-keyword\">else</span>:<br>                nested_fields[name] = (nested_type_hint, nested_pydantic_field)<br><br>        <span class=\"hljs-keyword\">if</span> <span class=\"hljs-keyword\">not</span> nested_fields:<br>            <span class=\"hljs-keyword\">return</span> <span class=\"hljs-type\">Dict</span>[<span class=\"hljs-built_in\">str</span>, <span class=\"hljs-type\">Any</span>], pydantic_field<br><br>        NestedModel = create_model(nested_model_name, **nested_fields)<br>        _model_cache[nested_model_name] = NestedModel<br><br>        <span class=\"hljs-keyword\">return</span> NestedModel, pydantic_field<br><br>    <span class=\"hljs-keyword\">elif</span> prop_type == <span class=\"hljs-string\">&quot;array&quot;</span>:<br>        items_schema = prop_schema.get(<span class=\"hljs-string\">&quot;items&quot;</span>)<br>        <span class=\"hljs-keyword\">if</span> <span class=\"hljs-keyword\">not</span> items_schema:<br>            <span class=\"hljs-comment\"># Default to list of anything if items schema is missing</span><br>            <span class=\"hljs-keyword\">return</span> <span class=\"hljs-type\">List</span>[<span class=\"hljs-type\">Any</span>], pydantic_field<br><br>        <span class=\"hljs-comment\"># Recursively determine the type of items in the array</span><br>        item_type_hint, _ = _process_schema_property(<br>            _model_cache,<br>            items_schema,<br>            <span class=\"hljs-string\">f&quot;<span class=\"hljs-subst\">&#123;model_name_prefix&#125;</span>_<span class=\"hljs-subst\">&#123;prop_name&#125;</span>&quot;</span>,<br>            <span class=\"hljs-string\">&quot;item&quot;</span>,<br>            <span class=\"hljs-literal\">False</span>,  <span class=\"hljs-comment\"># Items aren&#x27;t required at this level,</span><br>            schema_defs,<br>        )<br>        list_type_hint = <span class=\"hljs-type\">List</span>[item_type_hint]<br>        <span class=\"hljs-keyword\">return</span> list_type_hint, pydantic_field<br><br>    <span class=\"hljs-keyword\">elif</span> prop_type == <span class=\"hljs-string\">&quot;string&quot;</span>:<br>        <span class=\"hljs-keyword\">return</span> <span class=\"hljs-built_in\">str</span>, pydantic_field<br>    <span class=\"hljs-keyword\">elif</span> prop_type == <span class=\"hljs-string\">&quot;integer&quot;</span>:<br>        <span class=\"hljs-keyword\">return</span> <span class=\"hljs-built_in\">int</span>, pydantic_field<br>    <span class=\"hljs-keyword\">elif</span> prop_type == <span class=\"hljs-string\">&quot;boolean&quot;</span>:<br>        <span class=\"hljs-keyword\">return</span> <span class=\"hljs-built_in\">bool</span>, pydantic_field<br>    <span class=\"hljs-keyword\">elif</span> prop_type == <span class=\"hljs-string\">&quot;number&quot;</span>:<br>        <span class=\"hljs-keyword\">return</span> <span class=\"hljs-built_in\">float</span>, pydantic_field<br>    <span class=\"hljs-keyword\">elif</span> prop_type == <span class=\"hljs-string\">&quot;null&quot;</span>:<br>        <span class=\"hljs-keyword\">return</span> <span class=\"hljs-literal\">None</span>, pydantic_field<br>    <span class=\"hljs-keyword\">else</span>:<br>        <span class=\"hljs-keyword\">return</span> <span class=\"hljs-type\">Any</span>, pydantic_field<br></code></pre></td></tr></table></figure>\n\n<p>这是一个可以被递归调用的函数，用来处理schema结构里的递归结构，我们可以对照一个schema的例子来理解，这是我从<a href=\"https://github.com/antvis/mcp-server-chart\">mcp-server-chart</a>项目里捞的<a href=\"https://github.com/antvis/mcp-server-chart/blob/3ec6d0893f7c0bbf09b8e6776a75dd92595ce934/__tests__/charts/fishbone-diagram.json\">一个工具的input schema</a>：</p>\n<figure class=\"highlight json\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs json\"><span class=\"hljs-punctuation\">&#123;</span><br>  <span class=\"hljs-attr\">&quot;name&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-string\">&quot;generate_fishbone_diagram&quot;</span><span class=\"hljs-punctuation\">,</span><br>  <span class=\"hljs-attr\">&quot;description&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-string\">&quot;Generate a fishbone diagram chart to uses a fish skeleton, like structure to display the causes or effects of a core problem, with the problem as the fish head and the causes/effects as the fish bones. It suits problems that can be split into multiple related factors.&quot;</span><span class=\"hljs-punctuation\">,</span><br>  <span class=\"hljs-attr\">&quot;inputSchema&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-punctuation\">&#123;</span><br>    <span class=\"hljs-attr\">&quot;$schema&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-string\">&quot;http://json-schema.org/draft-07/schema#&quot;</span><span class=\"hljs-punctuation\">,</span><br>    <span class=\"hljs-attr\">&quot;type&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-string\">&quot;object&quot;</span><span class=\"hljs-punctuation\">,</span><br>    <span class=\"hljs-attr\">&quot;properties&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-punctuation\">&#123;</span><br>      <span class=\"hljs-attr\">&quot;data&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-punctuation\">&#123;</span><br>        <span class=\"hljs-attr\">&quot;type&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-string\">&quot;object&quot;</span><span class=\"hljs-punctuation\">,</span><br>        <span class=\"hljs-attr\">&quot;properties&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-punctuation\">&#123;</span><br>          <span class=\"hljs-attr\">&quot;name&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-punctuation\">&#123;</span> <span class=\"hljs-attr\">&quot;type&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-string\">&quot;string&quot;</span> <span class=\"hljs-punctuation\">&#125;</span><span class=\"hljs-punctuation\">,</span><br>          <span class=\"hljs-attr\">&quot;children&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-punctuation\">&#123;</span><br>            <span class=\"hljs-attr\">&quot;type&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-string\">&quot;array&quot;</span><span class=\"hljs-punctuation\">,</span><br>            <span class=\"hljs-attr\">&quot;items&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-punctuation\">&#123;</span><br>              <span class=\"hljs-attr\">&quot;properties&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-punctuation\">&#123;</span><br>                <span class=\"hljs-attr\">&quot;name&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-punctuation\">&#123;</span> <span class=\"hljs-attr\">&quot;type&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-string\">&quot;string&quot;</span> <span class=\"hljs-punctuation\">&#125;</span><span class=\"hljs-punctuation\">,</span><br>                <span class=\"hljs-attr\">&quot;children&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-punctuation\">&#123;</span><br>                  <span class=\"hljs-attr\">&quot;type&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-string\">&quot;array&quot;</span><span class=\"hljs-punctuation\">,</span><br>                  <span class=\"hljs-attr\">&quot;items&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-punctuation\">&#123;</span><br>                    <span class=\"hljs-attr\">&quot;$ref&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-string\">&quot;#/properties/data/properties/children/items&quot;</span><br>                  <span class=\"hljs-punctuation\">&#125;</span><br>                <span class=\"hljs-punctuation\">&#125;</span><br>              <span class=\"hljs-punctuation\">&#125;</span><span class=\"hljs-punctuation\">,</span><br>              <span class=\"hljs-attr\">&quot;required&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-punctuation\">[</span><span class=\"hljs-string\">&quot;name&quot;</span><span class=\"hljs-punctuation\">]</span><span class=\"hljs-punctuation\">,</span><br>              <span class=\"hljs-attr\">&quot;type&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-string\">&quot;object&quot;</span><br>            <span class=\"hljs-punctuation\">&#125;</span><br>          <span class=\"hljs-punctuation\">&#125;</span><br>        <span class=\"hljs-punctuation\">&#125;</span><span class=\"hljs-punctuation\">,</span><br>        <span class=\"hljs-attr\">&quot;required&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-punctuation\">[</span><span class=\"hljs-string\">&quot;name&quot;</span><span class=\"hljs-punctuation\">]</span><span class=\"hljs-punctuation\">,</span><br>        <span class=\"hljs-attr\">&quot;description&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-string\">&quot;Data for fishbone diagram chart, such as, &#123; name: &#x27;main topic&#x27;, children: [&#123; name: &#x27;topic 1&#x27;, children: [&#123; name: &#x27;subtopic 1-1&#x27; &#125;] &#125;.&quot;</span><br>      <span class=\"hljs-punctuation\">&#125;</span><span class=\"hljs-punctuation\">,</span><br>      <span class=\"hljs-attr\">&quot;theme&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-punctuation\">&#123;</span><br>        <span class=\"hljs-attr\">&quot;default&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-string\">&quot;default&quot;</span><span class=\"hljs-punctuation\">,</span><br>        <span class=\"hljs-attr\">&quot;description&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-string\">&quot;Set the theme for the chart, optional, default is &#x27;default&#x27;.&quot;</span><span class=\"hljs-punctuation\">,</span><br>        <span class=\"hljs-attr\">&quot;enum&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-punctuation\">[</span><span class=\"hljs-string\">&quot;default&quot;</span><span class=\"hljs-punctuation\">,</span> <span class=\"hljs-string\">&quot;academy&quot;</span><span class=\"hljs-punctuation\">]</span><span class=\"hljs-punctuation\">,</span><br>        <span class=\"hljs-attr\">&quot;type&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-string\">&quot;string&quot;</span><br>      <span class=\"hljs-punctuation\">&#125;</span><span class=\"hljs-punctuation\">,</span><br>      <span class=\"hljs-attr\">&quot;width&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-punctuation\">&#123;</span><br>        <span class=\"hljs-attr\">&quot;type&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-string\">&quot;number&quot;</span><span class=\"hljs-punctuation\">,</span><br>        <span class=\"hljs-attr\">&quot;description&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-string\">&quot;Set the width of chart, default is 600.&quot;</span><span class=\"hljs-punctuation\">,</span><br>        <span class=\"hljs-attr\">&quot;default&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-number\">600</span><br>      <span class=\"hljs-punctuation\">&#125;</span><span class=\"hljs-punctuation\">,</span><br>      <span class=\"hljs-attr\">&quot;height&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-punctuation\">&#123;</span><br>        <span class=\"hljs-attr\">&quot;type&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-string\">&quot;number&quot;</span><span class=\"hljs-punctuation\">,</span><br>        <span class=\"hljs-attr\">&quot;description&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-string\">&quot;Set the height of chart, default is 400.&quot;</span><span class=\"hljs-punctuation\">,</span><br>        <span class=\"hljs-attr\">&quot;default&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-number\">400</span><br>      <span class=\"hljs-punctuation\">&#125;</span><br>    <span class=\"hljs-punctuation\">&#125;</span><span class=\"hljs-punctuation\">,</span><br>    <span class=\"hljs-attr\">&quot;required&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-punctuation\">[</span><span class=\"hljs-string\">&quot;data&quot;</span><span class=\"hljs-punctuation\">]</span><br>  <span class=\"hljs-punctuation\">&#125;</span><br><span class=\"hljs-punctuation\">&#125;</span><br></code></pre></td></tr></table></figure>\n\n<p>我们高效点，别浪费时间去理解问题全貌的每个细节，围绕引发报错的地方分析：</p>\n<ul>\n<li><p><code>assert ref in schema_defs, &quot;Custom field not found&quot;</code>这个断言是针对”$ref”字段的，而这个字段的值长这样：”#&#x2F;properties&#x2F;data&#x2F;properties&#x2F;children&#x2F;items”。</p>\n</li>\n<li><p><code>properties -&gt; data -&gt; properties -&gt; children -&gt; items</code>，这看起来是一条路径，指向这个input schema中的一个节点，而”$ref”就在这个节点内部。</p>\n</li>\n<li><p>函数中，断言前先取了”$ref”字段的最后一节也就是”items”，然后似乎打算在schema根节点上找到这个”items”，如果找不到就无法通过assert，没错我跟你们一样看不懂这操作，但我可以猜测。看起来这个if代码逻辑是假设了一个很窄的场景，很鸵鸟地打算出了问题再说，然而实际上真的遇到了假设之外的情况：</p>\n</li>\n</ul>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs python\"><span class=\"hljs-keyword\">if</span> <span class=\"hljs-string\">&quot;$ref&quot;</span> <span class=\"hljs-keyword\">in</span> prop_schema:<br>    ref = prop_schema[<span class=\"hljs-string\">&quot;$ref&quot;</span>]<br>    ref = ref.split(<span class=\"hljs-string\">&quot;/&quot;</span>)[-<span class=\"hljs-number\">1</span>]<br>    <span class=\"hljs-keyword\">assert</span> ref <span class=\"hljs-keyword\">in</span> schema_defs, <span class=\"hljs-string\">&quot;Custom field not found&quot;</span><br>    prop_schema = schema_defs[ref]<br></code></pre></td></tr></table></figure>\n\n<ul>\n<li><p>OK，大致搞清了状况，我们看看需要怎么让这个函数在这个场景能正常工作。函数主要包含了一堆ifelse逻辑分支，大致上是利用一个深度优先搜索来遍历schema节点树，完成这棵树的结构化的同时给每个节点分配两个东西：</p>\n<ul>\n<li><p>python_type_hint：大概是接口文档需要展示的入参出参值类型。</p>\n</li>\n<li><p>pydantic_field：是一个pydantic包的”字段”对象，看起来能定义一个字段的默认值、描述、别名。</p>\n</li>\n</ul>\n</li>\n<li><p>我们来看看type_hint和pydantic_field都是怎么来的吧，给大家节省时间快速翻译一下：看起来原作者基本上是把整个schema当做一个有向无环图，有”$ref”时只象征性检查引用schema根节点一级子节点的情况，处理很有限的一种环的场景。深度优先搜索到底，获得每个叶子节点的type，然后往上回溯组合出一些复合类型，比如Dict[str, Dict[str, str]]。至于schema_defs，默认值是<code>Field(default=None, description=&quot;&quot;)</code>。原来有兜底返回值的啊，那有救了。</p>\n</li>\n<li><p>我们挣扎一下看能不能给”$ref”一个很好看的真实字段信息，嗯需要给<code>properties.data.properties.children.items</code>造出一个复合类型，可是”$ref”造成循环引用了，递归个没完，总会有一个”$ref”拿不到类型。</p>\n</li>\n<li><p>既然这样，就放弃挣扎吧，我们缩小影响面，解决case先。具体case是一个造成循环引用的”$ref”字段”#&#x2F;properties&#x2F;data&#x2F;properties&#x2F;children&#x2F;items”，让我们看看手头还有什么，啊有个<code>model_name_prefix</code>一眼就是用来记深度优先节点路径的，用来当<code>_model_cache</code>的key，这个cache里面就放那些字段信息。好说，<code>model_name_prefix</code>跟”$ref”字段的含义基本等价，可以互相翻译。</p>\n</li>\n<li><p>debug一下，把断言失败时的”$ref”和<code>model_name_prefix</code>打印出来看看：</p>\n<ul>\n<li><p>“$ref”: “#&#x2F;properties&#x2F;data&#x2F;properties&#x2F;children&#x2F;items”</p>\n</li>\n<li><p><code>model_name_prefix</code>: “generate_fishbone_diagram_form_model_data_model_children_item_model_children”</p>\n</li>\n</ul>\n</li>\n<li><p>追了下调用链，”generate_fishbone_diagram_form_model”这个前缀是工具名称决定的，跟schema无关，剩下的对应关系其实很明显：</p>\n<ul>\n<li><p><code>_model_</code>对应<code>/properties/</code></p>\n</li>\n<li><p><code>_item</code>对应<code>/items</code></p>\n</li>\n</ul>\n</li>\n<li><p>这些是函数中的固有字段映射，分别用于处理object类节点和array成员节点。</p>\n</li>\n<li><p>我们把”$ref”翻译成prefix风格看看，”data_model_children_item”，<code>model_name_prefix</code>去掉固定前缀是”data_model_children_item_model_children”，足够了，前缀关系。</p>\n</li>\n<li><p>解法出来了：</p>\n</li>\n</ul>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs python\"><span class=\"hljs-keyword\">if</span> ref.startswith(<span class=\"hljs-string\">&quot;#/properties/&quot;</span>):<br>    <span class=\"hljs-comment\"># Remove common prefix in pathes.</span><br>    prefix_path = model_name_prefix.split(<span class=\"hljs-string\">&quot;_form_model_&quot;</span>)[-<span class=\"hljs-number\">1</span>]<br>    ref_path = ref.split(<span class=\"hljs-string\">&quot;#/properties/&quot;</span>)[-<span class=\"hljs-number\">1</span>]<br>    <span class=\"hljs-comment\"># Translate $ref path to model_name_prefix style.</span><br>    ref_path = ref_path.replace(<span class=\"hljs-string\">&quot;/properties/&quot;</span>, <span class=\"hljs-string\">&quot;_model_&quot;</span>)<br>    ref_path = ref_path.replace(<span class=\"hljs-string\">&quot;/items&quot;</span>, <span class=\"hljs-string\">&quot;_item&quot;</span>)<br>    <span class=\"hljs-comment\"># If $ref path is a prefix substring of model_name_prefix path,</span><br>    <span class=\"hljs-comment\"># there exists a circular reference.</span><br>    <span class=\"hljs-comment\"># The loop should be broke with a return to avoid exception.</span><br>    <span class=\"hljs-keyword\">if</span> prefix_path.startswith(ref_path):<br>        <span class=\"hljs-comment\"># <span class=\"hljs-doctag\">TODO:</span> Find the exact type hint for the $ref.</span><br>        <span class=\"hljs-keyword\">return</span> <span class=\"hljs-type\">Any</span>, Field(default=<span class=\"hljs-literal\">None</span>, description=<span class=\"hljs-string\">&quot;&quot;</span>)<br></code></pre></td></tr></table></figure>\n\n<ul>\n<li><p>我们给人把注释写清楚，有遗憾的地方也把TODO写好，相信后来人的智慧。</p>\n</li>\n<li><p>Be nice，补个单测，跟历史单测风格保持一致（乐，这项目存量单测全是给_process_schema_property函数写的）：</p>\n</li>\n</ul>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs python\"><span class=\"hljs-keyword\">def</span> <span class=\"hljs-title function_\">test_ref_to_parent_node</span>():<br>    schema = &#123;<span class=\"hljs-string\">&#x27;$ref&#x27;</span>: <span class=\"hljs-string\">&#x27;#/properties/data/properties/children/items&#x27;</span>&#125;<br>    result_type, result_field = _process_schema_property(<br>        _model_cache,<br>        schema,<br>        <span class=\"hljs-string\">&quot;generate_fishbone_diagram_form_model_data_model_children_item_model_children&quot;</span>,<br>        <span class=\"hljs-string\">&quot;item&quot;</span>,<br>        <span class=\"hljs-literal\">False</span>,<br>        &#123;&#125;<br>    )<br><br>    <span class=\"hljs-keyword\">assert</span> result_type == <span class=\"hljs-type\">Any</span><br>    <span class=\"hljs-keyword\">assert</span> result_field.description == <span class=\"hljs-string\">&quot;&quot;</span><br></code></pre></td></tr></table></figure>\n\n<ul>\n<li><code>pytest</code>自测通过，交代码。</li>\n</ul>\n<h2 id=\"提交pr\"><a href=\"#提交pr\" class=\"headerlink\" title=\"提交pr\"></a>提交pr</h2><p>如果你fork了当前项目，github项目主页能看到提pr（Pull Request）的提示，万一没看见，也可以点进”Pull requests”标签页，再点击”New pull request”按钮。</p>\n<p>选择来源仓库、分支和目标仓库、分支后，就可以点击”Create pull request”按钮，自动给你创建一个issue，用来自述你的pr，具体怎么写可以参考仓库里的历史pr issue，我的是这个：<a href=\"https://github.com/open-webui/mcpo/pull/174\">#174</a>。</p>\n<p>pr issue里需要说清你解决的问题场景和你的代码对当前项目的影响面，带上自测结果会更让人放心。</p>\n<p>能看到我在自己的fork项目里新建了一个feature分支：<a href=\"https://github.com/bipedalBit/mcpo/tree/fix-circular-schema-ref-exception\">fix-circular-schema-ref-exception</a></p>\n<h2 id=\"review\"><a href=\"#review\" class=\"headerlink\" title=\"review\"></a>review</h2><p>等待你的目标分支的代码评审人评审你的代码，在你的pr review中给出评审意见。</p>\n<p>我的pr评审人是仓库主Tim Jaeryang Baek，很客气，没challenge我，一个thanks后就给我一口气合了dev、main分支，甚至单开了一个release tag装我的pr。</p>\n<p>于是我没有被challenge和返工的流程示例可以展示了┑(￣Д ￣)┍</p>\n<p>close掉的pr issue里会提示代码已合，你可以删掉feature分支和fork项目。</p>\n",
            "tags": [
                "github",
                "mcpo",
                "svn"
            ]
        }
    ]
}